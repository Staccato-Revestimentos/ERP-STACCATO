-- MySQL Script generated by MySQL Workbench
-- Sat Apr 14 01:39:32 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`loja`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`loja` ;

CREATE TABLE IF NOT EXISTS `mydb`.`loja` (
  `idLoja` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `nomeFantasia` VARCHAR(45) NOT NULL,
  `razaoSocial` VARCHAR(60) NOT NULL,
  `tel` VARCHAR(18) NOT NULL,
  `tel2` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(20) NOT NULL,
  `sigla` VARCHAR(4) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NOT NULL,
  `codUF` INT(11) NOT NULL DEFAULT '0',
  `porcentagemFrete` DOUBLE NOT NULL DEFAULT '4',
  `valorMinimoFrete` DOUBLE NOT NULL DEFAULT '80',
  `certificadoSerie` VARCHAR(32) NULL DEFAULT NULL,
  `certificadoSenha` VARCHAR(45) NULL DEFAULT NULL,
  `porcentagemPIS` DOUBLE NULL DEFAULT NULL,
  `porcentagemCOFINS` DOUBLE NULL DEFAULT NULL,
  `custoTransporteTon` DOUBLE NULL DEFAULT NULL,
  `custoTransporte1` DOUBLE NULL DEFAULT NULL,
  `custoTransporte2` DOUBLE NULL DEFAULT NULL,
  `custoFuncionario` DOUBLE NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idLoja`),
  UNIQUE INDEX `idLoja_UNIQUE` (`idLoja` ASC),
  FULLTEXT INDEX `idxFT` (`descricao` ASC, `nomeFantasia` ASC, `razaoSocial` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`alcadas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`alcadas` ;

CREATE TABLE IF NOT EXISTS `mydb`.`alcadas` (
  `idAlcada` INT(11) NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `tipoFuncionario` VARCHAR(45) NOT NULL DEFAULT '',
  `debito` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `credito` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `cheque` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `dinheiro` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `boleto` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idAlcada`),
  UNIQUE INDEX `idAlcada_UNIQUE` (`idAlcada` ASC),
  INDEX `fk_Alçadas_Loja1_idx` (`idLoja` ASC),
  CONSTRAINT `fk_Alçadas_Loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`cfop_entr`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cfop_entr` ;

CREATE TABLE IF NOT EXISTS `mydb`.`cfop_entr` (
  `CFOP_DE` VARCHAR(18) NULL DEFAULT NULL,
  `CFOP_FE` VARCHAR(18) NULL DEFAULT NULL,
  `CFOP_IN` VARCHAR(18) NULL DEFAULT NULL,
  `NAT` VARCHAR(750) NULL DEFAULT NULL,
  `OBS` BLOB NULL DEFAULT NULL)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`cfop_sai`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cfop_sai` ;

CREATE TABLE IF NOT EXISTS `mydb`.`cfop_sai` (
  `CFOP_DE` VARCHAR(15) NULL DEFAULT NULL,
  `CFOP_FE` VARCHAR(18) NULL DEFAULT NULL,
  `CFOP_IN` VARCHAR(18) NULL DEFAULT NULL,
  `NAT` VARCHAR(600) NULL DEFAULT NULL,
  `OBS` BLOB NULL DEFAULT NULL)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`cidade`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cidade` ;

CREATE TABLE IF NOT EXISTS `mydb`.`cidade` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `codigo` INT(11) NOT NULL,
  `nome` VARCHAR(255) NOT NULL,
  `uf` CHAR(2) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 5611
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`profissional`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`profissional` ;

CREATE TABLE IF NOT EXISTS `mydb`.`profissional` (
  `idProfissional` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) NULL DEFAULT NULL,
  `idUsuarioRel` INT(10) NULL DEFAULT NULL,
  `pfpj` VARCHAR(45) NULL DEFAULT NULL,
  `nome_razao` VARCHAR(45) NOT NULL,
  `nomeFantasia` VARCHAR(45) NULL DEFAULT NULL,
  `cpf` VARCHAR(14) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(45) NULL DEFAULT NULL,
  `contatoNome` VARCHAR(45) NULL DEFAULT NULL,
  `contatoCPF` VARCHAR(45) NULL DEFAULT NULL,
  `contatoApelido` VARCHAR(45) NULL DEFAULT NULL,
  `contatoRG` VARCHAR(45) NULL DEFAULT NULL,
  `tel` VARCHAR(45) NULL DEFAULT NULL,
  `telCel` VARCHAR(18) NULL DEFAULT NULL,
  `telCom` VARCHAR(18) NULL DEFAULT NULL,
  `idNextel` VARCHAR(16) NULL DEFAULT NULL,
  `nextel` VARCHAR(18) NULL DEFAULT NULL,
  `email` VARCHAR(45) NULL DEFAULT NULL,
  `tipoProf` VARCHAR(45) NULL DEFAULT NULL,
  `banco` VARCHAR(45) NULL DEFAULT NULL,
  `agencia` VARCHAR(45) NULL DEFAULT NULL,
  `cc` VARCHAR(45) NULL DEFAULT NULL,
  `poupanca` TINYINT(1) NULL DEFAULT NULL,
  `nomeBanco` VARCHAR(45) NULL DEFAULT NULL,
  `cpfBanco` VARCHAR(45) NULL DEFAULT NULL,
  `cnpjBanco` VARCHAR(45) NULL DEFAULT NULL,
  `comissao` DECIMAL(15,4) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idProfissional`),
  FULLTEXT INDEX `idxFT` (`nome_razao` ASC, `tipoProf` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 695
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`usuario` ;

CREATE TABLE IF NOT EXISTS `mydb`.`usuario` (
  `idUsuario` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `user` VARCHAR(20) NOT NULL,
  `passwd` VARCHAR(42) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idUsuario`),
  UNIQUE INDEX `user_UNIQUE` (`user` ASC),
  INDEX `fk_Usuario_Loja1_idx` (`idLoja` ASC),
  FULLTEXT INDEX `idxFT` (`nome` ASC, `tipo` ASC),
  CONSTRAINT `fk_Usuario_Loja1`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 49
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cliente` ;

CREATE TABLE IF NOT EXISTS `mydb`.`cliente` (
  `idCliente` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `pfpj` VARCHAR(45) NOT NULL,
  `nome_razao` VARCHAR(100) NOT NULL,
  `nomeFantasia` VARCHAR(100) NULL DEFAULT NULL,
  `cpf` VARCHAR(14) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `dataNasc` DATE NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(45) NULL DEFAULT NULL,
  `contatoNome` VARCHAR(100) NULL DEFAULT NULL,
  `contatoCPF` VARCHAR(45) NULL DEFAULT NULL,
  `contatoApelido` VARCHAR(100) NULL DEFAULT NULL,
  `contatoRG` VARCHAR(45) NULL DEFAULT NULL,
  `tel` VARCHAR(18) NULL DEFAULT NULL,
  `telCel` VARCHAR(18) NULL DEFAULT NULL,
  `telCom` VARCHAR(18) NULL DEFAULT NULL,
  `idNextel` VARCHAR(16) NULL DEFAULT NULL,
  `nextel` VARCHAR(18) NULL DEFAULT NULL,
  `email` VARCHAR(150) NULL DEFAULT NULL,
  `idUsuarioRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idCadastroRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idProfissionalRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `credito` DECIMAL(15,4) NULL DEFAULT NULL,
  `incompleto` TINYINT(1) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idCliente`),
  INDEX `fk_Cliente_Usuario1_idx` (`idUsuarioRel` ASC),
  INDEX `fk_Cliente_Cliente1_idx` (`idCadastroRel` ASC),
  INDEX `fk_Cliente_Profissional1_idx` (`idProfissionalRel` ASC),
  INDEX `fk_Cadastro_Produto_idx` (`idCliente` ASC),
  FULLTEXT INDEX `idxFT` (`nome_razao` ASC, `nomeFantasia` ASC, `cpf` ASC, `cnpj` ASC),
  CONSTRAINT `fk_Cliente_Cliente1`
    FOREIGN KEY (`idCadastroRel`)
    REFERENCES `mydb`.`cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cliente_Profissional1`
    FOREIGN KEY (`idProfissionalRel`)
    REFERENCES `mydb`.`profissional` (`idProfissional`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cliente_Usuario1`
    FOREIGN KEY (`idUsuarioRel`)
    REFERENCES `mydb`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 3582
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`cliente_has_endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cliente_has_endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`cliente_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idCliente` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(100) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(100) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Cliente_has_Endereco_Cliente1_idx` (`idCliente` ASC),
  CONSTRAINT `fk_Cliente_has_Endereco_Cliente1`
    FOREIGN KEY (`idCliente`)
    REFERENCES `mydb`.`cliente` (`idCliente`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 2217
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`conta_a_pagar_has_pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`conta_a_pagar_has_pagamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`conta_a_pagar_has_pagamento` (
  `idPagamento` INT(11) NOT NULL AUTO_INCREMENT,
  `dataEmissao` DATE NULL DEFAULT NULL,
  `idCompra` INT(11) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `contraParte` VARCHAR(90) NULL DEFAULT NULL,
  `nfe` VARCHAR(45) NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `parcela` INT(11) NULL DEFAULT NULL,
  `dataPagamento` DATE NULL DEFAULT NULL,
  `observacao` VARCHAR(200) NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'PENDENTE',
  `dataRealizado` DATE NULL DEFAULT NULL,
  `valorReal` DECIMAL(15,4) NULL DEFAULT NULL,
  `tipoReal` VARCHAR(45) NULL DEFAULT NULL,
  `parcelaReal` INT(11) NULL DEFAULT NULL,
  `contaDestino` VARCHAR(45) NULL DEFAULT NULL,
  `tipoDet` VARCHAR(45) NULL DEFAULT NULL,
  `centroCusto` VARCHAR(45) NULL DEFAULT NULL,
  `grupo` VARCHAR(45) NULL DEFAULT NULL,
  `subGrupo` VARCHAR(45) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPagamento`),
  UNIQUE INDEX `idPagamento_UNIQUE` (`idPagamento` ASC),
  INDEX `contapagar_idLoja_idx` (`idLoja` ASC),
  INDEX `idCompra` (`idCompra` ASC),
  INDEX `index3_pagar` (`status` ASC),
  INDEX `index4_pagar` (`dataPagamento` ASC, `status` ASC),
  CONSTRAINT `contapagar_idLoja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1806
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`venda`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`venda` ;

CREATE TABLE IF NOT EXISTS `mydb`.`venda` (
  `idVenda` VARCHAR(30) NOT NULL,
  `idOrcamento` VARCHAR(30) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idUsuario` INT(10) UNSIGNED NOT NULL,
  `idUsuarioIndicou` INT(10) NULL DEFAULT NULL,
  `idCliente` INT(10) UNSIGNED NOT NULL,
  `idEnderecoEntrega` INT(10) UNSIGNED NOT NULL,
  `idEnderecoFaturamento` INT(10) UNSIGNED NOT NULL,
  `idProfissional` INT(10) UNSIGNED NOT NULL,
  `data` DATETIME NOT NULL,
  `dataOrc` DATETIME NOT NULL,
  `subTotalBru` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `subTotalLiq` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `frete` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `freteManual` TINYINT(1) NULL DEFAULT NULL,
  `descontoPorc` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `descontoReais` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `total` DECIMAL(15,4) NOT NULL,
  `statusFinanceiro` VARCHAR(45) NULL DEFAULT 'PENDENTE',
  `dataFinanceiro` DATETIME NULL DEFAULT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'ATIVO',
  `observacao` VARCHAR(3000) NULL DEFAULT NULL,
  `prazoEntrega` INT(11) NOT NULL,
  `novoPrazoEntrega` INT(11) NULL DEFAULT NULL,
  `representacao` TINYINT(1) NULL DEFAULT NULL,
  `rt` DECIMAL(15,4) NULL DEFAULT NULL,
  `devolucao` TINYINT(1) NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idVenda`),
  UNIQUE INDEX `idVenda_UNIQUE` (`idVenda` ASC),
  INDEX `fk_Venda_Cliente1_idx` (`idCliente` ASC),
  INDEX `fk_Venda_Loja1_idx` (`idLoja` ASC),
  INDEX `fk_Venda_Usuario1_idx` (`idUsuario` ASC),
  INDEX `fk_Venda_Profissional1_idx` (`idProfissional` ASC),
  INDEX `fk_Venda_Endereco1_idx` (`idEnderecoEntrega` ASC),
  INDEX `fk_Venda_Endereco2_idx` (`idEnderecoFaturamento` ASC),
  INDEX `fk_venda_orcamento` (`idOrcamento` ASC),
  CONSTRAINT `fk_Venda_Cliente1`
    FOREIGN KEY (`idCliente`)
    REFERENCES `mydb`.`cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Endereco1`
    FOREIGN KEY (`idEnderecoEntrega`)
    REFERENCES `mydb`.`cliente_has_endereco` (`idEndereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Endereco2`
    FOREIGN KEY (`idEnderecoFaturamento`)
    REFERENCES `mydb`.`cliente_has_endereco` (`idEndereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Loja1`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Profissional1`
    FOREIGN KEY (`idProfissional`)
    REFERENCES `mydb`.`profissional` (`idProfissional`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Usuario1`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `mydb`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`conta_a_receber_has_pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`conta_a_receber_has_pagamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`conta_a_receber_has_pagamento` (
  `idPagamento` INT(11) NOT NULL AUTO_INCREMENT,
  `dataEmissao` DATE NULL DEFAULT NULL,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `contraParte` VARCHAR(90) NULL DEFAULT NULL,
  `nfe` VARCHAR(45) NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `parcela` INT(11) NULL DEFAULT NULL,
  `dataPagamento` DATE NULL DEFAULT NULL,
  `observacao` VARCHAR(200) NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'PENDENTE',
  `representacao` TINYINT(1) NOT NULL DEFAULT '0',
  `dataRealizado` DATE NULL DEFAULT NULL,
  `valorReal` DECIMAL(15,4) NULL DEFAULT NULL,
  `tipoReal` VARCHAR(45) NULL DEFAULT NULL,
  `parcelaReal` INT(11) NULL DEFAULT NULL,
  `contaDestino` VARCHAR(45) NULL DEFAULT NULL,
  `tipoDet` VARCHAR(45) NULL DEFAULT NULL,
  `centroCusto` INT NULL DEFAULT NULL,
  `grupo` VARCHAR(45) NULL DEFAULT NULL,
  `subGrupo` VARCHAR(45) NULL DEFAULT NULL,
  `comissao` TINYINT(1) NOT NULL DEFAULT NULL,
  `taxa` TINYINT(1) NOT NULL DEFAULT '0',
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPagamento`),
  UNIQUE INDEX `idPagamento_UNIQUE` (`idPagamento` ASC),
  INDEX `fk_Conta_Venda_idx` (`idVenda` ASC),
  INDEX `contareceber_idLoja_idx` (`idLoja` ASC),
  INDEX `index3` (`status` ASC),
  INDEX `index4` (`dataPagamento` ASC, `representacao` ASC, `status` ASC),
  CONSTRAINT `contareceber_idLoja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Conta_Venda2`
    FOREIGN KEY (`idVenda`)
    REFERENCES `mydb`.`venda` (`idVenda`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 6416
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`despesa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`despesa` ;

CREATE TABLE IF NOT EXISTS `mydb`.`despesa` (
  `idDepesa` INT(11) NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(90) NULL DEFAULT NULL,
  `receita` TINYINT(1) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idDepesa`))
ENGINE = InnoDB
AUTO_INCREMENT = 29
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`estoque` ;

CREATE TABLE IF NOT EXISTS `mydb`.`estoque` (
  `idEstoque` INT(11) NOT NULL AUTO_INCREMENT,
  `recebidoPor` VARCHAR(45) NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT 'TEMP',
  `idProduto` INT(10) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(100) NULL DEFAULT NULL,
  `descricao` VARCHAR(250) NULL DEFAULT NULL,
  `observacao` VARCHAR(200) NULL DEFAULT NULL,
  `lote` VARCHAR(45) NULL DEFAULT NULL,
  `local` VARCHAR(100) NULL DEFAULT 'TEMP',
  `bloco` VARCHAR(45) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL,
  `quantUpd` INT(11) NOT NULL DEFAULT '0',
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `codBarras` VARCHAR(45) NULL DEFAULT NULL,
  `codComercial` VARCHAR(45) NULL DEFAULT NULL,
  `ncm` VARCHAR(45) NULL DEFAULT NULL,
  `cfop` VARCHAR(45) NULL DEFAULT NULL,
  `valorUnid` DECIMAL(15,4) NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NULL DEFAULT NULL,
  `codBarrasTrib` VARCHAR(45) NULL DEFAULT NULL,
  `unTrib` VARCHAR(45) NULL DEFAULT NULL,
  `quantTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `valorTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `desconto` DECIMAL(15,4) NULL DEFAULT NULL,
  `compoeTotal` INT(11) NULL DEFAULT NULL,
  `numeroPedido` VARCHAR(45) NULL DEFAULT NULL,
  `itemPedido` INT(11) NULL DEFAULT NULL,
  `tipoICMS` VARCHAR(45) NULL DEFAULT NULL,
  `orig` VARCHAR(45) NULL DEFAULT NULL,
  `cstICMS` VARCHAR(45) NULL DEFAULT NULL,
  `modBC` VARCHAR(45) NULL DEFAULT NULL,
  `vBC` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `modBCST` VARCHAR(45) NULL DEFAULT NULL,
  `pMVAST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vBCST` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `cEnq` VARCHAR(45) NULL DEFAULT NULL,
  `cstIPI` VARCHAR(45) NULL DEFAULT NULL,
  `cstPIS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `cstCOFINS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEstoque`),
  UNIQUE INDEX `idEstoque_UNIQUE` (`idEstoque` ASC),
  INDEX `estoque_idProduto_idx` (`idProduto` ASC),
  FULLTEXT INDEX `index4` (`descricao` ASC, `codComercial` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 3207
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`estoque_has_compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`estoque_has_compra` ;

CREATE TABLE IF NOT EXISTS `mydb`.`estoque_has_compra` (
  `idEstoque` INT(11) NOT NULL,
  `idCompra` INT(11) NOT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEstoque`, `idCompra`),
  INDEX `estoque_compra_index` (`idCompra` ASC),
  CONSTRAINT `fk_estoquecompra_estoque`
    FOREIGN KEY (`idEstoque`)
    REFERENCES `mydb`.`estoque` (`idEstoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`estoque_has_consumo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`estoque_has_consumo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`estoque_has_consumo` (
  `idConsumo` INT(11) NOT NULL AUTO_INCREMENT,
  `idEstoque` INT(11) NOT NULL,
  `idVendaProduto` INT(11) NULL DEFAULT '0',
  `status` VARCHAR(45) NULL DEFAULT 'TEMP',
  `local` VARCHAR(100) NULL DEFAULT 'TEMP',
  `idProduto` INT(11) NULL DEFAULT NULL,
  `fornecedor` VARCHAR(100) NULL DEFAULT NULL,
  `descricao` VARCHAR(250) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `quantUpd` INT(11) NOT NULL DEFAULT '0',
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `codBarras` VARCHAR(45) NULL DEFAULT NULL,
  `codComercial` VARCHAR(45) NULL DEFAULT NULL,
  `ncm` VARCHAR(45) NULL DEFAULT NULL,
  `cfop` VARCHAR(45) NULL DEFAULT NULL,
  `valorUnid` DECIMAL(15,4) NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NULL DEFAULT NULL,
  `codBarrasTrib` VARCHAR(45) NULL DEFAULT NULL,
  `unTrib` VARCHAR(45) NULL DEFAULT NULL,
  `quantTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `valorTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `desconto` DECIMAL(15,4) NULL DEFAULT NULL,
  `compoeTotal` INT(11) NULL DEFAULT NULL,
  `numeroPedido` VARCHAR(45) NULL DEFAULT NULL,
  `itemPedido` INT(11) NULL DEFAULT NULL,
  `tipoICMS` VARCHAR(45) NULL DEFAULT NULL,
  `orig` VARCHAR(45) NULL,
  `cstICMS` VARCHAR(45) NULL DEFAULT NULL,
  `modBC` VARCHAR(45) NULL DEFAULT NULL,
  `vBC` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `modBCST` VARCHAR(45) NULL DEFAULT NULL,
  `pMVAST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vBCST` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `cEnq` VARCHAR(45) NULL DEFAULT NULL,
  `cstIPI` VARCHAR(45) NULL DEFAULT NULL,
  `cstPIS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `cstCOFINS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idConsumo`),
  UNIQUE INDEX `idConsumo_UNIQUE` (`idConsumo` ASC),
  INDEX `estoqueconsumo_estoque_idx` (`idEstoque` ASC),
  CONSTRAINT `estoqueconsumo_estoque`
    FOREIGN KEY (`idEstoque`)
    REFERENCES `mydb`.`estoque` (`idEstoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 3985
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`nfe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`nfe` ;

CREATE TABLE IF NOT EXISTS `mydb`.`nfe` (
  `idNFe` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `numeroNFe` INT(11) NULL DEFAULT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `xml` MEDIUMTEXT NULL DEFAULT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'AUTORIZADO',
  `cnpjDest` VARCHAR(14) NULL DEFAULT NULL,
  `cnpjOrig` VARCHAR(14) NULL DEFAULT NULL,
  `chaveAcesso` VARCHAR(50) NOT NULL,
  `obs` VARCHAR(500) NULL DEFAULT NULL,
  `transportadora` VARCHAR(100) NULL DEFAULT NULL,
  `gare` VARCHAR(90) NULL DEFAULT NULL,
  `gareData` TIMESTAMP NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idNFe`),
  INDEX `nfe_tipo_index` (`idNFe` ASC, `tipo` ASC, `numeroNFe` ASC),
  FULLTEXT INDEX `index3` (`cnpjDest` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 2151
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`estoque_has_nfe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`estoque_has_nfe` ;

CREATE TABLE IF NOT EXISTS `mydb`.`estoque_has_nfe` (
  `idEstoque` INT(11) UNSIGNED NOT NULL,
  `idNFe` INT(10) UNSIGNED NOT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  INDEX `idNFe_idx` (`idNFe` ASC),
  PRIMARY KEY (`idEstoque`, `idNFe`),
  CONSTRAINT `estoque_nfe_nfe`
    FOREIGN KEY (`idNFe`)
    REFERENCES `mydb`.`nfe` (`idNFe`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`forma_pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`forma_pagamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`forma_pagamento` (
  `idPagamento` INT(11) NOT NULL AUTO_INCREMENT,
  `pagamento` VARCHAR(45) NULL DEFAULT NULL,
  `parcelas` INT(11) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPagamento`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`forma_pagamento_has_loja`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`forma_pagamento_has_loja` ;

CREATE TABLE IF NOT EXISTS `mydb`.`forma_pagamento_has_loja` (
  `idPagamento` INT(11) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPagamento`, `idLoja`),
  INDEX `fk_pagamento_loja_idx` (`idLoja` ASC),
  CONSTRAINT `fk_pag_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`forma_pagamento_has_taxa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`forma_pagamento_has_taxa` ;

CREATE TABLE IF NOT EXISTS `mydb`.`forma_pagamento_has_taxa` (
  `idTaxa` INT(11) NOT NULL AUTO_INCREMENT,
  `idPagamento` INT(11) NULL DEFAULT NULL,
  `parcela` INT(11) NULL DEFAULT NULL,
  `taxa` DOUBLE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idTaxa`),
  INDEX `fk_pagamento_idx` (`idPagamento` ASC),
  CONSTRAINT `fk_pagamento`
    FOREIGN KEY (`idPagamento`)
    REFERENCES `mydb`.`forma_pagamento` (`idPagamento`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`fornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`fornecedor` ;

CREATE TABLE IF NOT EXISTS `mydb`.`fornecedor` (
  `idFornecedor` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `razaoSocial` VARCHAR(45) NOT NULL,
  `nomeFantasia` VARCHAR(45) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(45) NULL DEFAULT NULL,
  `contatoNome` VARCHAR(45) NULL DEFAULT NULL,
  `contatoCPF` VARCHAR(45) NULL DEFAULT NULL,
  `contatoApelido` VARCHAR(45) NULL DEFAULT NULL,
  `contatoRG` VARCHAR(45) NULL DEFAULT NULL,
  `tel` VARCHAR(18) NULL DEFAULT NULL,
  `telCel` VARCHAR(18) NULL DEFAULT NULL,
  `telCom` VARCHAR(18) NULL DEFAULT NULL,
  `idNextel` VARCHAR(16) NULL DEFAULT NULL,
  `nextel` VARCHAR(18) NULL DEFAULT NULL,
  `email` VARCHAR(300) NULL DEFAULT NULL,
  `comissao1` DOUBLE NULL DEFAULT NULL,
  `comissao2` DOUBLE NULL DEFAULT NULL,
  `comissaoLoja` DOUBLE NULL DEFAULT NULL,
  `aliquotaSt` DOUBLE NULL DEFAULT '0',
  `st` VARCHAR(45) NULL DEFAULT 'Sem ST',
  `idUsuarioRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idCadastroRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idProfissionalRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `representacao` TINYINT(1) NOT NULL DEFAULT '0',
  `validadeProdutos` DATE NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idFornecedor`),
  INDEX `fk_Fornecedor_Usuario1_idx` (`idUsuarioRel` ASC),
  INDEX `fk_Fornecedor_Fornecedor1_idx` (`idCadastroRel` ASC),
  INDEX `fk_Fornecedor_Profissional1_idx` (`idProfissionalRel` ASC),
  FULLTEXT INDEX `idxFT` (`razaoSocial` ASC, `nomeFantasia` ASC, `cnpj` ASC, `contatoCPF` ASC),
  CONSTRAINT `fk_Fornecedor_Fornecedor1`
    FOREIGN KEY (`idCadastroRel`)
    REFERENCES `mydb`.`fornecedor` (`idFornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Fornecedor_Profissional1`
    FOREIGN KEY (`idProfissionalRel`)
    REFERENCES `mydb`.`profissional` (`idProfissional`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Fornecedor_Usuario1`
    FOREIGN KEY (`idUsuarioRel`)
    REFERENCES `mydb`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 142
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`fornecedor_has_endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`fornecedor_has_endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`fornecedor_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idFornecedor` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Fornecedor_has_Endereco_Fornecedor1_idx` (`idFornecedor` ASC),
  CONSTRAINT `fk_Fornecedor_has_Endereco_Fornecedor1`
    FOREIGN KEY (`idFornecedor`)
    REFERENCES `mydb`.`fornecedor` (`idFornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`icms`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`icms` ;

CREATE TABLE IF NOT EXISTS `mydb`.`icms` (
  `idicms` INT(11) NOT NULL AUTO_INCREMENT,
  `origem` VARCHAR(2) NOT NULL,
  `destino` VARCHAR(2) NOT NULL,
  `valor` DOUBLE NULL DEFAULT NULL,
  PRIMARY KEY (`idicms`, `origem`, `destino`))
ENGINE = InnoDB
AUTO_INCREMENT = 2203
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`jobs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`jobs` ;

CREATE TABLE IF NOT EXISTS `mydb`.`jobs` (
  `id` INT(11) NOT NULL,
  `dataEnviado` DATE NULL DEFAULT NULL,
  `dataReferente` DATE NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`log` ;

CREATE TABLE IF NOT EXISTS `mydb`.`log` (
  `idLog` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idUsuario` INT(10) NULL DEFAULT NULL,
  `message` VARCHAR(500) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idLog`),
  INDEX `log_usuario_idx` (`idUsuario` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`loja_has_conta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`loja_has_conta` ;

CREATE TABLE IF NOT EXISTS `mydb`.`loja_has_conta` (
  `idConta` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NULL DEFAULT NULL,
  `banco` VARCHAR(45) NULL DEFAULT NULL,
  `agencia` VARCHAR(45) NULL DEFAULT NULL,
  `conta` VARCHAR(45) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idConta`),
  INDEX `loja_idx` (`idLoja` ASC),
  CONSTRAINT `loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`loja_has_endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`loja_has_endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`loja_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Loja_has_Endereco_Loja1_idx` (`idLoja` ASC),
  CONSTRAINT `fk_Loja_has_Endereco_Loja1`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`maintenance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`maintenance` ;

CREATE TABLE IF NOT EXISTS `mydb`.`maintenance` (
  `id` INT(11) NOT NULL,
  `lastInvalidated` DATE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`orcamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`orcamento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`orcamento` (
  `idAutoInc` INT(11) NOT NULL AUTO_INCREMENT,
  `idOrcamento` VARCHAR(30) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idUsuario` INT(10) UNSIGNED NOT NULL,
  `idUsuarioIndicou` INT(10) NULL DEFAULT NULL,
  `idCliente` INT(10) UNSIGNED NOT NULL,
  `idEnderecoEntrega` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idEnderecoFaturamento` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idProfissional` INT(10) UNSIGNED NOT NULL,
  `data` DATETIME NOT NULL,
  `subTotalBru` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `subTotalLiq` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `frete` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `freteManual` TINYINT(1) NULL DEFAULT NULL,
  `descontoPorc` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `descontoReais` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `total` DECIMAL(15,4) NOT NULL,
  `validade` INT(11) NOT NULL DEFAULT '7',
  `status` VARCHAR(45) NOT NULL DEFAULT 'ATIVO',
  `motivoCancelamento` VARCHAR(45) NULL DEFAULT NULL,
  `observacaoCancelamento` VARCHAR(3000) NULL DEFAULT NULL,
  `observacao` VARCHAR(3000) NULL DEFAULT NULL,
  `prazoEntrega` INT(11) NULL DEFAULT NULL,
  `representacao` TINYINT(1) NULL DEFAULT NULL,
  `replicadoDe` VARCHAR(20) NULL DEFAULT NULL,
  `replicadoEm` VARCHAR(20) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idAutoInc`, `idOrcamento`),
  UNIQUE INDEX `idOrcamento_UNIQUE` (`idOrcamento` ASC),
  INDEX `fk_Orcamento_Cliente1_idx` (`idCliente` ASC),
  INDEX `fk_Orcamento_Loja1_idx` (`idLoja` ASC),
  INDEX `fk_Orcamento_Usuario1_idx` (`idUsuario` ASC),
  INDEX `fk_Orcamento_Profissional1_idx` (`idProfissional` ASC),
  INDEX `index7` (`idOrcamento` ASC, `data` ASC, `total` ASC, `status` ASC, `validade` ASC, `idCliente` ASC, `idUsuario` ASC),
  CONSTRAINT `fk_Orcamento_Cliente1`
    FOREIGN KEY (`idCliente`)
    REFERENCES `mydb`.`cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Orcamento_Loja1`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Orcamento_Profissional1`
    FOREIGN KEY (`idProfissional`)
    REFERENCES `mydb`.`profissional` (`idProfissional`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Orcamento_Usuario1`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `mydb`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`orcamento_has_followup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`orcamento_has_followup` ;

CREATE TABLE IF NOT EXISTS `mydb`.`orcamento_has_followup` (
  `idFollowup` INT(11) NOT NULL AUTO_INCREMENT,
  `idOrcamento` VARCHAR(30) NOT NULL,
  `idLoja` INT(11) NOT NULL,
  `idUsuario` INT(11) NOT NULL,
  `semaforo` INT(11) NOT NULL,
  `observacao` VARCHAR(3000) NOT NULL,
  `dataFollowup` DATETIME NOT NULL,
  `dataProxFollowup` DATETIME NOT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idFollowup`),
  INDEX `orcamentofollowup_orcamento_idx` (`idOrcamento` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 2388
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`produto` (
  `idProduto` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idProdutoUpd` INT(11) NOT NULL DEFAULT '0',
  `idEstoque` INT(11) NULL DEFAULT NULL,
  `idFornecedor` INT(10) UNSIGNED NOT NULL,
  `idFornecedorUpd` INT(11) NOT NULL DEFAULT '0',
  `fornecedor` VARCHAR(100) NOT NULL,
  `fornecedorUpd` INT(11) NOT NULL DEFAULT '0',
  `descricao` VARCHAR(250) NOT NULL,
  `descricaoUpd` INT(11) NOT NULL DEFAULT '0',
  `estoqueRestante` DECIMAL(15,4) NULL DEFAULT NULL,
  `estoqueRestanteUpd` INT(11) NOT NULL DEFAULT '0',
  `un` VARCHAR(10) NOT NULL,
  `unUpd` INT(11) NOT NULL DEFAULT '0',
  `un2` VARCHAR(10) NULL DEFAULT NULL,
  `un2Upd` INT(11) NULL DEFAULT '0',
  `colecao` VARCHAR(200) NULL DEFAULT NULL,
  `colecaoUpd` INT(11) NOT NULL DEFAULT '0',
  `tipo` VARCHAR(100) NULL DEFAULT NULL,
  `tipoUpd` INT(11) NOT NULL DEFAULT '0',
  `minimo` DOUBLE NULL DEFAULT NULL,
  `minimoUpd` INT(11) NOT NULL DEFAULT '0',
  `multiplo` DOUBLE NULL DEFAULT NULL,
  `multiploUpd` INT(11) NULL DEFAULT '0',
  `m2cx` DECIMAL(15,4) NULL DEFAULT NULL,
  `m2cxUpd` INT(11) NOT NULL DEFAULT '0',
  `pccx` DECIMAL(15,4) NULL DEFAULT NULL,
  `pccxUpd` INT(11) NOT NULL DEFAULT '0',
  `kgcx` DECIMAL(15,4) NULL DEFAULT NULL,
  `kgcxUpd` INT(11) NOT NULL DEFAULT '0',
  `formComercial` VARCHAR(100) NULL DEFAULT NULL,
  `formComercialUpd` INT(11) NOT NULL DEFAULT '0',
  `codComercial` VARCHAR(100) NOT NULL,
  `codComercialUpd` INT(11) NOT NULL DEFAULT '0',
  `codBarras` VARCHAR(100) NULL DEFAULT '0',
  `codBarrasUpd` INT(11) NOT NULL DEFAULT '0',
  `ncm` VARCHAR(10) NULL DEFAULT NULL,
  `ncmUpd` INT(11) NOT NULL DEFAULT '0',
  `ncmEx` VARCHAR(2) NULL DEFAULT NULL,
  `ncmExUpd` INT(11) NOT NULL DEFAULT '0',
  `cfop` VARCHAR(4) NULL DEFAULT NULL,
  `cfopUpd` INT(11) NOT NULL DEFAULT '0',
  `icms` DECIMAL(15,4) NULL DEFAULT NULL,
  `icmsUpd` INT(11) NOT NULL DEFAULT '0',
  `cst` VARCHAR(3) NULL DEFAULT '000',
  `cstUpd` INT(11) NOT NULL DEFAULT '0',
  `qtdPallet` DECIMAL(15,4) NULL DEFAULT NULL,
  `qtdPalletUpd` INT(11) NOT NULL DEFAULT '0',
  `custo` DECIMAL(15,4) NOT NULL,
  `custoUpd` INT(11) NOT NULL DEFAULT '0',
  `ipi` DECIMAL(15,4) NULL DEFAULT NULL,
  `ipiUpd` INT(11) NOT NULL DEFAULT '0',
  `st` DECIMAL(15,4) NULL DEFAULT NULL,
  `stUpd` INT(11) NOT NULL DEFAULT '0',
  `precoVenda` DECIMAL(15,4) NULL DEFAULT NULL,
  `precoVendaUpd` INT(11) NOT NULL DEFAULT '0',
  `markup` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `markupUpd` INT(11) NOT NULL DEFAULT '0',
  `comissao` DECIMAL(15,4) NULL DEFAULT NULL,
  `comissaoUpd` INT(11) NOT NULL DEFAULT '0',
  `observacoes` VARCHAR(800) NULL DEFAULT NULL,
  `observacoesUpd` INT(11) NOT NULL DEFAULT '0',
  `origem` INT(11) NULL DEFAULT NULL,
  `origemUpd` INT(11) NOT NULL DEFAULT '0',
  `temLote` VARCHAR(5) NULL DEFAULT 'NÃO',
  `temLoteUpd` INT(11) NOT NULL DEFAULT '0',
  `ui` VARCHAR(10) NOT NULL DEFAULT '0',
  `uiUpd` INT(11) NOT NULL DEFAULT '0',
  `validade` DATE NULL DEFAULT NULL,
  `validadeUpd` INT(11) NOT NULL DEFAULT '0',
  `descontinuado` TINYINT(1) NOT NULL DEFAULT '0',
  `descontinuadoUpd` INT(11) NOT NULL DEFAULT '0',
  `atualizarTabelaPreco` TINYINT(1) NOT NULL DEFAULT '0',
  `representacao` TINYINT(1) NOT NULL DEFAULT '0',
  `estoque` TINYINT(1) NULL DEFAULT '0',
  `promocao` TINYINT(1) NULL DEFAULT NULL,
  `idProdutoRelacionado` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idProduto`),
  UNIQUE INDEX `idProduto_UNIQUE` (`idProduto` ASC),
  INDEX `fk_Produto_Fornecedor1_idx` (`idFornecedor` ASC),
  INDEX `index` (`fornecedor` ASC, `descricao` ASC, `colecao` ASC, `codComercial` ASC, `formComercial` ASC, `ui` ASC),
  INDEX `descontinuado` (`descontinuado` ASC),
  FULLTEXT INDEX `idxFT` (`fornecedor` ASC, `descricao` ASC, `colecao` ASC, `codComercial` ASC),
  FULLTEXT INDEX `index7` (`fornecedor` ASC),
  CONSTRAINT `fk_Produto_Fornecedor1`
    FOREIGN KEY (`idFornecedor`)
    REFERENCES `mydb`.`fornecedor` (`idFornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 170844
DEFAULT CHARACTER SET = utf8
COMMENT = '													'
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`orcamento_has_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`orcamento_has_produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`orcamento_has_produto` (
  `idOrcamentoProduto` INT(11) NOT NULL AUTO_INCREMENT,
  `idOrcamento` VARCHAR(30) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idProduto` INT(10) UNSIGNED NOT NULL,
  `fornecedor` VARCHAR(45) NOT NULL,
  `produto` VARCHAR(150) NULL DEFAULT NULL,
  `obs` VARCHAR(1000) NOT NULL,
  `prcUnitario` DECIMAL(15,4) NOT NULL,
  `descUnitario` DECIMAL(15,4) NULL DEFAULT NULL,
  `caixas` DOUBLE NOT NULL,
  `quant` DECIMAL(15,4) NOT NULL,
  `un` VARCHAR(45) NOT NULL,
  `unCaixa` DECIMAL(15,4) NOT NULL,
  `codComercial` VARCHAR(100) NOT NULL,
  `formComercial` VARCHAR(100) NOT NULL,
  `parcial` DECIMAL(15,4) NOT NULL,
  `desconto` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `parcialDesc` DECIMAL(15,4) NOT NULL,
  `descGlobal` DECIMAL(15,4) NOT NULL,
  `total` DECIMAL(15,4) NOT NULL,
  `mostrarDesconto` TINYINT(1) NOT NULL DEFAULT '0',
  `estoque` TINYINT(1) NULL DEFAULT NULL,
  `promocao` TINYINT(1) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idOrcamentoProduto`),
  INDEX `fk_Orcamento_has_Produto_Produto2_idx` (`idProduto` ASC),
  INDEX `fk_Orcamento_has_Produto_Orcamento2_idx` (`idOrcamento` ASC),
  INDEX `fk_Orcamento_has_Produto_Loja2_idx` (`idLoja` ASC),
  CONSTRAINT `fk_orcamentoproduto_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `mydb`.`loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orcamentoproduto_orcamento`
    FOREIGN KEY (`idOrcamento`)
    REFERENCES `mydb`.`orcamento` (`idOrcamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orcamentoproduto_produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 8660
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`pedido_fornecedor_has_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`pedido_fornecedor_has_produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`pedido_fornecedor_has_produto` (
  `idPedido` INT(11) NOT NULL AUTO_INCREMENT,
  `selecionado` TINYINT(1) NULL DEFAULT '0',
  `aliquotaSt` DOUBLE NULL DEFAULT NULL,
  `st` VARCHAR(45) NULL DEFAULT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'PENDENTE',
  `statusFinanceiro` VARCHAR(45) NULL DEFAULT 'PENDENTE',
  `ordemCompra` INT(11) NULL DEFAULT NULL,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `idVendaProduto` INT(11) NULL DEFAULT NULL,
  `idCompra` INT(11) NULL DEFAULT NULL,
  `fornecedor` VARCHAR(45) NOT NULL,
  `idProduto` INT(11) NULL DEFAULT NULL,
  `descricao` VARCHAR(200) NULL DEFAULT NULL,
  `obs` VARCHAR(200) NULL DEFAULT NULL,
  `colecao` VARCHAR(200) NULL DEFAULT NULL,
  `codComercial` VARCHAR(100) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `quantUpd` INT(11) NOT NULL DEFAULT '0',
  `quantConsumida` DECIMAL(15,4) NULL DEFAULT NULL,
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `un2` VARCHAR(45) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `prcUnitario` DECIMAL(15,4) NULL DEFAULT NULL,
  `preco` DECIMAL(15,4) NULL DEFAULT NULL,
  `kgcx` DECIMAL(15,4) NULL DEFAULT NULL,
  `formComercial` VARCHAR(100) NULL DEFAULT NULL,
  `codBarras` VARCHAR(45) NULL DEFAULT NULL,
  `dataPrevCompra` DATE NULL DEFAULT NULL,
  `dataRealCompra` DATE NULL DEFAULT NULL,
  `dataPrevConf` DATE NULL DEFAULT NULL,
  `dataRealConf` DATE NULL DEFAULT NULL,
  `dataPrevFat` DATE NULL DEFAULT NULL,
  `dataRealFat` DATE NULL DEFAULT NULL,
  `dataPrevColeta` DATE NULL DEFAULT NULL,
  `dataRealColeta` DATE NULL DEFAULT NULL,
  `dataPrevReceb` DATE NULL DEFAULT NULL,
  `dataRealReceb` DATE NULL DEFAULT NULL,
  `dataPrevEnt` DATE NULL DEFAULT NULL,
  `dataRealEnt` DATE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPedido`),
  INDEX `idCompra` (`idCompra` ASC),
  INDEX `idVenda` (`idVenda` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 4971
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`transportadora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`transportadora` ;

CREATE TABLE IF NOT EXISTS `mydb`.`transportadora` (
  `idTransportadora` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `razaoSocial` VARCHAR(60) NOT NULL,
  `nomeFantasia` VARCHAR(45) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(20) NULL DEFAULT NULL,
  `antt` VARCHAR(10) NULL DEFAULT NULL,
  `tel` VARCHAR(18) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idTransportadora`),
  FULLTEXT INDEX `idxFT` (`razaoSocial` ASC, `nomeFantasia` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`pedido_transportadora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`pedido_transportadora` ;

CREATE TABLE IF NOT EXISTS `mydb`.`pedido_transportadora` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `idTransportadora` INT(10) UNSIGNED NOT NULL,
  `idPedido` VARCHAR(30) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `dataEmissao` DATE NOT NULL,
  `dataEntrega` DATE NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `idTransportadora`, `idPedido`, `tipo`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_PedidoTransportadora_Transportadora1_idx` (`idTransportadora` ASC),
  CONSTRAINT `fk_PedidoTransportadora_Transportadora1`
    FOREIGN KEY (`idTransportadora`)
    REFERENCES `mydb`.`transportadora` (`idTransportadora`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`produto_has_preco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`produto_has_preco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`produto_has_preco` (
  `idPreco` INT(11) NOT NULL AUTO_INCREMENT,
  `idProduto` INT(10) UNSIGNED NOT NULL,
  `preco` DECIMAL(15,4) NULL DEFAULT NULL,
  `validadeInicio` DATE NULL DEFAULT NULL,
  `validadeFim` DATE NULL DEFAULT NULL,
  `expirado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPreco`),
  INDEX `fk_Produto_has_Preco_Produto1_idx` (`idProduto` ASC),
  INDEX `validadeFim` (`validadeFim` ASC, `expirado` ASC),
  CONSTRAINT `fk_Produto_has_Preco_Produto1`
    FOREIGN KEY (`idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 972408
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`profissional_has_endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`profissional_has_endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`profissional_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idProfissional` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Profissional_has_Endereco_Profissional1_idx` (`idProfissional` ASC),
  CONSTRAINT `fk_Profissional_has_Endereco_Profissional1`
    FOREIGN KEY (`idProfissional`)
    REFERENCES `mydb`.`profissional` (`idProfissional`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 46
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`temp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`temp` ;

CREATE TABLE IF NOT EXISTS `mydb`.`temp` (
  `codComercial` VARCHAR(45) NOT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `lote` VARCHAR(45) NOT NULL,
  `estoque atual` DECIMAL(15,4) NOT NULL,
  `ncm` VARCHAR(45) NULL DEFAULT NULL,
  `cfop` VARCHAR(45) NULL DEFAULT NULL,
  `cst` VARCHAR(45) NULL DEFAULT NULL,
  `pis` VARCHAR(45) NULL DEFAULT NULL,
  `cofins` VARCHAR(45) NULL DEFAULT NULL,
  `icmsst` VARCHAR(45) NULL DEFAULT NULL,
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `fornecedor` VARCHAR(45) NULL DEFAULT NULL,
  `localizacao` VARCHAR(45) NOT NULL,
  `custo` DECIMAL(15,4) NULL DEFAULT NULL,
  `total` DECIMAL(15,4) NULL DEFAULT NULL,
  PRIMARY KEY (`codComercial`, `lote`, `estoque atual`, `localizacao`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `mydb`.`transportadora_has_endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`transportadora_has_endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`transportadora_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idTransportadora` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Transportadora_has_Endereco_Transportadora1_idx` (`idTransportadora` ASC),
  CONSTRAINT `fk_Transportadora_has_Endereco_Transportadora1`
    FOREIGN KEY (`idTransportadora`)
    REFERENCES `mydb`.`transportadora` (`idTransportadora`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`transportadora_has_veiculo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`transportadora_has_veiculo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`transportadora_has_veiculo` (
  `idVeiculo` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idTransportadora` INT(10) UNSIGNED NULL DEFAULT NULL,
  `modelo` VARCHAR(45) NOT NULL,
  `capacidade` INT(11) NOT NULL,
  `placa` VARCHAR(45) NULL DEFAULT NULL,
  `ufPlaca` VARCHAR(45) NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idVeiculo`),
  INDEX `fk_Transportadora_has_Veiculo_Transportadora1_idx` (`idTransportadora` ASC),
  FULLTEXT INDEX `fk_veiculo_fulltext` (`modelo` ASC, `placa` ASC),
  CONSTRAINT `fk_Transportadora_has_Veiculo_Transportadora1`
    FOREIGN KEY (`idTransportadora`)
    REFERENCES `mydb`.`transportadora` (`idTransportadora`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`usuario_has_permissao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`usuario_has_permissao` ;

CREATE TABLE IF NOT EXISTS `mydb`.`usuario_has_permissao` (
  `idUsuario` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `view_tab_orcamento` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_venda` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_compra` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_logistica` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_nfe` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_estoque` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_financeiro` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_relatorio` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idUsuario`),
  CONSTRAINT `fk_permissao_usuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `mydb`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 55
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`usuario_has_tipo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`usuario_has_tipo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`usuario_has_tipo` (
  `idTipo` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(20) NOT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idTipo`),
  UNIQUE INDEX `user_UNIQUE` (`tipo` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 9
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`veiculo_has_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`veiculo_has_produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`veiculo_has_produto` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `data` DATETIME NOT NULL,
  `idEvento` INT(11) NOT NULL,
  `idVeiculo` INT(11) NOT NULL,
  `idEstoque` INT(11) NULL DEFAULT NULL,
  `idVendaProduto` INT(11) NULL DEFAULT NULL,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `idCompra` INT(11) NULL DEFAULT NULL,
  `idNFeSaida` INT(11) NULL DEFAULT NULL,
  `fornecedor` VARCHAR(45) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idProduto` INT(10) UNSIGNED NULL DEFAULT NULL,
  `produto` VARCHAR(150) NULL DEFAULT NULL,
  `obs` VARCHAR(145) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `kg` DECIMAL(15,4) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `unCaixa` DECIMAL(15,4) NULL DEFAULT NULL,
  `codComercial` VARCHAR(100) NULL DEFAULT NULL,
  `formComercial` VARCHAR(100) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `idEvento`, `idVeiculo`))
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`venda_has_followup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`venda_has_followup` ;

CREATE TABLE IF NOT EXISTS `mydb`.`venda_has_followup` (
  `idFollowup` INT(11) NOT NULL AUTO_INCREMENT,
  `idVenda` VARCHAR(30) NOT NULL,
  `idLoja` INT(11) NOT NULL,
  `idUsuario` INT(11) NOT NULL,
  `tipoOperacao` VARCHAR(200) NULL DEFAULT NULL,
  `observacao` VARCHAR(300) NOT NULL,
  `dataFollowup` DATETIME NOT NULL,
  `dataProxFollowup` DATETIME NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idFollowup`),
  INDEX `orcamentofollowup_orcamento_idx` (`idVenda` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 3296
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;


-- -----------------------------------------------------
-- Table `mydb`.`venda_has_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`venda_has_produto` ;

CREATE TABLE IF NOT EXISTS `mydb`.`venda_has_produto` (
  `idVendaProduto` INT(11) NOT NULL AUTO_INCREMENT,
  `idRelacionado` INT(11) NULL DEFAULT NULL,
  `selecionado` TINYINT(1) NULL DEFAULT '0',
  `entregou` VARCHAR(100) NULL DEFAULT NULL,
  `recebeu` VARCHAR(100) NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `statusOriginal` VARCHAR(45) NULL DEFAULT NULL,
  `idCompra` INT(11) NULL DEFAULT NULL,
  `idNFeSaida` INT(11) NULL DEFAULT NULL,
  `idNFeFutura` INT(11) NULL DEFAULT NULL,
  `fornecedor` VARCHAR(45) NOT NULL,
  `idVenda` VARCHAR(30) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idProduto` INT(10) UNSIGNED NOT NULL,
  `produto` VARCHAR(150) NULL DEFAULT NULL,
  `obs` VARCHAR(1000) NOT NULL,
  `prcUnitario` DECIMAL(15,4) NOT NULL,
  `descUnitario` DECIMAL(15,4) NULL DEFAULT NULL,
  `caixas` DOUBLE NOT NULL,
  `quant` DECIMAL(15,4) NOT NULL,
  `un` VARCHAR(45) NOT NULL,
  `unCaixa` DECIMAL(15,4) NOT NULL,
  `codComercial` VARCHAR(100) NOT NULL,
  `formComercial` VARCHAR(100) NOT NULL,
  `parcial` DECIMAL(15,4) NOT NULL,
  `desconto` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `parcialDesc` DECIMAL(15,4) NOT NULL,
  `descGlobal` DECIMAL(15,4) NOT NULL,
  `total` DECIMAL(15,4) NOT NULL,
  `mostrarDesconto` TINYINT(1) NOT NULL DEFAULT '0',
  `estoque` TINYINT(1) NULL DEFAULT NULL,
  `promocao` TINYINT(1) NULL DEFAULT NULL,
  `reposicao` TINYINT(1) NULL DEFAULT '0',
  `dataPrevCompra` DATE NULL DEFAULT NULL,
  `dataRealCompra` DATE NULL DEFAULT NULL,
  `dataPrevConf` DATE NULL DEFAULT NULL,
  `dataRealConf` DATE NULL DEFAULT NULL,
  `dataPrevFat` DATE NULL DEFAULT NULL,
  `dataRealFat` DATE NULL DEFAULT NULL,
  `dataPrevColeta` DATE NULL DEFAULT NULL,
  `dataRealColeta` DATE NULL DEFAULT NULL,
  `dataPrevReceb` DATE NULL DEFAULT NULL,
  `dataRealReceb` DATE NULL DEFAULT NULL,
  `dataPrevEnt` DATE NULL DEFAULT NULL,
  `dataRealEnt` DATE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idVendaProduto`),
  UNIQUE INDEX `idVendaProduto_UNIQUE` (`idVendaProduto` ASC),
  INDEX `fk_vendaproduto_produto_idx` (`idProduto` ASC),
  INDEX `fk_vendaproduto_venda_idx` (`idVenda` ASC),
  INDEX `index_nfe` (`idNFeSaida` ASC),
  INDEX `fk_vendaproduto_relac_idx` (`idRelacionado` ASC),
  CONSTRAINT `fk_vendaproduto_produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vendaproduto_relac`
    FOREIGN KEY (`idRelacionado`)
    REFERENCES `mydb`.`venda_has_produto` (`idVendaProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vendaproduto_venda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `mydb`.`venda` (`idVenda`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 8249
DEFAULT CHARACTER SET = utf8
ROW_FORMAT = COMPRESSED;

USE `mydb` ;

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`ViewDespesas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ViewDespesas` (`mes` INT, `nomeFantasia` INT, `representacao` INT, `sem custo` INT, `DespTotal` INT, `DespRH` INT, `DespRT` INT, `DespST` INT, `DespPis` INT, `DespIR` INT, `DespLog` INT, `DespCMV` INT, `DespALU` INT, `DespOutros` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`viewResultadoCD`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`viewResultadoCD` (`mes` INT, `frete` INT, `valor` INT, `DespLogistica` INT, `DespRH` INT, `DespOutras` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_pagar_vencer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_pagar_vencer` (`Data Pagamento` INT, `Cartao` INT, `Cheque` INT, `Boleto` INT, `Outros` INT, `Total` INT, `Acumulado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_pagar_vencer_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_pagar_vencer_base` (`Data Pagamento` INT, `CONFERIDO` INT, `PENDENTE` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_pagar_vencidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_pagar_vencidos` (`Data Pagamento` INT, `Cartao` INT, `Cheque` INT, `Boleto` INT, `Outros` INT, `Total` INT, `Acumulado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_pagar_vencidos_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_pagar_vencidos_base` (`Data Pagamento` INT, `CONFERIDO` INT, `PENDENTE` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_receber_vencer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_receber_vencer` (`Data Pagamento` INT, `Cartao` INT, `Cheque` INT, `Boleto` INT, `Outros` INT, `Total` INT, `Acumulado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_receber_vencer_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_receber_vencer_base` (`Data Pagamento` INT, `Status` INT, `Cartão` INT, `Cheque` INT, `Boleto` INT, `Outros` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_receber_vencidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_receber_vencidos` (`Data Pagamento` INT, `Cartao` INT, `Cheque` INT, `Boleto` INT, `Outros` INT, `Total` INT, `Acumulado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_a_receber_vencidos_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_a_receber_vencidos_base` (`Data Pagamento` INT, `Status` INT, `Cartão` INT, `Cheque` INT, `Boleto` INT, `Outros` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_agendar_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_agendar_coleta` (`prazoEntrega` INT, `dataRealFat` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `fornecedor` INT, `unCaixa` INT, `formComercial` INT, `idProduto` INT, `numeroNFe` INT, `idNFe` INT, `idVenda` INT, `ordemCompra` INT, `produto` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT, `kgcx` INT, `Transportadora` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_busca_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_busca_veiculo` (`razaoSocial` INT, `idVeiculo` INT, `modelo` INT, `capacidade` INT, `placa` INT, `desativado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_calendario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_calendario` (`idVenda` INT, `carga` INT, `caixas` INT, `kg` INT, `data` INT, `razaoSocial` INT, `modelo` INT, `status` INT, `bairro` INT, `cidade` INT, `text` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_calendario_carga`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_calendario_carga` (`idVeiculo` INT, `idEvento` INT, `dataPrevEnt` INT, `idNFe` INT, `NFe Status` INT, `numeroNFe` INT, `idVenda` INT, `status` INT, `produtos` INT, `kg` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_calendario_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_calendario_entrega` (`idVeiculo` INT, `data` INT, `modelo` INT, `kg` INT, `razaoSocial` INT, `idVenda` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_calendario_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_calendario_produto` (`idEvento` INT, `idVenda` INT, `idVendaProduto` INT, `fornecedor` INT, `produto` INT, `caixas` INT, `quant` INT, `un` INT, `kg` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_caminhao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_caminhao` (`idVeiculo` INT, `Transportadora` INT, `Veículo` INT, `Placa` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_caminhao_resumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_caminhao_resumo` (`idVeiculo` INT, `data` INT, `Kg` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_coleta` (`prazoEntrega` INT, `dataPrevColeta` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `fornecedor` INT, `numeroNFe` INT, `idVenda` INT, `ordemCompra` INT, `produto` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT, `kgcx` INT, `Transportadora` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_compras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_compras` (`OC` INT, `Compra` INT, `Venda` INT, `Fornecedor` INT, `Vendedor` INT, `Data` INT, `Produtos` INT, `Total` INT, `dataPrevConf` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_compras_financeiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_compras_financeiro` (`Status` INT, `Status Financeiro` INT, `OC` INT, `Compra` INT, `Código` INT, `Fornecedor` INT, `Produtos` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_consistencia_compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_consistencia_compra` (`descricao` INT, `prcUnitario` INT, `preco` INT, `prcUnitario * quant` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_conta_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_conta_pagar` (`idPagamento` INT, `idLoja` INT, `contraparte` INT, `dataPagamento` INT, `dataEmissao` INT, `valor` INT, `status` INT, `ordemCompra` INT, `idVenda` INT, `numeroNFe` INT, `tipo` INT, `parcela` INT, `observacao` INT, `statusFinanceiro` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_conta_receber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_conta_receber` (`idPagamento` INT, `idLoja` INT, `representacao` INT, `contraparte` INT, `dataPagamento` INT, `dataEmissao` INT, `idVenda` INT, `valor` INT, `tipo` INT, `parcela` INT, `observacao` INT, `status` INT, `statusFinanceiro` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_custo_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_custo_estoque` (`idVendaProduto` INT, `ordemCompra` INT, `idVenda` INT, `descricao` INT, `R$ Consumo` INT, `R$ Compra` INT, `quant est` INT, `quant compra` INT, `diferenca` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_entrega` (`prazoEntrega` INT, `idVenda` INT, `Recebeu` INT, `Entregou` INT, `Estoque` INT, `Entregue` INT, `Outros` INT, `Bairro` INT, `Logradouro` INT, `Número` INT, `Cidade` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_entrega_pendente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_entrega_pendente` (`data` INT, `prazoEntrega` INT, `novoPrazoEntrega` INT, `dataRealReceb` INT, `statusFinanceiro` INT, `idVenda` INT, `Estoque` INT, `Agend/Entregue` INT, `Outros` INT, `Bairro` INT, `Logradouro` INT, `Número` INT, `Cidade` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_entrega_produtos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_entrega_produtos` (`idVendaProduto` INT, `idProduto` INT, `dataPrevEnt` INT, `dataRealEnt` INT, `status` INT, `fornecedor` INT, `idVenda` INT, `produto` INT, `caixas` INT, `quant` INT, `un` INT, `unCaixa` INT, `codComercial` INT, `formComercial` INT, `idConsumo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_estoque` (`cnpjDest` INT, `status` INT, `idEstoque` INT, `fornecedor` INT, `descricao` INT, `restante` INT, `restante est` INT, `unEst` INT, `unProd` INT, `Caixas` INT, `lote` INT, `local` INT, `bloco` INT, `codComercial` INT, `idCompra` INT, `nfe` INT, `dataPrevColeta` INT, `dataRealColeta` INT, `dataPrevReceb` INT, `dataRealReceb` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_estoque2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_estoque2` (`cnpjDest` INT, `status` INT, `idEstoque` INT, `fornecedor` INT, `descricao` INT, `restante` INT, `unEst` INT, `unProd` INT, `Caixas` INT, `lote` INT, `local` INT, `bloco` INT, `codComercial` INT, `nfe` INT, `idCompra` INT, `dataPrevColeta` INT, `dataRealColeta` INT, `dataPrevReceb` INT, `dataRealReceb` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_estoque_consumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_estoque_consumo` (`Venda` INT, `idEstoque` INT, `statusProduto` INT, `status` INT, `local` INT, `fornecedor` INT, `descricao` INT, `quant` INT, `quantUpd` INT, `un` INT, `caixas` INT, `codComercial` INT, `dataRealEnt` INT, `created` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_faturamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_faturamento` (`OC` INT, `Código` INT, `Fornecedor` INT, `Vendedor` INT, `Data` INT, `Produtos` INT, `Total` INT, `idCompra` INT, `dataPrevFat` INT, `representacao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_financeiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_financeiro` (`mes` INT, `nomeFantasia` INT, `SomaDetotal` INT, `custo` INT, `sem custo` INT, `ICMS` INT, `IR+CSLL` INT, `PIS+Cofins+ISS` INT, `Representacao` INT, `Comissao Representacao` INT, `RT` INT, `ValorComissao` INT, `Cartao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fluxo_caixa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fluxo_caixa` (`Compra/Venda` INT, `Data Pag` INT, `Data` INT, `R$` INT, `Tipo` INT, `contaDestino` INT, `idConta` INT, `Status` INT, `ENT/SAI` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fluxo_caixa2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fluxo_caixa2` (`Compra/Venda` INT, `Data Pag` INT, `Data` INT, `R$` INT, `Tipo` INT, `contaDestino` INT, `idConta` INT, `Status` INT, `ENT/SAI` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fluxo_resumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fluxo_resumo` (`Data Pag` INT, `Data` INT, `idConta` INT, `SAIDA` INT, `ENTRADA` INT, `R$` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fluxo_resumo2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fluxo_resumo2` (`Data Pag` INT, `Data` INT, `Conta` INT, `idConta` INT, `SAIDA` INT, `ENTRADA` INT, `R$` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fluxo_resumo3`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fluxo_resumo3` (`Data Pag` INT, `SAIDA` INT, `ENTRADA` INT, `R$` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_followup_orcamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_followup_orcamento` (`idOrcamento` INT, `nome` INT, `observacao` INT, `dataFollowup` INT, `dataProxFollowup` INT, `semaforo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_followup_venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_followup_venda` (`idVenda` INT, `nome` INT, `Tipo` INT, `observacao` INT, `dataFollowup` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_compra` (`fornecedor` INT, `idVenda` INT, `PEND` INT, `CONF` INT, `FAT` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_compra_confirmar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_compra_confirmar` (`fornecedor` INT, `idVenda` INT, `CONF` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_compra_faturar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_compra_faturar` (`fornecedor` INT, `idVenda` INT, `FAT` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_compra_gerar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_compra_gerar` (`fornecedor` INT, `idVenda` INT, `PEND` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_logistica_agendar_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_logistica_agendar_coleta` (`Fornecedor` INT, `Estoque` INT, `Venda` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_logistica_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_logistica_coleta` (`Fornecedor` INT, `COLET` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_logistica_recebimento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_logistica_recebimento` (`Fornecedor` INT, `RECEB` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_fornecedor_logistica_representacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_fornecedor_logistica_representacao` (`Fornecedor` INT, `Produtos` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_logistica_representacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_logistica_representacao` (`prazoEntrega` INT, `idPedido` INT, `fornecedor` INT, `idVenda` INT, `idVendaProduto` INT, `cliente` INT, `ordemCompra` INT, `descricao` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT, `kgcx` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_nfe_entrada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_nfe_entrada` (`idNFe` INT, `cnpjDest` INT, `Fornecedor` INT, `NFe` INT, `Status` INT, `Recebido Por` INT, `Data Receb` INT, `GARE` INT, `GARE Pago Em` INT, `OC` INT, `Venda` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_nfe_saida`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_nfe_saida` (`idNFe` INT, `chaveAcesso` INT, `NFe` INT, `Status` INT, `Venda` INT, `CPF/CNPJ` INT, `Cliente` INT, `valor` INT, `Criado em` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_orcamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_orcamento` (`idLoja` INT, `idUsuario` INT, `Status` INT, `Dias restantes` INT, `Código` INT, `Vendedor` INT, `Indicou` INT, `Cliente` INT, `Profissional` INT, `Tel` INT, `Cel` INT, `Tel Com` INT, `Data` INT, `Total` INT, `Data Followup` INT, `Data Próx Followup` INT, `Observação` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_ordemcompra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_ordemcompra` (`OC` INT, `Status` INT, `Venda` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_ordemcompra_nfe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_ordemcompra_nfe` (`ordemCompra` INT, `numeroNFe` INT, `idNFe` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_pagamento_loja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_pagamento_loja` (`idLoja` INT, `idPagamento` INT, `pagamento` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_pedido_fornecedor_livre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_pedido_fornecedor_livre` (`idPedido` INT, `idVenda` INT, `idVendaProduto` INT, `ordemCompra` INT, `idCompra` INT, `descricao` INT, `quant` INT, `un` INT, `caixas` INT, `prcUnitario` INT, `codComercial` INT, `dataPrevCompra` INT, `dataRealCompra` INT, `dataPrevConf` INT, `status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_preparar_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_preparar_entrega` (`idEvento` INT, `idVenda` INT, `produtos` INT, `idNFeSaida` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_produto_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_produto_estoque` (`idVendaProduto` INT, `idProduto` INT, `fornecedor` INT, `produto` INT, `descUnitario` INT, `caixas` INT, `quant` INT, `un` INT, `unCaixa` INT, `codComercial` INT, `formComercial` INT, `total` INT, `codBarras` INT, `ncm` INT, `cfop` INT, `unTrib` INT, `numeroPedido` INT, `itemPedido` INT, `tipoICMS` INT, `orig` INT, `cstICMS` INT, `modBC` INT, `vBC` INT, `pICMS` INT, `vICMS` INT, `modBCST` INT, `pMVAST` INT, `vBCST` INT, `pICMSST` INT, `vICMSST` INT, `cEnq` INT, `cstIPI` INT, `cstPIS` INT, `vBCPIS` INT, `pPIS` INT, `vPIS` INT, `cstCOFINS` INT, `vBCCOFINS` INT, `pCOFINS` INT, `vCOFINS` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_produto_pendente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_produto_pendente` (`status` INT, `idVendaProduto` INT, `fornecedor` INT, `idVenda` INT, `idProduto` INT, `produto` INT, `obs` INT, `colecao` INT, `formComercial` INT, `quant` INT, `un` INT, `Un2` INT, `Caixas` INT, `kgcx` INT, `codComercial` INT, `codBarras` INT, `custo` INT, `idCompra` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_produtos_pendentes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_produtos_pendentes` (`Fornecedor` INT, `Descrição` INT, `Form` INT, `Quant` INT, `Un` INT, `Un2` INT, `Caixas` INT, `Cód Com` INT, `idCompra` INT, `Status` INT, `Financeiro` INT, `Mês` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_recebimento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_recebimento` (`prazoEntrega` INT, `dataPrevReceb` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `fornecedor` INT, `numeroNFe` INT, `idVenda` INT, `ordemCompra` INT, `produto` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio` (`Loja` INT, `Vendedor` INT, `idUsuario` INT, `idVenda` INT, `Mês` INT, `Faturamento` INT, `Valor Comissão` INT, `% Comissão` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_loja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_loja` (`Loja` INT, `Faturamento` INT, `Valor Comissão` INT, `% Comissão` INT, `Mês` INT, `Reposição` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_nfe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_nfe` (`NFe` INT, `Serie` INT, `DataEmi` INT, `produtos` INT, `icmsst` INT, `frete` INT, `seguro` INT, `ipi` INT, `outrasdesp` INT, `desconto` INT, `totalnfe` INT, `bcicms` INT, `icms` INT, `cofins` INT, `impimp` INT, `pis` INT, `tipo` INT, `e/s` INT, `nprotocolo` INT, `dataautor` INT, `Criado em` INT, `status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_pagar` (`dataEmissao` INT, `dataRealizado` INT, `valorReal` INT, `Conta` INT, `observacao` INT, `contraParte` INT, `grupo` INT, `subGrupo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_receber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_receber` (`dataEmissao` INT, `dataRealizado` INT, `valorReal` INT, `Conta` INT, `observacao` INT, `contraParte` INT, `grupo` INT, `subGrupo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_temp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_temp` (`jan` INT, `fev` INT, `mar` INT, `abr` INT, `mai` INT, `jun` INT, `jul` INT, `ago` INT, `set` INT, `out` INT, `nov` INT, `dez` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_relatorio_vendedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_relatorio_vendedor` (`Loja` INT, `Vendedor` INT, `idUsuario` INT, `Faturamento` INT, `Valor Comissão` INT, `% Comissão` INT, `Mês` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_resumo_relatorio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_resumo_relatorio` (`Loja` INT, `Vendedor` INT, `Validos Anteriores` INT, `Gerados Mes` INT, `Revalidados Mes` INT, `Fechados Mes` INT, `Perdidos Mes` INT, `Validos Mes` INT, `% Fechados / Gerados` INT, `% Fechados / Carteira` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_validacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_validacao` (`idVenda` INT, `soma` INT, `total` INT, `Pag.` INT, `Dif` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_venda` (`idLoja` INT, `idUsuario` INT, `statusFinanceiro` INT, `dataFinanceiro` INT, `Status` INT, `Dias restantes` INT, `Código` INT, `Vendedor` INT, `Indicou` INT, `Cliente` INT, `Profissional` INT, `Data` INT, `Total R$` INT, `Data Followup` INT, `Observação` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view_venda_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view_venda_produto` (`status` INT, `statusFinanceiro` INT, `dataFinanceiro` INT, `data` INT, `fornecedor` INT, `idVenda` INT, `Vendedor` INT, `produto` INT, `obs` INT, `caixas` INT, `quant` INT, `un` INT, `codComercial` INT, `formComercial` INT);

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`viewlucroreal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`viewlucroreal` (`mes` INT, `nomeFantasia` INT, `SomaDetotal` INT, `somadefrete` INT, `custo` INT, `sem custo` INT, `ICMS` INT, `IR+CSLL` INT, `PIS+Cofins+ISS` INT, `representacao` INT, `Comissao Representacao` INT, `RT` INT, `ValorComissao` INT, `Cartao` INT);

-- -----------------------------------------------------
-- function digits
-- -----------------------------------------------------

USE `mydb`;
DROP function IF EXISTS `mydb`.`digits`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`%` FUNCTION `digits`( str CHAR(32) ) RETURNS char(32) CHARSET utf8
BEGIN
  DECLARE i, len SMALLINT DEFAULT 1;
  DECLARE ret CHAR(32) DEFAULT '';
  DECLARE c CHAR(1);

  IF str IS NULL
  THEN 
    RETURN "";
  END IF;

  SET len = CHAR_LENGTH( str );
  REPEAT
    BEGIN
      SET c = MID( str, i, 1 );
      IF c BETWEEN '0' AND '9' THEN 
        SET ret=CONCAT(ret,c);
      END IF;
      SET i = i + 1;
    END;
  UNTIL i > len END REPEAT;
  RETURN ret;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure invalidar_orcamentos_expirados
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`invalidar_orcamentos_expirados`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `invalidar_orcamentos_expirados`()
BEGIN
UPDATE orcamento 
SET 
    status = 'EXPIRADO'
WHERE
    NOW() > DATE_ADD(data, INTERVAL validade DAY)
        AND status = 'ATIVO';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure invalidar_produtos_expirados
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`invalidar_produtos_expirados`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `invalidar_produtos_expirados`()
BEGIN 

UPDATE produto_has_preco 
SET 
    expirado = TRUE
WHERE
    validadeFim < CURDATE();
    
    -- se nao tiver preço valido marca produto como descontinuado                
UPDATE produto 
SET 
    descontinuado = TRUE
WHERE
    descontinuado = FALSE AND estoque = FALSE
        AND idProduto NOT IN (SELECT 
            idProduto
        FROM
            produto_has_preco
        WHERE
            expirado = FALSE);

-- copia o preço valido para produto
UPDATE produto AS p,
    produto_has_preco AS prc 
SET 
    p.precovenda = prc.preco,
    p.validade = prc.validadeFim
WHERE
    p.idProduto = prc.idProduto
        AND prc.expirado = FALSE
        AND p.descontinuado = FALSE
        AND p.validade != prc.validadeFim;
        
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function mydate
-- -----------------------------------------------------

USE `mydb`;
DROP function IF EXISTS `mydb`.`mydate`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`%` FUNCTION `mydate`() RETURNS varchar(10) CHARSET utf8
    NO SQL
    DETERMINISTIC
return @mydate$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure relatorio
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`relatorio`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `relatorio`(mes varchar(20))
BEGIN
select * from view_relatorio where Mês = mes;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_produto_estoque_quant
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`update_produto_estoque_quant`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_produto_estoque_quant`()
BEGIN

    UPDATE produto p LEFT JOIN view_estoque2 v ON p.idEstoque = v.idEstoque
    SET p.estoqueRestante = v.restante
    WHERE p.estoque > 0;

    UPDATE produto p SET p.descontinuado = FALSE where p.estoqueRestante > 0 and p.estoque > 0;
    UPDATE produto p SET p.descontinuado = TRUE WHERE p.estoqueRestante = 0 and p.estoque > 0;

  END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_venda_status
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`update_venda_status`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `update_venda_status`()
BEGIN 

    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'DEVOLVIDO' AND v.status != 'CANCELADO' AND v.devolucao = false;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ENTREGUE' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'REPO. ENTREGA' AND v.status != 'CANCELADO' AND v.devolucao = false;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'REPO. RECEB.' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM ENTREGA' AND v.status != 'CANCELADO' AND v.devolucao = false;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ENTREGA AGEND.' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ESTOQUE' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM RECEBIMENTO' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM COLETA' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM FATURAMENTO' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM COMPRA' AND v.status != 'CANCELADO' AND v.devolucao = false;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'INICIADO' AND v.status != 'CANCELADO' AND v.devolucao = false;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'PENDENTE' AND v.status != 'CANCELADO' AND v.devolucao = false;    
        
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `mydb`.`ViewDespesas`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`ViewDespesas` ;
DROP TABLE IF EXISTS `mydb`.`ViewDespesas`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`ViewDespesas` AS
    SELECT 
        DATE_FORMAT(`mydb`.`conta_a_pagar_has_pagamento`.`dataEmissao`,
                '%Y/%m') AS `mes`,
        `mydb`.`loja`.`nomeFantasia` AS `nomeFantasia`,
        'Venda' AS `representacao`,
        '' AS `sem custo`,
        (SUM(IF((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),
            `mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,
            `mydb`.`conta_a_pagar_has_pagamento`.`valor`)) + 0E0) AS `DespTotal`,
        SUM(IF((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` LIKE 'RH%'),
            IF((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),
                `mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,
                `mydb`.`conta_a_pagar_has_pagamento`.`valor`),
            0E0)) AS `DespRH`,
        SUM(IF((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'RT\'s'),
            IF((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),
                `mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,
                `mydb`.`conta_a_pagar_has_pagamento`.`valor`),
            0E0)) AS `DespRT`,
        SUM(IF((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'Impostos - ICMS;ST;ISS'),
            IF((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),
                `mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,
                `mydb`.`conta_a_pagar_has_pagamento`.`valor`),
            0E0)) AS `DespST`,
        SUM(IF((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'Impostos - Pis;Cofins'),
            IF((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),
                `mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,
                `mydb`.`conta_a_pagar_has_pagamento`.`valor`),
            0E0)) AS `DespPis`,
        SUM(IF((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'Impostos - IR;CSLL'),
            IF((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),
                `mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,
                `mydb`.`conta_a_pagar_has_pagamento`.`valor`),
            0E0)) AS `DespIR`,
        SUM(IF((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` LIKE 'Logística%'),
            IF((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),
                `mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,
                `mydb`.`conta_a_pagar_has_pagamento`.`valor`),
            0E0)) AS `DespLog`,
        SUM(IF((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'Produtos - Venda'),
            IF((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),
                `mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,
                `mydb`.`conta_a_pagar_has_pagamento`.`valor`),
            0E0)) AS `DespCMV`,
        SUM(IF((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` = 'Aluguel'),
            IF((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),
                `mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,
                `mydb`.`conta_a_pagar_has_pagamento`.`valor`),
            0E0)) AS `DespALU`,
        SUM(IF(((NOT ((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` LIKE 'Impostos - %')))
                AND (NOT ((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` LIKE 'Logística%')))
                AND (NOT ((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` LIKE 'RH%')))
                AND (`mydb`.`conta_a_pagar_has_pagamento`.`grupo` <> 'RT\'s')
                AND (`mydb`.`conta_a_pagar_has_pagamento`.`grupo` <> 'Produtos - Venda')
                AND (`mydb`.`conta_a_pagar_has_pagamento`.`grupo` <> 'Aluguel')),
            IF((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),
                `mydb`.`conta_a_pagar_has_pagamento`.`valorReal`,
                `mydb`.`conta_a_pagar_has_pagamento`.`valor`),
            0E0)) AS `DespOutros`
    FROM
        (`mydb`.`conta_a_pagar_has_pagamento`
        LEFT JOIN `mydb`.`loja` ON ((`mydb`.`loja`.`idLoja` = `mydb`.`conta_a_pagar_has_pagamento`.`centroCusto`)))
    WHERE
        ((`mydb`.`conta_a_pagar_has_pagamento`.`grupo` <> 'Transferência')
            AND (`mydb`.`conta_a_pagar_has_pagamento`.`status` <> 'CANCELADO')
            AND (`mydb`.`conta_a_pagar_has_pagamento`.`desativado` = FALSE)
            AND (`mydb`.`conta_a_pagar_has_pagamento`.`status` <> 'SUBSTITUIDO'))
    GROUP BY `mes` , `mydb`.`loja`.`nomeFantasia` , `representacao` , `sem custo`;

-- -----------------------------------------------------
-- View `mydb`.`viewResultadoCD`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`viewResultadoCD` ;
DROP TABLE IF EXISTS `mydb`.`viewResultadoCD`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`viewResultadoCD` AS
    SELECT 
        `v`.`mes` AS `mes`,
        `v`.`frete` AS `frete`,
        `c`.`VALOR` AS `valor`,
        `c`.`DespLogistica` AS `DespLogistica`,
        `c`.`DespRH` AS `DespRH`,
        `c`.`DespOutras` AS `DespOutras`
    FROM
        (((SELECT 
            DATE_FORMAT(`mydb`.`venda`.`data`, '%Y/%m') AS `mes`,
                SUM(`mydb`.`venda`.`frete`) AS `frete`
        FROM
            `mydb`.`venda`
        WHERE
            (`mydb`.`venda`.`status` <> 'cancelado')
        GROUP BY DATE_FORMAT(`mydb`.`venda`.`data`, '%Y/%m'))) `v`
        LEFT JOIN (SELECT 
            DATE_FORMAT(`mydb`.`conta_a_pagar_has_pagamento`.`dataEmissao`, '%Y/%m') AS `mes`,
                SUM(IF((`mydb`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'), `mydb`.`conta_a_pagar_has_pagamento`.`valorReal`, `mydb`.`conta_a_pagar_has_pagamento`.`valor`)) AS `VALOR`,
                SUM(IF((LEFT(`mydb`.`conta_a_pagar_has_pagamento`.`grupo`, 9) = 'Logística'), `mydb`.`conta_a_pagar_has_pagamento`.`valor`, 0)) AS `DespLogistica`,
                SUM(IF((LEFT(`mydb`.`conta_a_pagar_has_pagamento`.`grupo`, 2) = 'RH'), `mydb`.`conta_a_pagar_has_pagamento`.`valor`, 0)) AS `DespRH`,
                SUM(IF(((LEFT(`mydb`.`conta_a_pagar_has_pagamento`.`grupo`, 9) = 'Logística')
                    OR IF((LEFT(`mydb`.`conta_a_pagar_has_pagamento`.`grupo`, 2) = 'RH'), `mydb`.`conta_a_pagar_has_pagamento`.`valor`, 0)), 0, `mydb`.`conta_a_pagar_has_pagamento`.`valor`)) AS `DespOutras`
        FROM
            `mydb`.`conta_a_pagar_has_pagamento`
        WHERE
            ((`mydb`.`conta_a_pagar_has_pagamento`.`centroCusto` = 6)
                AND (`mydb`.`conta_a_pagar_has_pagamento`.`status` <> 'CANCELADO')
                AND (`mydb`.`conta_a_pagar_has_pagamento`.`status` <> 'SUBSTITUIDO')
                AND (`mydb`.`conta_a_pagar_has_pagamento`.`desativado` = FALSE))
        GROUP BY DATE_FORMAT(`mydb`.`conta_a_pagar_has_pagamento`.`dataEmissao`, '%Y/%m')) `c` ON ((`v`.`mes` = `c`.`mes`)))
    WHERE
        (`v`.`mes` > '2017');

-- -----------------------------------------------------
-- View `mydb`.`view_a_pagar_vencer`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_a_pagar_vencer` ;
DROP TABLE IF EXISTS `mydb`.`view_a_pagar_vencer`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_a_pagar_vencer` AS
    SELECT 
        `cr`.`dataPagamento` AS `Data Pagamento`,
        SUM(IF(((`cr`.`tipo` LIKE '%cartão%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cartao`,
        SUM(IF(((`cr`.`tipo` LIKE '%cheque%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cheque`,
        SUM(IF(((`cr`.`tipo` LIKE '%boleto%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Boleto`,
        SUM(IF(((NOT ((`cr`.`tipo` LIKE '%cartão%')))
                AND (NOT ((`cr`.`tipo` LIKE '%cheque%')))
                AND (NOT ((`cr`.`tipo` LIKE '%boleto%')))
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Outros`,
        SUM(`cr`.`valor`) AS `Total`,
        (SELECT 
                SUM(`z`.`valor`)
            FROM
                `mydb`.`conta_a_pagar_has_pagamento` `z`
            WHERE
                ((`z`.`desativado` = FALSE)
                    AND (`z`.`dataPagamento` >= CURDATE())
                    AND (`z`.`dataPagamento` <= `cr`.`dataPagamento`)
                    AND ((`z`.`status` = 'PENDENTE')
                    OR (`z`.`status` = 'CONFERIDO')))) AS `Acumulado`
    FROM
        `mydb`.`conta_a_pagar_has_pagamento` `cr`
    WHERE
        (`cr`.`desativado` = FALSE)
    GROUP BY `cr`.`dataPagamento` , `cr`.`status`
    HAVING ((`cr`.`dataPagamento` >= CURDATE())
        AND ((`cr`.`status` = 'PENDENTE')
        OR (`cr`.`status` = 'CONFERIDO')));

-- -----------------------------------------------------
-- View `mydb`.`view_a_pagar_vencer_base`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_a_pagar_vencer_base` ;
DROP TABLE IF EXISTS `mydb`.`view_a_pagar_vencer_base`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_a_pagar_vencer_base` AS
    SELECT 
        `cr`.`dataPagamento` AS `Data Pagamento`,
        SUM(IF(((`cr`.`status` = 'CONFERIDO')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `CONFERIDO`,
        SUM(IF(((`cr`.`status` = 'PENDENTE')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `PENDENTE`,
        SUM(`cr`.`valor`) AS `Total`
    FROM
        `mydb`.`conta_a_pagar_has_pagamento` `cr`
    WHERE
        ((`cr`.`desativado` = FALSE)
            AND (`cr`.`dataPagamento` >= CURDATE())
            AND ((`cr`.`status` = 'PENDENTE')
            OR (`cr`.`status` = 'CONFERIDO')))
    GROUP BY `cr`.`dataPagamento`;

-- -----------------------------------------------------
-- View `mydb`.`view_a_pagar_vencidos`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_a_pagar_vencidos` ;
DROP TABLE IF EXISTS `mydb`.`view_a_pagar_vencidos`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_a_pagar_vencidos` AS
    SELECT 
        `cr`.`dataPagamento` AS `Data Pagamento`,
        SUM(IF(((`cr`.`tipo` LIKE '%cartão%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cartao`,
        SUM(IF(((`cr`.`tipo` LIKE '%cheque%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cheque`,
        SUM(IF(((`cr`.`tipo` LIKE '%boleto%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Boleto`,
        SUM(IF(((NOT ((`cr`.`tipo` LIKE '%cartão%')))
                AND (NOT ((`cr`.`tipo` LIKE '%cheque%')))
                AND (NOT ((`cr`.`tipo` LIKE '%boleto%')))
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Outros`,
        SUM(`cr`.`valor`) AS `Total`,
        (SELECT 
                SUM(`z`.`valor`)
            FROM
                `mydb`.`conta_a_pagar_has_pagamento` `z`
            WHERE
                ((`z`.`desativado` = FALSE)
                    AND (`z`.`dataPagamento` < CURDATE())
                    AND (`z`.`dataPagamento` <= `cr`.`dataPagamento`)
                    AND ((`z`.`status` = 'PENDENTE')
                    OR (`z`.`status` = 'CONFERIDO')))) AS `Acumulado`
    FROM
        `mydb`.`conta_a_pagar_has_pagamento` `cr`
    WHERE
        (`cr`.`desativado` = FALSE)
    GROUP BY `cr`.`dataPagamento` , `cr`.`status`
    HAVING ((`cr`.`dataPagamento` < CURDATE())
        AND ((`cr`.`status` = 'PENDENTE')
        OR (`cr`.`status` = 'CONFERIDO')));

-- -----------------------------------------------------
-- View `mydb`.`view_a_pagar_vencidos_base`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_a_pagar_vencidos_base` ;
DROP TABLE IF EXISTS `mydb`.`view_a_pagar_vencidos_base`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_a_pagar_vencidos_base` AS
    SELECT 
        `cr`.`dataPagamento` AS `Data Pagamento`,
        SUM(IF(((`cr`.`status` = 'CONFERIDO')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `CONFERIDO`,
        SUM(IF(((`cr`.`status` = 'PENDENTE')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `PENDENTE`,
        SUM(`cr`.`valor`) AS `Total`
    FROM
        `mydb`.`conta_a_pagar_has_pagamento` `cr`
    WHERE
        ((`cr`.`desativado` = FALSE)
            AND (`cr`.`dataPagamento` < CURDATE())
            AND ((`cr`.`status` = 'PENDENTE')
            OR (`cr`.`status` = 'CONFERIDO')))
    GROUP BY `cr`.`dataPagamento`;

-- -----------------------------------------------------
-- View `mydb`.`view_a_receber_vencer`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_a_receber_vencer` ;
DROP TABLE IF EXISTS `mydb`.`view_a_receber_vencer`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_a_receber_vencer` AS
    SELECT 
        `cr`.`dataPagamento` AS `Data Pagamento`,
        SUM(IF(((`cr`.`tipo` LIKE '%cartão%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cartao`,
        SUM(IF(((`cr`.`tipo` LIKE '%cheque%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cheque`,
        SUM(IF(((`cr`.`tipo` LIKE '%boleto%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Boleto`,
        SUM(IF(((NOT ((`cr`.`tipo` LIKE '%cartão%')))
                AND (NOT ((`cr`.`tipo` LIKE '%cheque%')))
                AND (NOT ((`cr`.`tipo` LIKE '%boleto%')))
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Outros`,
        SUM(`cr`.`valor`) AS `Total`,
        (SELECT 
                SUM(`z`.`valor`)
            FROM
                `mydb`.`conta_a_receber_has_pagamento` `z`
            WHERE
                ((`z`.`desativado` = FALSE)
                    AND (`z`.`dataPagamento` >= CURDATE())
                    AND (`z`.`dataPagamento` <= `cr`.`dataPagamento`)
                    AND ((`z`.`status` = 'PENDENTE')
                    OR (`z`.`status` = 'CONFERIDO'))
                    AND (`z`.`representacao` = 0))) AS `Acumulado`
    FROM
        `mydb`.`conta_a_receber_has_pagamento` `cr`
    WHERE
        (`cr`.`desativado` = FALSE)
    GROUP BY `cr`.`dataPagamento` , `cr`.`representacao` , `cr`.`status`
    HAVING ((`cr`.`dataPagamento` >= CURDATE())
        AND (`cr`.`representacao` = 0)
        AND ((`cr`.`status` = 'PENDENTE')
        OR (`cr`.`status` = 'CONFERIDO')));

-- -----------------------------------------------------
-- View `mydb`.`view_a_receber_vencer_base`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_a_receber_vencer_base` ;
DROP TABLE IF EXISTS `mydb`.`view_a_receber_vencer_base`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_a_receber_vencer_base` AS
    SELECT 
        `cr`.`dataPagamento` AS `Data Pagamento`,
        `cr`.`status` AS `Status`,
        SUM(IF(((`cr`.`tipo` LIKE '%cartão%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cartão`,
        SUM(IF(((`cr`.`tipo` LIKE '%cheque%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cheque`,
        SUM(IF(((`cr`.`tipo` LIKE '%boleto%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Boleto`,
        SUM(IF(((NOT ((`cr`.`tipo` LIKE '%cartão%')))
                AND (NOT ((`cr`.`tipo` LIKE '%cheque%')))
                AND (NOT ((`cr`.`tipo` LIKE '%boleto%')))
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Outros`,
        SUM(`cr`.`valor`) AS `Total`
    FROM
        `mydb`.`conta_a_receber_has_pagamento` `cr`
    WHERE
        (`cr`.`desativado` = FALSE)
    GROUP BY `cr`.`dataPagamento` , `cr`.`representacao` , `cr`.`status`
    HAVING ((`cr`.`dataPagamento` >= CURDATE())
        AND (`cr`.`representacao` = 0)
        AND ((`cr`.`status` = 'PENDENTE')
        OR (`cr`.`status` = 'CONFERIDO')));

-- -----------------------------------------------------
-- View `mydb`.`view_a_receber_vencidos`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_a_receber_vencidos` ;
DROP TABLE IF EXISTS `mydb`.`view_a_receber_vencidos`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_a_receber_vencidos` AS
    SELECT 
        `cr`.`dataPagamento` AS `Data Pagamento`,
        SUM(IF(((`cr`.`tipo` LIKE '%cartão%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cartao`,
        SUM(IF(((`cr`.`tipo` LIKE '%cheque%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cheque`,
        SUM(IF(((`cr`.`tipo` LIKE '%boleto%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Boleto`,
        SUM(IF(((NOT ((`cr`.`tipo` LIKE '%cartão%')))
                AND (NOT ((`cr`.`tipo` LIKE '%cheque%')))
                AND (NOT ((`cr`.`tipo` LIKE '%boleto%')))
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Outros`,
        SUM(`cr`.`valor`) AS `Total`,
        (SELECT 
                SUM(`z`.`valor`)
            FROM
                `mydb`.`conta_a_receber_has_pagamento` `z`
            WHERE
                ((`z`.`desativado` = FALSE)
                    AND (`z`.`dataPagamento` < CURDATE())
                    AND (`z`.`dataPagamento` <= `cr`.`dataPagamento`)
                    AND ((`z`.`status` = 'PENDENTE')
                    OR (`z`.`status` = 'CONFERIDO'))
                    AND (`z`.`representacao` = 0))) AS `Acumulado`
    FROM
        `mydb`.`conta_a_receber_has_pagamento` `cr`
    WHERE
        (`cr`.`desativado` = FALSE)
    GROUP BY `cr`.`dataPagamento` , `cr`.`representacao` , `cr`.`status`
    HAVING ((`cr`.`dataPagamento` < CURDATE())
        AND (`cr`.`representacao` = 0)
        AND ((`cr`.`status` = 'PENDENTE')
        OR (`cr`.`status` = 'CONFERIDO')));

-- -----------------------------------------------------
-- View `mydb`.`view_a_receber_vencidos_base`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_a_receber_vencidos_base` ;
DROP TABLE IF EXISTS `mydb`.`view_a_receber_vencidos_base`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_a_receber_vencidos_base` AS
    SELECT 
        `cr`.`dataPagamento` AS `Data Pagamento`,
        `cr`.`status` AS `Status`,
        SUM(IF(((`cr`.`tipo` LIKE '%cartão%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cartão`,
        SUM(IF(((`cr`.`tipo` LIKE '%cheque%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Cheque`,
        SUM(IF(((`cr`.`tipo` LIKE '%boleto%')
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Boleto`,
        SUM(IF(((NOT ((`cr`.`tipo` LIKE '%cartão%')))
                AND (NOT ((`cr`.`tipo` LIKE '%cheque%')))
                AND (NOT ((`cr`.`tipo` LIKE '%boleto%')))
                AND (`cr`.`desativado` = FALSE)),
            `cr`.`valor`,
            0)) AS `Outros`,
        SUM(`cr`.`valor`) AS `Total`
    FROM
        `mydb`.`conta_a_receber_has_pagamento` `cr`
    WHERE
        (`cr`.`desativado` = FALSE)
    GROUP BY `cr`.`dataPagamento` , `cr`.`representacao` , `cr`.`status`
    HAVING ((`cr`.`dataPagamento` < CURDATE())
        AND (`cr`.`representacao` = 0)
        AND ((`cr`.`status` = 'PENDENTE')
        OR (`cr`.`status` = 'CONFERIDO')));

-- -----------------------------------------------------
-- View `mydb`.`view_agendar_coleta`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_agendar_coleta` ;
DROP TABLE IF EXISTS `mydb`.`view_agendar_coleta`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_agendar_coleta` AS
    SELECT 
        CAST(MIN((`v`.`data` + INTERVAL `v`.`prazoEntrega` DAY))
            AS DATE) AS `prazoEntrega`,
        GROUP_CONCAT(DISTINCT `pf`.`dataRealFat`
            SEPARATOR ',') AS `dataRealFat`,
        `e`.`idEstoque` AS `idEstoque`,
        `e`.`lote` AS `lote`,
        `e`.`local` AS `local`,
        `e`.`bloco` AS `bloco`,
        GROUP_CONCAT(DISTINCT `pf`.`fornecedor`
            SEPARATOR ',') AS `fornecedor`,
        IF(((UPPER(`e`.`un`) = 'M²')
                OR (UPPER(`e`.`un`) = 'M2')
                OR (UPPER(`e`.`un`) = 'ML')),
            `p`.`m2cx`,
            `p`.`pccx`) AS `unCaixa`,
        `p`.`formComercial` AS `formComercial`,
        `p`.`idProduto` AS `idProduto`,
        GROUP_CONCAT(DISTINCT `n`.`numeroNFe`
            SEPARATOR ',') AS `numeroNFe`,
        GROUP_CONCAT(DISTINCT `n`.`idNFe`
            SEPARATOR ',') AS `idNFe`,
        GROUP_CONCAT(DISTINCT `pf`.`idVenda`
            SEPARATOR ', ') AS `idVenda`,
        GROUP_CONCAT(DISTINCT `pf`.`ordemCompra`
            SEPARATOR ', ') AS `ordemCompra`,
        `e`.`descricao` AS `produto`,
        `e`.`codComercial` AS `codComercial`,
        ABS(`e`.`quant`) AS `quant`,
        `e`.`un` AS `un`,
        `e`.`caixas` AS `caixas`,
        GROUP_CONCAT(DISTINCT `pf`.`kgcx`
            SEPARATOR ',') AS `kgcx`,
        GROUP_CONCAT(DISTINCT `n`.`transportadora`
            SEPARATOR ',') AS `Transportadora`
    FROM
        ((((((`mydb`.`estoque` `e`
        LEFT JOIN `mydb`.`estoque_has_compra` `ehc` ON ((`e`.`idEstoque` = `ehc`.`idEstoque`)))
        LEFT JOIN `mydb`.`pedido_fornecedor_has_produto` `pf` ON (((`ehc`.`idCompra` = `pf`.`idCompra`)
            AND (`e`.`codComercial` = `pf`.`codComercial`))))
        LEFT JOIN `mydb`.`estoque_has_nfe` `ehn` ON ((`e`.`idEstoque` = `ehn`.`idEstoque`)))
        LEFT JOIN `mydb`.`nfe` `n` ON ((`ehn`.`idNFe` = `n`.`idNFe`)))
        LEFT JOIN `mydb`.`venda` `v` ON ((`v`.`idVenda` = `pf`.`idVenda`)))
        LEFT JOIN `mydb`.`produto` `p` ON ((`e`.`idProduto` = `p`.`idProduto`)))
    WHERE
        ((`e`.`status` = 'EM COLETA')
            AND ISNULL(`pf`.`dataPrevColeta`)
            AND (`pf`.`idPedido` IS NOT NULL))
    GROUP BY `e`.`idEstoque` DESC
    ORDER BY `prazoEntrega`;

-- -----------------------------------------------------
-- View `mydb`.`view_busca_veiculo`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_busca_veiculo` ;
DROP TABLE IF EXISTS `mydb`.`view_busca_veiculo`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_busca_veiculo` AS
    SELECT 
        `t`.`razaoSocial` AS `razaoSocial`,
        `thv`.`idVeiculo` AS `idVeiculo`,
        `thv`.`modelo` AS `modelo`,
        `thv`.`capacidade` AS `capacidade`,
        `thv`.`placa` AS `placa`,
        `thv`.`desativado` AS `desativado`
    FROM
        (`mydb`.`transportadora` `t`
        LEFT JOIN `mydb`.`transportadora_has_veiculo` `thv` ON ((`t`.`idTransportadora` = `thv`.`idTransportadora`)));

-- -----------------------------------------------------
-- View `mydb`.`view_calendario`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_calendario` ;
DROP TABLE IF EXISTS `mydb`.`view_calendario`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_calendario` AS
    SELECT 
        GROUP_CONCAT(DISTINCT `vp`.`idVenda`
            SEPARATOR ',') AS `idVenda`,
        `vp`.`idEvento` AS `carga`,
        SUM(`vp`.`caixas`) AS `caixas`,
        SUM(`vp`.`kg`) AS `kg`,
        `vp`.`data` AS `data`,
        `t`.`razaoSocial` AS `razaoSocial`,
        `thv`.`modelo` AS `modelo`,
        `vp`.`status` AS `status`,
        GROUP_CONCAT(DISTINCT `che`.`bairro`
            SEPARATOR ',') AS `bairro`,
        GROUP_CONCAT(DISTINCT `che`.`cidade`
            SEPARATOR ',') AS `cidade`,
        GROUP_CONCAT(CONCAT('                                                            ',
                    LEFT(`vp`.`produto`, 25),
                    ' - ',
                    `vp`.`caixas`,
                    ' cx.')
            SEPARATOR '
            ') AS `text`
    FROM
        ((((`mydb`.`veiculo_has_produto` `vp`
        LEFT JOIN `mydb`.`transportadora_has_veiculo` `thv` ON ((`vp`.`idVeiculo` = `thv`.`idVeiculo`)))
        LEFT JOIN `mydb`.`transportadora` `t` ON ((`t`.`idTransportadora` = `thv`.`idTransportadora`)))
        LEFT JOIN `mydb`.`venda` `v` ON ((`v`.`idVenda` = `vp`.`idVenda`)))
        LEFT JOIN `mydb`.`cliente_has_endereco` `che` ON ((`che`.`idEndereco` = `v`.`idEnderecoEntrega`)))
    WHERE
        (`vp`.`status` <> 'ESTOQUE')
    GROUP BY `vp`.`idVeiculo` , `vp`.`data` , `vp`.`idVenda` , `vp`.`status` , `vp`.`idEvento`
    ORDER BY `vp`.`data` , `vp`.`idVenda` , `t`.`razaoSocial` , `thv`.`modelo`;

-- -----------------------------------------------------
-- View `mydb`.`view_calendario_carga`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_calendario_carga` ;
DROP TABLE IF EXISTS `mydb`.`view_calendario_carga`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_calendario_carga` AS
    SELECT 
        GROUP_CONCAT(DISTINCT `vhp`.`idVeiculo`
            SEPARATOR ',') AS `idVeiculo`,
        `vhp`.`idEvento` AS `idEvento`,
        GROUP_CONCAT(DISTINCT `vhp`.`data`
            SEPARATOR ',') AS `dataPrevEnt`,
        GROUP_CONCAT(DISTINCT `n`.`idNFe`
            SEPARATOR ',') AS `idNFe`,
        GROUP_CONCAT(DISTINCT `n`.`status`
            SEPARATOR ',') AS `NFe Status`,
        GROUP_CONCAT(DISTINCT `n`.`numeroNFe`
            SEPARATOR ',') AS `numeroNFe`,
        `vhp`.`idVenda` AS `idVenda`,
        GROUP_CONCAT(DISTINCT `vhp`.`status`
            SEPARATOR ',') AS `status`,
        COUNT(0) AS `produtos`,
        SUM(`vhp`.`kg`) AS `kg`
    FROM
        ((`mydb`.`veiculo_has_produto` `vhp`
        LEFT JOIN `mydb`.`venda_has_produto` `vp` ON ((`vhp`.`idVendaProduto` = `vp`.`idVendaProduto`)))
        LEFT JOIN `mydb`.`nfe` `n` ON ((`vp`.`idNFeSaida` = `n`.`idNFe`)))
    WHERE
        ((`vhp`.`status` = 'ENTREGA AGEND.')
            OR (`vhp`.`status` = 'EM ENTREGA'))
    GROUP BY `vhp`.`idVenda` , `vhp`.`idEvento`;

-- -----------------------------------------------------
-- View `mydb`.`view_calendario_entrega`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_calendario_entrega` ;
DROP TABLE IF EXISTS `mydb`.`view_calendario_entrega`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_calendario_entrega` AS
    SELECT 
        GROUP_CONCAT(DISTINCT `vhp`.`idVeiculo`
            SEPARATOR ',') AS `idVeiculo`,
        DATE_FORMAT(`vhp`.`data`, '%d-%m-%Y') AS `data`,
        `thv`.`modelo` AS `modelo`,
        SUM(`vhp`.`kg`) AS `kg`,
        `t`.`razaoSocial` AS `razaoSocial`,
        GROUP_CONCAT(DISTINCT `vhp`.`idVenda`
            SEPARATOR ', ') AS `idVenda`
    FROM
        ((`mydb`.`veiculo_has_produto` `vhp`
        LEFT JOIN `mydb`.`transportadora_has_veiculo` `thv` ON ((`vhp`.`idVeiculo` = `thv`.`idVeiculo`)))
        LEFT JOIN `mydb`.`transportadora` `t` ON ((`t`.`idTransportadora` = `thv`.`idTransportadora`)))
    WHERE
        ((`vhp`.`status` = 'ENTREGA AGEND.')
            OR (`vhp`.`status` = 'EM ENTREGA'))
    GROUP BY `vhp`.`data` , `thv`.`idVeiculo`
    ORDER BY `vhp`.`data`;

-- -----------------------------------------------------
-- View `mydb`.`view_calendario_produto`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_calendario_produto` ;
DROP TABLE IF EXISTS `mydb`.`view_calendario_produto`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_calendario_produto` AS
    SELECT 
        `vhp`.`idEvento` AS `idEvento`,
        `vp`.`idVenda` AS `idVenda`,
        `vp`.`idVendaProduto` AS `idVendaProduto`,
        `vp`.`fornecedor` AS `fornecedor`,
        `vp`.`produto` AS `produto`,
        `ehc`.`caixas` AS `caixas`,
        (`ehc`.`quant` * -(1)) AS `quant`,
        `vp`.`un` AS `un`,
        (((`ehc`.`quant` * -(1)) / `vp`.`quant`) * `vhp`.`kg`) AS `kg`,
        `e`.`idEstoque` AS `idEstoque`,
        `e`.`lote` AS `lote`,
        `e`.`local` AS `local`,
        `e`.`bloco` AS `bloco`
    FROM
        (((`mydb`.`veiculo_has_produto` `vhp`
        LEFT JOIN `mydb`.`venda_has_produto` `vp` ON ((`vhp`.`idVendaProduto` = `vp`.`idVendaProduto`)))
        LEFT JOIN `mydb`.`estoque_has_consumo` `ehc` ON ((`vp`.`idVendaProduto` = `ehc`.`idVendaProduto`)))
        LEFT JOIN `mydb`.`estoque` `e` ON ((`ehc`.`idEstoque` = `e`.`idEstoque`)))
    WHERE
        ((`ehc`.`status` <> 'CANCELADO')
            AND (`ehc`.`status` <> 'DEVOLVIDO'));

-- -----------------------------------------------------
-- View `mydb`.`view_caminhao`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_caminhao` ;
DROP TABLE IF EXISTS `mydb`.`view_caminhao`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_caminhao` AS
    SELECT 
        GROUP_CONCAT(DISTINCT `vhp`.`idVeiculo`
            SEPARATOR ',') AS `idVeiculo`,
        `t`.`razaoSocial` AS `Transportadora`,
        `thv`.`modelo` AS `Veículo`,
        `thv`.`placa` AS `Placa`
    FROM
        ((`mydb`.`veiculo_has_produto` `vhp`
        LEFT JOIN `mydb`.`transportadora_has_veiculo` `thv` ON ((`vhp`.`idVeiculo` = `thv`.`idVeiculo`)))
        LEFT JOIN `mydb`.`transportadora` `t` ON ((`thv`.`idTransportadora` = `t`.`idTransportadora`)))
    GROUP BY `thv`.`idVeiculo`;

-- -----------------------------------------------------
-- View `mydb`.`view_caminhao_resumo`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_caminhao_resumo` ;
DROP TABLE IF EXISTS `mydb`.`view_caminhao_resumo`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_caminhao_resumo` AS
    SELECT 
        GROUP_CONCAT(DISTINCT `vhp`.`idVeiculo`
            SEPARATOR ',') AS `idVeiculo`,
        `vhp`.`data` AS `data`,
        COALESCE(SUM(`vhp`.`kg`), 0) AS `Kg`
    FROM
        `mydb`.`veiculo_has_produto` `vhp`
    GROUP BY `vhp`.`data`;

-- -----------------------------------------------------
-- View `mydb`.`view_coleta`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_coleta` ;
DROP TABLE IF EXISTS `mydb`.`view_coleta`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_coleta` AS
    SELECT 
        CAST(MIN((`v`.`data` + INTERVAL `v`.`prazoEntrega` DAY))
            AS DATE) AS `prazoEntrega`,
        GROUP_CONCAT(DISTINCT `pf`.`dataPrevColeta`
            SEPARATOR ',') AS `dataPrevColeta`,
        `e`.`idEstoque` AS `idEstoque`,
        `e`.`lote` AS `lote`,
        `e`.`local` AS `local`,
        `e`.`bloco` AS `bloco`,
        GROUP_CONCAT(DISTINCT `pf`.`fornecedor`
            SEPARATOR ',') AS `fornecedor`,
        GROUP_CONCAT(DISTINCT `n`.`numeroNFe`
            SEPARATOR ',') AS `numeroNFe`,
        GROUP_CONCAT(DISTINCT `pf`.`idVenda`
            SEPARATOR ', ') AS `idVenda`,
        GROUP_CONCAT(DISTINCT `pf`.`ordemCompra`
            SEPARATOR ', ') AS `ordemCompra`,
        `e`.`descricao` AS `produto`,
        `e`.`codComercial` AS `codComercial`,
        ABS(`e`.`quant`) AS `quant`,
        `e`.`un` AS `un`,
        `e`.`caixas` AS `caixas`,
        GROUP_CONCAT(DISTINCT `pf`.`kgcx`
            SEPARATOR ',') AS `kgcx`,
        GROUP_CONCAT(DISTINCT `n`.`transportadora`
            SEPARATOR ',') AS `Transportadora`
    FROM
        (((((`mydb`.`estoque` `e`
        LEFT JOIN `mydb`.`estoque_has_compra` `ehc` ON ((`e`.`idEstoque` = `ehc`.`idEstoque`)))
        LEFT JOIN `mydb`.`pedido_fornecedor_has_produto` `pf` ON (((`ehc`.`idCompra` = `pf`.`idCompra`)
            AND (`e`.`codComercial` = `pf`.`codComercial`))))
        LEFT JOIN `mydb`.`estoque_has_nfe` `ehn` ON ((`e`.`idEstoque` = `ehn`.`idEstoque`)))
        LEFT JOIN `mydb`.`nfe` `n` ON ((`ehn`.`idNFe` = `n`.`idNFe`)))
        LEFT JOIN `mydb`.`venda` `v` ON ((`v`.`idVenda` = `pf`.`idVenda`)))
    WHERE
        ((`e`.`status` = 'EM COLETA')
            AND (`pf`.`dataPrevColeta` IS NOT NULL)
            AND (`pf`.`idPedido` IS NOT NULL))
    GROUP BY `e`.`idEstoque` DESC
    ORDER BY `prazoEntrega`;

-- -----------------------------------------------------
-- View `mydb`.`view_compras`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_compras` ;
DROP TABLE IF EXISTS `mydb`.`view_compras`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_compras` AS
    SELECT 
        `p`.`ordemCompra` AS `OC`,
        `p`.`idCompra` AS `Compra`,
        GROUP_CONCAT(DISTINCT `p`.`idVenda`
            SEPARATOR ', ') AS `Venda`,
        GROUP_CONCAT(DISTINCT `p`.`fornecedor`
            SEPARATOR ',') AS `Fornecedor`,
        SUBSTRING_INDEX(GROUP_CONCAT(DISTINCT `u`.`nome`
                    SEPARATOR ','),
                ' ',
                1) AS `Vendedor`,
        GROUP_CONCAT(DISTINCT `v`.`data`
            SEPARATOR ',') AS `Data`,
        COUNT(`p`.`idProduto`) AS `Produtos`,
        SUM(`p`.`preco`) AS `Total`,
        GROUP_CONCAT(DISTINCT `p`.`dataPrevConf`
            SEPARATOR ',') AS `dataPrevConf`
    FROM
        ((`mydb`.`pedido_fornecedor_has_produto` `p`
        LEFT JOIN `mydb`.`venda` `v` ON ((`p`.`idVenda` = `v`.`idVenda`)))
        LEFT JOIN `mydb`.`usuario` `u` ON ((`v`.`idUsuario` = `u`.`idUsuario`)))
    WHERE
        (`p`.`status` = 'EM COMPRA')
    GROUP BY `p`.`idCompra`;

-- -----------------------------------------------------
-- View `mydb`.`view_compras_financeiro`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_compras_financeiro` ;
DROP TABLE IF EXISTS `mydb`.`view_compras_financeiro`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_compras_financeiro` AS
    SELECT 
        GROUP_CONCAT(DISTINCT `p`.`status`
            SEPARATOR ',') AS `Status`,
        GROUP_CONCAT(DISTINCT `p`.`statusFinanceiro`
            SEPARATOR ',') AS `Status Financeiro`,
        `p`.`ordemCompra` AS `OC`,
        `p`.`idCompra` AS `Compra`,
        GROUP_CONCAT(DISTINCT `p`.`idVenda`
            SEPARATOR ', ') AS `Código`,
        GROUP_CONCAT(DISTINCT `p`.`fornecedor`
            SEPARATOR ',') AS `Fornecedor`,
        COUNT(`p`.`idProduto`) AS `Produtos`,
        SUM(`p`.`preco`) AS `Total`
    FROM
        `mydb`.`pedido_fornecedor_has_produto` `p`
    WHERE
        (`p`.`idCompra` IS NOT NULL)
    GROUP BY `p`.`idCompra`;

-- -----------------------------------------------------
-- View `mydb`.`view_consistencia_compra`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_consistencia_compra` ;
DROP TABLE IF EXISTS `mydb`.`view_consistencia_compra`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_consistencia_compra` AS
    SELECT 
        `mydb`.`pedido_fornecedor_has_produto`.`descricao` AS `descricao`,
        `mydb`.`pedido_fornecedor_has_produto`.`prcUnitario` AS `prcUnitario`,
        `mydb`.`pedido_fornecedor_has_produto`.`preco` AS `preco`,
        (`mydb`.`pedido_fornecedor_has_produto`.`prcUnitario` * `mydb`.`pedido_fornecedor_has_produto`.`quant`) AS `prcUnitario * quant`
    FROM
        `mydb`.`pedido_fornecedor_has_produto`
    WHERE
        (((`mydb`.`pedido_fornecedor_has_produto`.`prcUnitario` * `mydb`.`pedido_fornecedor_has_produto`.`quant`) / `mydb`.`pedido_fornecedor_has_produto`.`preco`) > 1.01);

-- -----------------------------------------------------
-- View `mydb`.`view_conta_pagar`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_conta_pagar` ;
DROP TABLE IF EXISTS `mydb`.`view_conta_pagar`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_conta_pagar` AS
    SELECT 
        `cp`.`idPagamento` AS `idPagamento`,
        `cp`.`idLoja` AS `idLoja`,
        `cp`.`contraParte` AS `contraparte`,
        `cp`.`dataPagamento` AS `dataPagamento`,
        `cp`.`dataEmissao` AS `dataEmissao`,
        `cp`.`valor` AS `valor`,
        `cp`.`status` AS `status`,
        GROUP_CONCAT(DISTINCT `pf`.`ordemCompra`
            SEPARATOR ',') AS `ordemCompra`,
        GROUP_CONCAT(DISTINCT `pf`.`idVenda`
            SEPARATOR ', ') AS `idVenda`,
        GROUP_CONCAT(DISTINCT `n`.`numeroNFe`
            SEPARATOR ', ') AS `numeroNFe`,
        `cp`.`tipo` AS `tipo`,
        `cp`.`parcela` AS `parcela`,
        `cp`.`observacao` AS `observacao`,
        GROUP_CONCAT(DISTINCT `pf`.`statusFinanceiro`
            SEPARATOR ',') AS `statusFinanceiro`
    FROM
        ((((`mydb`.`conta_a_pagar_has_pagamento` `cp`
        LEFT JOIN `mydb`.`pedido_fornecedor_has_produto` `pf` ON ((`cp`.`idCompra` = `pf`.`idCompra`)))
        LEFT JOIN `mydb`.`estoque_has_compra` `ehc` ON ((`ehc`.`idCompra` = `cp`.`idCompra`)))
        LEFT JOIN `mydb`.`estoque_has_nfe` `ehn` ON ((`ehc`.`idEstoque` = `ehn`.`idEstoque`)))
        LEFT JOIN `mydb`.`nfe` `n` ON ((`n`.`idNFe` = `ehn`.`idNFe`)))
    WHERE
        (`cp`.`desativado` = FALSE)
    GROUP BY `cp`.`idPagamento`
    ORDER BY `cp`.`dataPagamento`;

-- -----------------------------------------------------
-- View `mydb`.`view_conta_receber`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_conta_receber` ;
DROP TABLE IF EXISTS `mydb`.`view_conta_receber`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_conta_receber` AS
    SELECT 
        `cr`.`idPagamento` AS `idPagamento`,
        `cr`.`idLoja` AS `idLoja`,
        `cr`.`representacao` AS `representacao`,
        `cr`.`contraParte` AS `contraparte`,
        `cr`.`dataPagamento` AS `dataPagamento`,
        `cr`.`dataEmissao` AS `dataEmissao`,
        `cr`.`idVenda` AS `idVenda`,
        `cr`.`valor` AS `valor`,
        `cr`.`tipo` AS `tipo`,
        `cr`.`parcela` AS `parcela`,
        `cr`.`observacao` AS `observacao`,
        `cr`.`status` AS `status`,
        `v`.`statusFinanceiro` AS `statusFinanceiro`
    FROM
        (`mydb`.`conta_a_receber_has_pagamento` `cr`
        LEFT JOIN `mydb`.`venda` `v` ON ((`cr`.`idVenda` = `v`.`idVenda`)))
    WHERE
        ((`cr`.`desativado` = FALSE)
            AND (`cr`.`representacao` = 0))
    GROUP BY `cr`.`idPagamento`
    ORDER BY `cr`.`dataPagamento` , `cr`.`idVenda` , `cr`.`tipo` , `cr`.`parcela` DESC;

-- -----------------------------------------------------
-- View `mydb`.`view_custo_estoque`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_custo_estoque` ;
DROP TABLE IF EXISTS `mydb`.`view_custo_estoque`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_custo_estoque` AS
    SELECT 
        `ehc`.`idVendaProduto` AS `idVendaProduto`,
        `pf`.`ordemCompra` AS `ordemCompra`,
        `pf`.`idVenda` AS `idVenda`,
        `ehc`.`descricao` AS `descricao`,
        `ehc`.`valor` AS `R$ Consumo`,
        `pf`.`preco` AS `R$ Compra`,
        `ehc`.`quant` AS `quant est`,
        `pf`.`quant` AS `quant compra`,
        (`ehc`.`valor` / `pf`.`preco`) AS `diferenca`
    FROM
        (`mydb`.`estoque_has_consumo` `ehc`
        LEFT JOIN `mydb`.`pedido_fornecedor_has_produto` `pf` ON ((`ehc`.`idVendaProduto` = `pf`.`idVendaProduto`)))
    WHERE
        ((`pf`.`idVendaProduto` IS NOT NULL)
            AND ((`ehc`.`valor` / `pf`.`preco`) > 1.01));

-- -----------------------------------------------------
-- View `mydb`.`view_entrega`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_entrega` ;
DROP TABLE IF EXISTS `mydb`.`view_entrega`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_entrega` AS
    SELECT 
        CAST(MIN((`v`.`data` + INTERVAL `v`.`prazoEntrega` DAY))
            AS DATE) AS `prazoEntrega`,
        `vp`.`idVenda` AS `idVenda`,
        GROUP_CONCAT(DISTINCT `vp`.`recebeu`
            SEPARATOR ',') AS `Recebeu`,
        GROUP_CONCAT(DISTINCT `vp`.`entregou`
            SEPARATOR ',') AS `Entregou`,
        SUM((`vp`.`status` = 'ESTOQUE')) AS `Estoque`,
        SUM((`vp`.`status` = 'ENTREGUE')) AS `Entregue`,
        SUM(((`vp`.`status` <> 'ESTOQUE')
            AND (`vp`.`status` <> 'ENTREGUE'))) AS `Outros`,
        `che`.`bairro` AS `Bairro`,
        `che`.`logradouro` AS `Logradouro`,
        `che`.`numero` AS `Número`,
        `che`.`cidade` AS `Cidade`
    FROM
        ((`mydb`.`venda_has_produto` `vp`
        LEFT JOIN `mydb`.`venda` `v` ON ((`vp`.`idVenda` = `v`.`idVenda`)))
        LEFT JOIN `mydb`.`cliente_has_endereco` `che` ON ((`v`.`idEnderecoEntrega` = `che`.`idEndereco`)))
    WHERE
        (NOT ((`vp`.`idVenda` LIKE '%D')))
    GROUP BY `vp`.`idVenda`;

-- -----------------------------------------------------
-- View `mydb`.`view_entrega_pendente`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_entrega_pendente` ;
DROP TABLE IF EXISTS `mydb`.`view_entrega_pendente`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_entrega_pendente` AS
    SELECT 
        `v`.`data` AS `data`,
        CAST(MIN((`v`.`data` + INTERVAL `v`.`prazoEntrega` DAY))
            AS DATE) AS `prazoEntrega`,
        CAST((`v`.`data` + INTERVAL `v`.`novoPrazoEntrega` DAY)
            AS DATE) AS `novoPrazoEntrega`,
        CAST(MIN(`vp`.`dataRealReceb`) AS DATE) AS `dataRealReceb`,
        `v`.`statusFinanceiro` AS `statusFinanceiro`,
        `vp`.`idVenda` AS `idVenda`,
        SUM((`vp`.`status` = 'ESTOQUE')) AS `Estoque`,
        SUM(((`vp`.`status` = 'ENTREGUE')
            OR (`vp`.`status` = 'EM ENTREGA')
            OR (`vp`.`status` = 'ENTREGA AGEND.'))) AS `Agend/Entregue`,
        SUM(((`vp`.`status` <> 'ESTOQUE')
            AND (`vp`.`status` <> 'ENTREGUE')
            AND (`vp`.`status` <> 'EM ENTREGA')
            AND (`vp`.`status` <> 'ENTREGA AGEND.')
            AND (`vp`.`status` <> 'DEVOLVIDO'))) AS `Outros`,
        `che`.`bairro` AS `Bairro`,
        `che`.`logradouro` AS `Logradouro`,
        `che`.`numero` AS `Número`,
        `che`.`cidade` AS `Cidade`
    FROM
        ((`mydb`.`venda_has_produto` `vp`
        LEFT JOIN `mydb`.`venda` `v` ON ((`vp`.`idVenda` = `v`.`idVenda`)))
        LEFT JOIN `mydb`.`cliente_has_endereco` `che` ON ((`v`.`idEnderecoEntrega` = `che`.`idEndereco`)))
    WHERE
        ((NOT ((`vp`.`idVenda` LIKE '%D')))
            AND (`v`.`status` <> 'ENTREGUE')
            AND (`v`.`status` <> 'CANCELADO')
            AND (`v`.`status` <> 'DEVOLVIDO')
            AND (`v`.`representacao` = FALSE)
            AND (`v`.`devolucao` = FALSE))
    GROUP BY `vp`.`idVenda`;

-- -----------------------------------------------------
-- View `mydb`.`view_entrega_produtos`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_entrega_produtos` ;
DROP TABLE IF EXISTS `mydb`.`view_entrega_produtos`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_entrega_produtos` AS
    SELECT 
        `vp`.`idVendaProduto` AS `idVendaProduto`,
        `vp`.`idProduto` AS `idProduto`,
        `vp`.`dataPrevEnt` AS `dataPrevEnt`,
        `vp`.`dataRealEnt` AS `dataRealEnt`,
        `vp`.`status` AS `status`,
        `vp`.`fornecedor` AS `fornecedor`,
        `vp`.`idVenda` AS `idVenda`,
        `vp`.`produto` AS `produto`,
        `vp`.`caixas` AS `caixas`,
        `vp`.`quant` AS `quant`,
        `vp`.`un` AS `un`,
        `vp`.`unCaixa` AS `unCaixa`,
        `vp`.`codComercial` AS `codComercial`,
        `vp`.`formComercial` AS `formComercial`,
        GROUP_CONCAT(DISTINCT `ehc`.`idConsumo`
            SEPARATOR ',') AS `idConsumo`
    FROM
        (`mydb`.`venda_has_produto` `vp`
        LEFT JOIN `mydb`.`estoque_has_consumo` `ehc` ON ((`vp`.`idVendaProduto` = `ehc`.`idVendaProduto`)))
    GROUP BY `vp`.`idVendaProduto`;

-- -----------------------------------------------------
-- View `mydb`.`view_estoque`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_estoque` ;
DROP TABLE IF EXISTS `mydb`.`view_estoque`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_estoque` AS
    SELECT 
        `y`.`cnpjDest` AS `cnpjDest`,
        `x`.`status` AS `status`,
        `x`.`idEstoque` AS `idEstoque`,
        `x`.`fornecedor` AS `fornecedor`,
        `x`.`descricao` AS `descricao`,
        `x`.`Quant Rest` AS `restante`,
        `x`.`Quant Est` AS `restante est`,
        `x`.`un3` AS `unEst`,
        IF((`x`.`un` = `x`.`un2`),
            `x`.`un`,
            CONCAT(`x`.`un`, '/', `x`.`un2`)) AS `unProd`,
        IF(((`x`.`un` = 'M²') OR (`x`.`un` = 'M2')
                OR (`x`.`un` = 'ML')),
            `x`.`Caixas M2`,
            `x`.`Caixas PÇ`) AS `Caixas`,
        `x`.`lote` AS `lote`,
        `x`.`local` AS `local`,
        `x`.`bloco` AS `bloco`,
        `x`.`codComercial` AS `codComercial`,
        `y`.`idCompra` AS `idCompra`,
        `y`.`nfe` AS `nfe`,
        `y`.`dataPrevColeta` AS `dataPrevColeta`,
        `y`.`dataRealColeta` AS `dataRealColeta`,
        `y`.`dataPrevReceb` AS `dataPrevReceb`,
        `y`.`dataRealReceb` AS `dataRealReceb`
    FROM
        (((SELECT 
            `e`.`status` AS `status`,
                `e`.`idEstoque` AS `idEstoque`,
                `p`.`fornecedor` AS `fornecedor`,
                `e`.`descricao` AS `descricao`,
                (`e`.`quant` + COALESCE(SUM(`ec`.`quant`), 0)) AS `Quant Rest`,
                (`e`.`quant` + COALESCE(SUM(IF(((`vp`.`status` = 'ENTREGUE')
                    OR (`vp`.`status` = 'EM ENTREGA')
                    OR (`ec`.`status` = 'AJUSTE')
                    OR (`ec`.`status` = 'DEVOLVIDO')), `ec`.`quant`, 0)))) AS `Quant Est`,
                `p`.`un` AS `un`,
                `p`.`un2` AS `un2`,
                `e`.`un` AS `un3`,
                ((`e`.`quant` + COALESCE(SUM(`ec`.`quant`), 0)) / `p`.`m2cx`) AS `Caixas M2`,
                ((`e`.`quant` + COALESCE(SUM(`ec`.`quant`), 0)) / `p`.`pccx`) AS `Caixas PÇ`,
                `e`.`codComercial` AS `codComercial`,
                `e`.`lote` AS `lote`,
                `e`.`local` AS `local`,
                `e`.`bloco` AS `bloco`
        FROM
            (((`mydb`.`estoque` `e`
        LEFT JOIN `mydb`.`estoque_has_consumo` `ec` ON ((`e`.`idEstoque` = `ec`.`idEstoque`)))
        LEFT JOIN `mydb`.`produto` `p` ON ((`e`.`idProduto` = `p`.`idProduto`)))
        LEFT JOIN `mydb`.`venda_has_produto` `vp` ON ((`ec`.`idVendaProduto` = `vp`.`idVendaProduto`)))
        WHERE
            ((`e`.`status` <> 'CANCELADO')
                AND (`e`.`status` <> 'QUEBRADO'))
        GROUP BY `e`.`idEstoque`)) `x`
        JOIN (SELECT 
            GROUP_CONCAT(DISTINCT `n`.`cnpjDest`
                    SEPARATOR ',') AS `cnpjDest`,
                `e`.`idEstoque` AS `idEstoque`,
                GROUP_CONCAT(DISTINCT `ehc`.`idCompra`
                    SEPARATOR ',') AS `idCompra`,
                GROUP_CONCAT(DISTINCT `n`.`numeroNFe`
                    SEPARATOR ', ') AS `nfe`,
                GROUP_CONCAT(DISTINCT `pf`.`dataPrevColeta`
                    SEPARATOR ',') AS `dataPrevColeta`,
                GROUP_CONCAT(DISTINCT `pf`.`dataRealColeta`
                    SEPARATOR ',') AS `dataRealColeta`,
                GROUP_CONCAT(DISTINCT `pf`.`dataPrevReceb`
                    SEPARATOR ',') AS `dataPrevReceb`,
                GROUP_CONCAT(DISTINCT `pf`.`dataRealReceb`
                    SEPARATOR ',') AS `dataRealReceb`,
                GROUP_CONCAT(DISTINCT `pf`.`dataPrevEnt`
                    SEPARATOR ',') AS `dataPrevEnt`,
                GROUP_CONCAT(DISTINCT `pf`.`dataRealEnt`
                    SEPARATOR ',') AS `dataRealEnt`
        FROM
            ((((`mydb`.`estoque` `e`
        LEFT JOIN `mydb`.`estoque_has_compra` `ehc` ON ((`e`.`idEstoque` = `ehc`.`idEstoque`)))
        LEFT JOIN `mydb`.`pedido_fornecedor_has_produto` `pf` ON (((`ehc`.`idCompra` = `pf`.`idCompra`)
            AND (`e`.`codComercial` = `pf`.`codComercial`))))
        LEFT JOIN `mydb`.`estoque_has_nfe` `ehn` ON ((`e`.`idEstoque` = `ehn`.`idEstoque`)))
        LEFT JOIN `mydb`.`nfe` `n` ON ((`ehn`.`idNFe` = `n`.`idNFe`)))
        GROUP BY `e`.`idEstoque`) `y` ON ((`x`.`idEstoque` = `y`.`idEstoque`)));

-- -----------------------------------------------------
-- View `mydb`.`view_estoque2`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_estoque2` ;
DROP TABLE IF EXISTS `mydb`.`view_estoque2`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_estoque2` AS
    SELECT 
        GROUP_CONCAT(DISTINCT `n`.`cnpjDest`
            SEPARATOR ',') AS `cnpjDest`,
        `e`.`status` AS `status`,
        `e`.`idEstoque` AS `idEstoque`,
        `p`.`fornecedor` AS `fornecedor`,
        `e`.`descricao` AS `descricao`,
        (`e`.`quant` + COALESCE(`ec`.`consumo`, 0)) AS `restante`,
        `e`.`un` AS `unEst`,
        IF((`p`.`un` = `p`.`un2`),
            `p`.`un`,
            CONCAT(`p`.`un`, '/', `p`.`un2`)) AS `unProd`,
        IF(((`p`.`un` = 'M²') OR (`p`.`un` = 'M2')
                OR (`p`.`un` = 'ML')),
            ((`e`.`quant` + COALESCE(`ec`.`consumo`, 0)) / `p`.`m2cx`),
            ((`e`.`quant` + COALESCE(`ec`.`consumo`, 0)) / `p`.`pccx`)) AS `Caixas`,
        `e`.`lote` AS `lote`,
        `e`.`local` AS `local`,
        `e`.`bloco` AS `bloco`,
        `e`.`codComercial` AS `codComercial`,
        GROUP_CONCAT(DISTINCT `n`.`numeroNFe`
            SEPARATOR ', ') AS `nfe`,
        `vp`.`idCompra` AS `idCompra`,
        `vp`.`dataPrevColeta` AS `dataPrevColeta`,
        `vp`.`dataRealColeta` AS `dataRealColeta`,
        `vp`.`dataPrevReceb` AS `dataPrevReceb`,
        `vp`.`dataRealReceb` AS `dataRealReceb`
    FROM
        (((((((SELECT 
            `e`.`idEstoque` AS `idEstoque`,
                `e`.`status` AS `status`,
                `e`.`idProduto` AS `idProduto`,
                `e`.`descricao` AS `descricao`,
                `e`.`lote` AS `lote`,
                `e`.`local` AS `local`,
                `e`.`bloco` AS `bloco`,
                `e`.`quant` AS `quant`,
                `e`.`un` AS `un`,
                `e`.`codComercial` AS `codComercial`
        FROM
            `mydb`.`estoque` `e`
        WHERE
            ((`e`.`status` <> 'QUEBRADO')
                AND (`e`.`status` <> 'CANCELADO')))) `e`
        LEFT JOIN (SELECT 
            SUM(`ec`.`quant`) AS `consumo`,
                `ec`.`idEstoque` AS `idEstoque`,
                GROUP_CONCAT(DISTINCT `ec`.`idVendaProduto`
                    SEPARATOR ',') AS `idVendaProduto`
        FROM
            `mydb`.`estoque_has_consumo` `ec`
        GROUP BY `ec`.`idEstoque`) `ec` ON ((`e`.`idEstoque` = `ec`.`idEstoque`)))
        LEFT JOIN (SELECT 
            `p`.`idProduto` AS `idProduto`,
                `p`.`fornecedor` AS `fornecedor`,
                `p`.`un` AS `un`,
                `p`.`un2` AS `un2`,
                `p`.`m2cx` AS `m2cx`,
                `p`.`pccx` AS `pccx`
        FROM
            `mydb`.`produto` `p`) `p` ON ((`p`.`idProduto` = `e`.`idProduto`)))
        LEFT JOIN (SELECT 
            `vp`.`idVendaProduto` AS `idVendaProduto`,
                `vp`.`idCompra` AS `idCompra`,
                `vp`.`dataPrevColeta` AS `dataPrevColeta`,
                `vp`.`dataRealColeta` AS `dataRealColeta`,
                `vp`.`dataPrevReceb` AS `dataPrevReceb`,
                `vp`.`dataRealReceb` AS `dataRealReceb`
        FROM
            `mydb`.`venda_has_produto` `vp`) `vp` ON ((`vp`.`idVendaProduto` = `ec`.`idVendaProduto`)))
        LEFT JOIN (SELECT 
            `ehn`.`idEstoque` AS `idEstoque`, `ehn`.`idNFe` AS `idNFe`
        FROM
            `mydb`.`estoque_has_nfe` `ehn`) `ehn` ON ((`e`.`idEstoque` = `ehn`.`idEstoque`)))
        LEFT JOIN (SELECT 
            `n`.`idNFe` AS `idNFe`,
                `n`.`numeroNFe` AS `numeroNFe`,
                `n`.`cnpjDest` AS `cnpjDest`
        FROM
            `mydb`.`nfe` `n`) `n` ON ((`ehn`.`idNFe` = `n`.`idNFe`)))
    GROUP BY `e`.`idEstoque`;

-- -----------------------------------------------------
-- View `mydb`.`view_estoque_consumo`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_estoque_consumo` ;
DROP TABLE IF EXISTS `mydb`.`view_estoque_consumo`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_estoque_consumo` AS
    SELECT 
        `vp`.`idVenda` AS `Venda`,
        `ehc`.`idEstoque` AS `idEstoque`,
        `vp`.`status` AS `statusProduto`,
        `ehc`.`status` AS `status`,
        `ehc`.`local` AS `local`,
        `ehc`.`fornecedor` AS `fornecedor`,
        `ehc`.`descricao` AS `descricao`,
        `ehc`.`quant` AS `quant`,
        `ehc`.`quantUpd` AS `quantUpd`,
        `ehc`.`un` AS `un`,
        `ehc`.`caixas` AS `caixas`,
        `ehc`.`codComercial` AS `codComercial`,
        `vp`.`dataRealEnt` AS `dataRealEnt`,
        `ehc`.`created` AS `created`
    FROM
        (`mydb`.`estoque_has_consumo` `ehc`
        LEFT JOIN `mydb`.`venda_has_produto` `vp` ON ((`ehc`.`idVendaProduto` = `vp`.`idVendaProduto`)));

-- -----------------------------------------------------
-- View `mydb`.`view_faturamento`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_faturamento` ;
DROP TABLE IF EXISTS `mydb`.`view_faturamento`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_faturamento` AS
    SELECT 
        `pf`.`ordemCompra` AS `OC`,
        GROUP_CONCAT(DISTINCT `pf`.`idVenda`
            SEPARATOR ', ') AS `Código`,
        GROUP_CONCAT(DISTINCT `pf`.`fornecedor`
            SEPARATOR ',') AS `Fornecedor`,
        SUBSTRING_INDEX(GROUP_CONCAT(DISTINCT `u`.`nome`
                    SEPARATOR ','),
                ' ',
                1) AS `Vendedor`,
        GROUP_CONCAT(DISTINCT `v`.`data`
            SEPARATOR ',') AS `Data`,
        COUNT(`pf`.`idProduto`) AS `Produtos`,
        SUM(`pf`.`preco`) AS `Total`,
        `pf`.`idCompra` AS `idCompra`,
        GROUP_CONCAT(DISTINCT `pf`.`dataPrevFat`
            SEPARATOR ',') AS `dataPrevFat`,
        GROUP_CONCAT(DISTINCT `f`.`representacao`
            SEPARATOR ',') AS `representacao`
    FROM
        (((`mydb`.`pedido_fornecedor_has_produto` `pf`
        LEFT JOIN `mydb`.`fornecedor` `f` ON ((`pf`.`fornecedor` = `f`.`razaoSocial`)))
        LEFT JOIN `mydb`.`venda` `v` ON ((`v`.`idVenda` = `pf`.`idVenda`)))
        LEFT JOIN `mydb`.`usuario` `u` ON ((`v`.`idUsuario` = `u`.`idUsuario`)))
    WHERE
        (`pf`.`status` = 'EM FATURAMENTO')
    GROUP BY `pf`.`idCompra`;

-- -----------------------------------------------------
-- View `mydb`.`view_financeiro`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_financeiro` ;
DROP TABLE IF EXISTS `mydb`.`view_financeiro`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_financeiro` AS
    SELECT 
        GROUP_CONCAT(DISTINCT DATE_FORMAT(`v`.`data`, '%m/%Y')
            SEPARATOR ',') AS `mes`,
        `l`.`nomeFantasia` AS `nomeFantasia`,
        (SUM(`vp`.`total`) + 0E0) AS `SomaDetotal`,
        (SUM(IF(ISNULL(`ehc`.`valorunid`),
            (`pf`.`prcUnitario` * `vp`.`quant`),
            ((`vp`.`quant` * (1 - (0 * (`ehc`.`desconto` / `ehc`.`valor`)))) * `ehc`.`valorunid`))) + 0E0) AS `custo`,
        IF((ISNULL(`ehc`.`valorunid`)
                AND ISNULL(`pf`.`prcUnitario`)
                AND (RIGHT(`vp`.`idVenda`, 1) <> 'R')
                AND (RIGHT(`vp`.`idVenda`, 2) <> 'RD')),
            'sem custo',
            '') AS `sem custo`,
        (SUM(IF(((RIGHT(`vp`.`idVenda`, 1) = 'R')
                OR (RIGHT(`vp`.`idVenda`, 2) = 'RD')),
            0,
            ((0.58 * 0.12) * IF(ISNULL(`ehc`.`valorunid`),
                (`pf`.`prcUnitario` * `vp`.`quant`),
                (`vp`.`quant` * `ehc`.`valorunid`))))) + 0E0) AS `ICMS`,
        SUM(IF(((RIGHT(`vp`.`idVenda`, 1) = 'R')
                OR (RIGHT(`vp`.`idVenda`, 2) = 'RD')),
            (((`f`.`comissaoLoja` / 100) * `vp`.`total`) * ((0.25 * 0.32) + (0.09 * 0.32))),
            (`vp`.`total` * ((0.25 * 0.08) + (0.09 * 0.12))))) AS `IR+CSLL`,
        SUM(IF(((RIGHT(`vp`.`idVenda`, 1) = 'R')
                OR (RIGHT(`vp`.`idVenda`, 2) = 'RD')),
            (((`f`.`comissaoLoja` / 100) * `vp`.`total`) * 0.0865),
            (`vp`.`total` * 0.0365))) AS `PIS+Cofins+ISS`,
        IF(((RIGHT(`vp`.`idVenda`, 1) = 'R')
                OR (RIGHT(`vp`.`idVenda`, 2) = 'RD')),
            'Representacao',
            'Venda') AS `Representacao`,
        SUM(IF(((RIGHT(`vp`.`idVenda`, 1) = 'R')
                OR (RIGHT(`vp`.`idVenda`, 2) = 'RD')),
            ((`vp`.`total` * `f`.`comissaoLoja`) / 100),
            0)) AS `Comissao Representacao`,
        (SUM(((`vp`.`total` * `prof`.`comissao`) / 100)) + 0E0) AS `RT`,
        SUM((((`f`.`comissao1` / 100) * `vp`.`total`) - ((((RIGHT(`p`.`ui`, 1) = 'L') * (`f`.`comissao2` - `f`.`comissao1`)) / 100) * `vp`.`total`))) AS `ValorComissao`,
        IF((GROUP_CONCAT(DISTINCT `cr`.`Cartao`
                SEPARATOR ',') IS NOT NULL),
            ((-(1) * (GROUP_CONCAT(DISTINCT `cr`.`Cartao`
                SEPARATOR ',') * GROUP_CONCAT(DISTINCT `vp`.`total`
                SEPARATOR ','))) / (GROUP_CONCAT(DISTINCT `v`.`total`
                SEPARATOR ',') - GROUP_CONCAT(DISTINCT `v`.`frete`
                SEPARATOR ','))),
            0E0) AS `Cartao`
    FROM
        (((((((((`mydb`.`venda_has_produto` `vp`
        LEFT JOIN `mydb`.`venda` `v` ON ((`vp`.`idVenda` = `v`.`idVenda`)))
        LEFT JOIN `mydb`.`usuario` `u` ON ((`v`.`idUsuario` = `u`.`idUsuario`)))
        LEFT JOIN `mydb`.`loja` `l` ON ((`vp`.`idLoja` = `l`.`idLoja`)))
        LEFT JOIN (SELECT 
            GROUP_CONCAT(DISTINCT LAST_INSERT_ID(`ehc`.`valorUnid`)
                    SEPARATOR ',') AS `valorunid`,
                GROUP_CONCAT(DISTINCT LAST_INSERT_ID(`ehc`.`desconto`)
                    SEPARATOR ',') AS `desconto`,
                GROUP_CONCAT(DISTINCT LAST_INSERT_ID(`ehc`.`valor`)
                    SEPARATOR ',') AS `valor`,
                LAST_INSERT_ID(`ehc`.`idVendaProduto`) AS `idvendaproduto`
        FROM
            `mydb`.`estoque_has_consumo` `ehc`
        GROUP BY `ehc`.`idVendaProduto`) `ehc` ON ((`vp`.`idVendaProduto` = `ehc`.`idvendaproduto`)))
        LEFT JOIN (SELECT 
            `pf`.`idCompra` AS `idCompra`,
                `pf`.`idProduto` AS `idProduto`,
                GROUP_CONCAT(DISTINCT LAST_INSERT_ID(`pf`.`prcUnitario`)
                    SEPARATOR ',') AS `prcUnitario`
        FROM
            `mydb`.`pedido_fornecedor_has_produto` `pf`
        GROUP BY `pf`.`idCompra` , `pf`.`idProduto`) `pf` ON (((`vp`.`idProduto` = `pf`.`idProduto`)
            AND (`vp`.`idCompra` = `pf`.`idCompra`))))
        LEFT JOIN `mydb`.`fornecedor` `f` ON ((`vp`.`fornecedor` = `f`.`razaoSocial`)))
        LEFT JOIN `mydb`.`profissional` `prof` ON ((`v`.`idProfissional` = `prof`.`idProfissional`)))
        LEFT JOIN `mydb`.`produto` `p` ON ((`vp`.`idProduto` = `p`.`idProduto`)))
        LEFT JOIN (SELECT 
            SUM(`cr`.`valor`) AS `Cartao`, `cr`.`idVenda` AS `idVenda`
        FROM
            `mydb`.`conta_a_receber_has_pagamento` `cr`
        WHERE
            ((`cr`.`status` <> 'CANCELADO')
                AND (`cr`.`tipo` LIKE '%Taxa Cartão')
                AND (`cr`.`desativado` = FALSE))
        GROUP BY `cr`.`idVenda`) `cr` ON ((`cr`.`idVenda` = `vp`.`idVenda`)))
    WHERE
        (`vp`.`status` <> 'CANCELADO')
    GROUP BY DATE_FORMAT(`v`.`data`, '%Y-%m') , `l`.`nomeFantasia` , IF((ISNULL(`ehc`.`valorunid`)
            AND ISNULL(`pf`.`prcUnitario`)
            AND (RIGHT(`vp`.`idVenda`, 1) <> 'R')
            AND (RIGHT(`vp`.`idVenda`, 2) <> 'RD')),
        'sem custo',
        '') , IF(((RIGHT(`vp`.`idVenda`, 1) = 'R')
            OR (RIGHT(`vp`.`idVenda`, 2) = 'RD')),
        'Representacao',
        'Venda') , IF((`cr`.`Cartao` IS NOT NULL),
        ((`cr`.`Cartao` * `vp`.`total`) / (`v`.`total` - `v`.`frete`)),
        0);

-- -----------------------------------------------------
-- View `mydb`.`view_fluxo_caixa`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fluxo_caixa` ;
DROP TABLE IF EXISTS `mydb`.`view_fluxo_caixa`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fluxo_caixa` AS
    SELECT 
        `cp`.`idCompra` AS `Compra/Venda`,
        `cp`.`dataPagamento` AS `Data Pag`,
        `cp`.`dataRealizado` AS `Data`,
        (`cp`.`valorReal` * -(1)) AS `R$`,
        `cp`.`tipo` AS `Tipo`,
        (SELECT 
                CONCAT(`mydb`.`loja_has_conta`.`banco`,
                            ' - ',
                            `mydb`.`loja_has_conta`.`agencia`,
                            ' - ',
                            `mydb`.`loja_has_conta`.`conta`)
            FROM
                `mydb`.`loja_has_conta`
            WHERE
                (`mydb`.`loja_has_conta`.`idConta` = `cp`.`contaDestino`)) AS `contaDestino`,
        `cp`.`contaDestino` AS `idConta`,
        `cp`.`status` AS `Status`,
        'SAIDA' AS `ENT/SAI`
    FROM
        `mydb`.`conta_a_pagar_has_pagamento` `cp`
    WHERE
        ((`cp`.`status` = 'PAGO')
            AND (`cp`.`desativado` = FALSE)) 
    UNION ALL SELECT 
        `cr`.`idVenda` AS `idVenda`,
        `cr`.`dataPagamento` AS `dataPagamento`,
        `cr`.`dataRealizado` AS `Data`,
        `cr`.`valorReal` AS `valor`,
        `cr`.`tipo` AS `tipo`,
        (SELECT 
                CONCAT(`mydb`.`loja_has_conta`.`banco`,
                            ' - ',
                            `mydb`.`loja_has_conta`.`agencia`,
                            ' - ',
                            `mydb`.`loja_has_conta`.`conta`)
            FROM
                `mydb`.`loja_has_conta`
            WHERE
                (`mydb`.`loja_has_conta`.`idConta` = `cr`.`contaDestino`)) AS `contaDestino`,
        `cr`.`contaDestino` AS `idConta`,
        `cr`.`status` AS `status`,
        'ENTRADA' AS `ENTRADA`
    FROM
        `mydb`.`conta_a_receber_has_pagamento` `cr`
    WHERE
        ((`cr`.`status` = 'RECEBIDO')
            AND (`cr`.`desativado` = FALSE))
    ORDER BY `Data Pag`;

-- -----------------------------------------------------
-- View `mydb`.`view_fluxo_caixa2`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fluxo_caixa2` ;
DROP TABLE IF EXISTS `mydb`.`view_fluxo_caixa2`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fluxo_caixa2` AS
    SELECT 
        `cp`.`idCompra` AS `Compra/Venda`,
        `cp`.`dataPagamento` AS `Data Pag`,
        `cp`.`dataRealizado` AS `Data`,
        (`cp`.`valor` * -(1)) AS `R$`,
        `cp`.`tipo` AS `Tipo`,
        (SELECT 
                CONCAT(`mydb`.`loja_has_conta`.`banco`,
                            ' - ',
                            `mydb`.`loja_has_conta`.`agencia`,
                            ' - ',
                            `mydb`.`loja_has_conta`.`conta`)
            FROM
                `mydb`.`loja_has_conta`
            WHERE
                (`mydb`.`loja_has_conta`.`idConta` = `cp`.`contaDestino`)) AS `contaDestino`,
        `cp`.`contaDestino` AS `idConta`,
        `cp`.`status` AS `Status`,
        'SAIDA' AS `ENT/SAI`
    FROM
        `mydb`.`conta_a_pagar_has_pagamento` `cp`
    WHERE
        ((`cp`.`status` <> 'PAGO')
            AND (`cp`.`status` <> 'CANCELADO')
            AND (`cp`.`status` <> 'SUBSTITUIDO')
            AND (`cp`.`desativado` = FALSE)) 
    UNION ALL SELECT 
        `cr`.`idVenda` AS `idVenda`,
        `cr`.`dataPagamento` AS `dataPagamento`,
        `cr`.`dataRealizado` AS `Data`,
        `cr`.`valor` AS `valor`,
        `cr`.`tipo` AS `tipo`,
        (SELECT 
                CONCAT(`mydb`.`loja_has_conta`.`banco`,
                            ' - ',
                            `mydb`.`loja_has_conta`.`agencia`,
                            ' - ',
                            `mydb`.`loja_has_conta`.`conta`)
            FROM
                `mydb`.`loja_has_conta`
            WHERE
                (`mydb`.`loja_has_conta`.`idConta` = `cr`.`contaDestino`)) AS `contaDestino`,
        `cr`.`contaDestino` AS `idConta`,
        `cr`.`status` AS `status`,
        'ENTRADA' AS `ENTRADA`
    FROM
        `mydb`.`conta_a_receber_has_pagamento` `cr`
    WHERE
        ((`cr`.`status` <> 'RECEBIDO')
            AND (`cr`.`status` <> 'CANCELADO')
            AND (`cr`.`status` <> 'SUBSTITUIDO')
            AND (`cr`.`desativado` = FALSE)
            AND (`cr`.`representacao` = FALSE))
    ORDER BY `Data Pag`;

-- -----------------------------------------------------
-- View `mydb`.`view_fluxo_resumo`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fluxo_resumo` ;
DROP TABLE IF EXISTS `mydb`.`view_fluxo_resumo`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fluxo_resumo` AS
    SELECT 
        `v`.`Data Pag` AS `Data Pag`,
        GROUP_CONCAT(DISTINCT `v`.`Data`
            SEPARATOR ',') AS `Data`,
        `v`.`idConta` AS `idConta`,
        SUM(IF((`v`.`ENT/SAI` = 'SAIDA'),
            `v`.`R$`,
            0)) AS `SAIDA`,
        SUM(IF((`v`.`ENT/SAI` = 'ENTRADA'),
            `v`.`R$`,
            0)) AS `ENTRADA`,
        SUM(`v`.`R$`) AS `R$`
    FROM
        `mydb`.`view_fluxo_caixa` `v`
    WHERE
        ((`v`.`Status` = 'PAGO')
            OR (`v`.`Status` = 'RECEBIDO'))
    GROUP BY `v`.`Data Pag` , `v`.`idConta`
    ORDER BY `v`.`Data Pag`;

-- -----------------------------------------------------
-- View `mydb`.`view_fluxo_resumo2`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fluxo_resumo2` ;
DROP TABLE IF EXISTS `mydb`.`view_fluxo_resumo2`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fluxo_resumo2` AS
    SELECT 
        GROUP_CONCAT(DISTINCT `v`.`Data Pag`
            SEPARATOR ',') AS `Data Pag`,
        `v`.`Data` AS `Data`,
        GROUP_CONCAT(DISTINCT `v`.`contaDestino`
            SEPARATOR ',') AS `Conta`,
        `v`.`idConta` AS `idConta`,
        SUM(IF((`v`.`ENT/SAI` = 'SAIDA'),
            `v`.`R$`,
            0)) AS `SAIDA`,
        SUM(IF((`v`.`ENT/SAI` = 'ENTRADA'),
            `v`.`R$`,
            0)) AS `ENTRADA`,
        SUM(`v`.`R$`) AS `R$`
    FROM
        `mydb`.`view_fluxo_caixa` `v`
    WHERE
        ((`v`.`Status` = 'PAGO')
            OR (`v`.`Status` = 'RECEBIDO'))
    GROUP BY `v`.`Data` , `v`.`idConta`
    ORDER BY `v`.`Data`;

-- -----------------------------------------------------
-- View `mydb`.`view_fluxo_resumo3`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fluxo_resumo3` ;
DROP TABLE IF EXISTS `mydb`.`view_fluxo_resumo3`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fluxo_resumo3` AS
    SELECT 
        `v`.`Data Pag` AS `Data Pag`,
        SUM(IF((`v`.`ENT/SAI` = 'SAIDA'),
            `v`.`R$`,
            0)) AS `SAIDA`,
        SUM(IF((`v`.`ENT/SAI` = 'ENTRADA'),
            `v`.`R$`,
            0)) AS `ENTRADA`,
        SUM(`v`.`R$`) AS `R$`
    FROM
        `mydb`.`view_fluxo_caixa2` `v`
    GROUP BY `v`.`Data Pag`
    ORDER BY `v`.`Data Pag`;

-- -----------------------------------------------------
-- View `mydb`.`view_followup_orcamento`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_followup_orcamento` ;
DROP TABLE IF EXISTS `mydb`.`view_followup_orcamento`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_followup_orcamento` AS
    SELECT 
        `ohf`.`idOrcamento` AS `idOrcamento`,
        `u`.`nome` AS `nome`,
        `ohf`.`observacao` AS `observacao`,
        `ohf`.`dataFollowup` AS `dataFollowup`,
        `ohf`.`dataProxFollowup` AS `dataProxFollowup`,
        `ohf`.`semaforo` AS `semaforo`
    FROM
        (`mydb`.`orcamento_has_followup` `ohf`
        LEFT JOIN `mydb`.`usuario` `u` ON ((`ohf`.`idUsuario` = `u`.`idUsuario`)));

-- -----------------------------------------------------
-- View `mydb`.`view_followup_venda`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_followup_venda` ;
DROP TABLE IF EXISTS `mydb`.`view_followup_venda`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_followup_venda` AS
    SELECT 
        `ohf`.`idVenda` AS `idVenda`,
        `u`.`nome` AS `nome`,
        `ohf`.`tipoOperacao` AS `Tipo`,
        `ohf`.`observacao` AS `observacao`,
        `ohf`.`dataFollowup` AS `dataFollowup`
    FROM
        (`mydb`.`venda_has_followup` `ohf`
        LEFT JOIN `mydb`.`usuario` `u` ON ((`ohf`.`idUsuario` = `u`.`idUsuario`)));

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_compra`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_compra` ;
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_compra`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fornecedor_compra` AS
    SELECT 
        `pf`.`fornecedor` AS `fornecedor`,
        GROUP_CONCAT(DISTINCT `pf`.`idVenda`
            SEPARATOR ',') AS `idVenda`,
        SUM((CASE
            WHEN (`pf`.`status` = 'PENDENTE') THEN 1
            ELSE 0
        END)) AS `PEND`,
        SUM((CASE
            WHEN (`pf`.`status` = 'EM COMPRA') THEN 1
            ELSE 0
        END)) AS `CONF`,
        SUM((CASE
            WHEN (`pf`.`status` = 'EM FATURAMENTO') THEN 1
            ELSE 0
        END)) AS `FAT`
    FROM
        `mydb`.`pedido_fornecedor_has_produto` `pf`
    WHERE
        ((`pf`.`status` = 'PENDENTE')
            OR (`pf`.`status` = 'INICIADO')
            OR (`pf`.`status` = 'EM COMPRA')
            OR (`pf`.`status` = 'EM FATURAMENTO'))
    GROUP BY `pf`.`fornecedor` , (`pf`.`idVenda` LIKE '%CAMB%');

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_compra_confirmar`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_compra_confirmar` ;
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_compra_confirmar`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fornecedor_compra_confirmar` AS
    SELECT 
        `pf`.`fornecedor` AS `fornecedor`,
        GROUP_CONCAT(DISTINCT `pf`.`idVenda`
            SEPARATOR ',') AS `idVenda`,
        SUM((CASE
            WHEN (`pf`.`status` = 'EM COMPRA') THEN 1
            ELSE 0
        END)) AS `CONF`
    FROM
        `mydb`.`pedido_fornecedor_has_produto` `pf`
    WHERE
        (`pf`.`status` = 'EM COMPRA')
    GROUP BY `pf`.`fornecedor` , (`pf`.`idVenda` LIKE '%CAMB%');

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_compra_faturar`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_compra_faturar` ;
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_compra_faturar`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fornecedor_compra_faturar` AS
    SELECT 
        `pf`.`fornecedor` AS `fornecedor`,
        GROUP_CONCAT(DISTINCT `pf`.`idVenda`
            SEPARATOR ',') AS `idVenda`,
        SUM((CASE
            WHEN (`pf`.`status` = 'EM FATURAMENTO') THEN 1
            ELSE 0
        END)) AS `FAT`
    FROM
        `mydb`.`pedido_fornecedor_has_produto` `pf`
    WHERE
        (`pf`.`status` = 'EM FATURAMENTO')
    GROUP BY `pf`.`fornecedor` , (`pf`.`idVenda` LIKE '%CAMB%');

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_compra_gerar`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_compra_gerar` ;
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_compra_gerar`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fornecedor_compra_gerar` AS
    SELECT 
        `pf`.`fornecedor` AS `fornecedor`,
        GROUP_CONCAT(DISTINCT `pf`.`idVenda`
            SEPARATOR ',') AS `idVenda`,
        SUM((CASE
            WHEN (`pf`.`status` = 'PENDENTE') THEN 1
            ELSE 0
        END)) AS `PEND`
    FROM
        `mydb`.`pedido_fornecedor_has_produto` `pf`
    WHERE
        (`pf`.`status` = 'PENDENTE')
    GROUP BY `pf`.`fornecedor` , (`pf`.`idVenda` LIKE '%CAMB%');

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_logistica_agendar_coleta`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_logistica_agendar_coleta` ;
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_logistica_agendar_coleta`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fornecedor_logistica_agendar_coleta` AS
    SELECT 
        `subquery`.`fornecedor` AS `Fornecedor`,
        SUM(ISNULL(`subquery`.`idVenda`)) AS `Estoque`,
        SUM((`subquery`.`idVenda` IS NOT NULL)) AS `Venda`
    FROM
        (SELECT 
            GROUP_CONCAT(DISTINCT `pf`.`fornecedor`
                    SEPARATOR ',') AS `fornecedor`,
                `e`.`status` AS `status`,
                GROUP_CONCAT(DISTINCT `pf`.`idVenda`
                    SEPARATOR ',') AS `idVenda`
        FROM
            ((`mydb`.`estoque` `e`
        LEFT JOIN `mydb`.`estoque_has_compra` `ehc` ON ((`e`.`idEstoque` = `ehc`.`idEstoque`)))
        LEFT JOIN `mydb`.`pedido_fornecedor_has_produto` `pf` ON (((`ehc`.`idCompra` = `pf`.`idCompra`)
            AND (`e`.`codComercial` = `pf`.`codComercial`))))
        WHERE
            ((`e`.`status` = 'EM COLETA')
                AND ISNULL(`pf`.`dataPrevColeta`)
                AND (`pf`.`idPedido` IS NOT NULL))
        GROUP BY `e`.`idEstoque`) `subquery`
    GROUP BY `subquery`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_logistica_coleta`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_logistica_coleta` ;
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_logistica_coleta`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fornecedor_logistica_coleta` AS
    SELECT 
        `subquery`.`fornecedor` AS `Fornecedor`,
        SUM((`subquery`.`status` = 'EM COLETA')) AS `COLET`
    FROM
        (SELECT 
            GROUP_CONCAT(DISTINCT `pf`.`fornecedor`
                    SEPARATOR ',') AS `fornecedor`,
                `e`.`status` AS `status`
        FROM
            ((`mydb`.`estoque` `e`
        LEFT JOIN `mydb`.`estoque_has_compra` `ehc` ON ((`e`.`idEstoque` = `ehc`.`idEstoque`)))
        LEFT JOIN `mydb`.`pedido_fornecedor_has_produto` `pf` ON (((`ehc`.`idCompra` = `pf`.`idCompra`)
            AND (`e`.`codComercial` = `pf`.`codComercial`))))
        WHERE
            ((`e`.`status` = 'EM COLETA')
                AND (`pf`.`dataPrevColeta` IS NOT NULL)
                AND (`pf`.`idPedido` IS NOT NULL))
        GROUP BY `e`.`idEstoque`) `subquery`
    GROUP BY `subquery`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_logistica_recebimento`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_logistica_recebimento` ;
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_logistica_recebimento`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fornecedor_logistica_recebimento` AS
    SELECT 
        `subquery`.`fornecedor` AS `Fornecedor`,
        SUM((`subquery`.`status` = 'EM RECEBIMENTO')) AS `RECEB`
    FROM
        (SELECT 
            GROUP_CONCAT(DISTINCT `pf`.`fornecedor`
                    SEPARATOR ',') AS `fornecedor`,
                `e`.`status` AS `status`
        FROM
            ((`mydb`.`estoque` `e`
        LEFT JOIN `mydb`.`estoque_has_compra` `ehc` ON ((`e`.`idEstoque` = `ehc`.`idEstoque`)))
        LEFT JOIN `mydb`.`pedido_fornecedor_has_produto` `pf` ON (((`ehc`.`idCompra` = `pf`.`idCompra`)
            AND (`e`.`codComercial` = `pf`.`codComercial`))))
        WHERE
            ((`e`.`status` = 'EM RECEBIMENTO')
                AND (`pf`.`dataPrevReceb` IS NOT NULL)
                AND (`pf`.`idPedido` IS NOT NULL))
        GROUP BY `e`.`idEstoque`) `subquery`
    GROUP BY `subquery`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_fornecedor_logistica_representacao`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_fornecedor_logistica_representacao` ;
DROP TABLE IF EXISTS `mydb`.`view_fornecedor_logistica_representacao`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_fornecedor_logistica_representacao` AS
    SELECT 
        `pf`.`fornecedor` AS `Fornecedor`, COUNT(0) AS `Produtos`
    FROM
        (`mydb`.`pedido_fornecedor_has_produto` `pf`
        LEFT JOIN `mydb`.`venda` `v` ON ((`pf`.`idVenda` = `v`.`idVenda`)))
    WHERE
        ((`v`.`representacao` = 1)
            AND (`pf`.`status` = 'EM ENTREGA'))
    GROUP BY `pf`.`fornecedor`;

-- -----------------------------------------------------
-- View `mydb`.`view_logistica_representacao`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_logistica_representacao` ;
DROP TABLE IF EXISTS `mydb`.`view_logistica_representacao`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_logistica_representacao` AS
    SELECT 
        CAST(MIN((`v`.`data` + INTERVAL `v`.`prazoEntrega` DAY))
            AS DATE) AS `prazoEntrega`,
        `pf`.`idPedido` AS `idPedido`,
        `pf`.`fornecedor` AS `fornecedor`,
        `pf`.`idVenda` AS `idVenda`,
        `pf`.`idVendaProduto` AS `idVendaProduto`,
        `c`.`nome_razao` AS `cliente`,
        `pf`.`ordemCompra` AS `ordemCompra`,
        `pf`.`descricao` AS `descricao`,
        `pf`.`codComercial` AS `codComercial`,
        `pf`.`quant` AS `quant`,
        `pf`.`un` AS `un`,
        `pf`.`caixas` AS `caixas`,
        `pf`.`kgcx` AS `kgcx`
    FROM
        ((`mydb`.`pedido_fornecedor_has_produto` `pf`
        LEFT JOIN `mydb`.`venda` `v` ON ((`pf`.`idVenda` = `v`.`idVenda`)))
        LEFT JOIN `mydb`.`cliente` `c` ON ((`v`.`idCliente` = `c`.`idCliente`)))
    WHERE
        ((`v`.`representacao` = 1)
            AND (`pf`.`status` = 'EM ENTREGA'))
    GROUP BY `pf`.`idPedido`
    ORDER BY `prazoEntrega`;

-- -----------------------------------------------------
-- View `mydb`.`view_nfe_entrada`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_nfe_entrada` ;
DROP TABLE IF EXISTS `mydb`.`view_nfe_entrada`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_nfe_entrada` AS
    SELECT 
        `n`.`idNFe` AS `idNFe`,
        `n`.`cnpjDest` AS `cnpjDest`,
        GROUP_CONCAT(DISTINCT `pf`.`fornecedor`
            SEPARATOR ', ') AS `Fornecedor`,
        `n`.`numeroNFe` AS `NFe`,
        `n`.`status` AS `Status`,
        GROUP_CONCAT(DISTINCT `e`.`recebidoPor`
            SEPARATOR ',') AS `Recebido Por`,
        GROUP_CONCAT(DISTINCT `pf`.`dataRealReceb`
            SEPARATOR ',') AS `Data Receb`,
        `n`.`gare` AS `GARE`,
        `n`.`gareData` AS `GARE Pago Em`,
        GROUP_CONCAT(DISTINCT `pf`.`ordemCompra`
            ORDER BY `pf`.`ordemCompra` ASC
            SEPARATOR ', ') AS `OC`,
        GROUP_CONCAT(DISTINCT `pf`.`idVenda`
            SEPARATOR ', ') AS `Venda`
    FROM
        ((((`mydb`.`nfe` `n`
        LEFT JOIN `mydb`.`estoque_has_nfe` `ehn` ON ((`n`.`idNFe` = `ehn`.`idNFe`)))
        LEFT JOIN `mydb`.`estoque` `e` ON ((`ehn`.`idEstoque` = `e`.`idEstoque`)))
        LEFT JOIN `mydb`.`estoque_has_compra` `ehc` ON ((`e`.`idEstoque` = `ehc`.`idEstoque`)))
        LEFT JOIN `mydb`.`pedido_fornecedor_has_produto` `pf` ON (((`ehc`.`idCompra` = `pf`.`idCompra`)
            AND (`e`.`codComercial` = `pf`.`codComercial`))))
    WHERE
        (`n`.`tipo` = 'ENTRADA')
    GROUP BY `n`.`idNFe`;

-- -----------------------------------------------------
-- View `mydb`.`view_nfe_saida`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_nfe_saida` ;
DROP TABLE IF EXISTS `mydb`.`view_nfe_saida`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_nfe_saida` AS
    SELECT 
        `n`.`idNFe` AS `idNFe`,
        `n`.`chaveAcesso` AS `chaveAcesso`,
        `n`.`numeroNFe` AS `NFe`,
        `n`.`status` AS `Status`,
        GROUP_CONCAT(DISTINCT `v`.`idVenda`
            SEPARATOR ',') AS `Venda`,
        IF((GROUP_CONCAT(DISTINCT `c`.`pfpj`
                SEPARATOR ',') = 'PF'),
            GROUP_CONCAT(DISTINCT `c`.`cpf`
                SEPARATOR ','),
            GROUP_CONCAT(DISTINCT `c`.`cnpj`
                SEPARATOR ',')) AS `CPF/CNPJ`,
        GROUP_CONCAT(DISTINCT `c`.`nome_razao`
            SEPARATOR ',') AS `Cliente`,
        `n`.`valor` AS `valor`,
        `n`.`created` AS `Criado em`
    FROM
        (((`mydb`.`nfe` `n`
        LEFT JOIN `mydb`.`venda_has_produto` `vp` ON ((`n`.`idNFe` = `vp`.`idNFeSaida`)))
        LEFT JOIN `mydb`.`venda` `v` ON ((`vp`.`idVenda` = `v`.`idVenda`)))
        LEFT JOIN `mydb`.`cliente` `c` ON ((`c`.`idCliente` = `v`.`idCliente`)))
    WHERE
        (`n`.`tipo` = 'SAíDA')
    GROUP BY `n`.`idNFe`
    ORDER BY `n`.`numeroNFe`;

-- -----------------------------------------------------
-- View `mydb`.`view_orcamento`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_orcamento` ;
DROP TABLE IF EXISTS `mydb`.`view_orcamento`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_orcamento` AS
    SELECT 
        `u`.`idLoja` AS `idLoja`,
        `u`.`idUsuario` AS `idUsuario`,
        `o`.`status` AS `Status`,
        (`o`.`validade` - (TO_DAYS(NOW()) - TO_DAYS(`o`.`data`))) AS `Dias restantes`,
        `o`.`idOrcamento` AS `Código`,
        `u`.`nome` AS `Vendedor`,
        `u2`.`nome` AS `Indicou`,
        `c`.`nome_razao` AS `Cliente`,
        `p`.`nome_razao` AS `Profissional`,
        `c`.`tel` AS `Tel`,
        `c`.`telCel` AS `Cel`,
        `c`.`telCom` AS `Tel Com`,
        `o`.`data` AS `Data`,
        `o`.`total` AS `Total`,
        `ohf`.`dataFollowup` AS `Data Followup`,
        `ohf`.`dataProxFollowup` AS `Data Próx Followup`,
        `ohf`.`observacao` AS `Observação`
    FROM
        ((((((`mydb`.`orcamento` `o`
        LEFT JOIN `mydb`.`cliente` `c` ON ((`o`.`idCliente` = `c`.`idCliente`)))
        LEFT JOIN `mydb`.`usuario` `u` ON ((`o`.`idUsuario` = `u`.`idUsuario`)))
        LEFT JOIN `mydb`.`profissional` `p` ON ((`o`.`idProfissional` = `p`.`idProfissional`)))
        LEFT JOIN `mydb`.`usuario` `u2` ON ((`o`.`idUsuarioIndicou` = `u2`.`idUsuario`)))
        LEFT JOIN (SELECT 
            MAX(`mydb`.`orcamento_has_followup`.`idFollowup`) AS `idFollowup`,
                LEFT(`mydb`.`orcamento_has_followup`.`idOrcamento`, 12) AS `idOrcamento`
        FROM
            `mydb`.`orcamento_has_followup`
        GROUP BY LEFT(`mydb`.`orcamento_has_followup`.`idOrcamento`, 12)) `ohf2` ON ((LEFT(`o`.`idOrcamento`, 12) = LEFT(`ohf2`.`idOrcamento`, 12))))
        LEFT JOIN `mydb`.`orcamento_has_followup` `ohf` ON ((`ohf2`.`idFollowup` = `ohf`.`idFollowup`)));

-- -----------------------------------------------------
-- View `mydb`.`view_ordemcompra`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_ordemcompra` ;
DROP TABLE IF EXISTS `mydb`.`view_ordemcompra`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_ordemcompra` AS
    SELECT 
        `pf`.`ordemCompra` AS `OC`,
        GROUP_CONCAT(DISTINCT `pf`.`status`
            SEPARATOR ',') AS `Status`,
        GROUP_CONCAT(DISTINCT `pf`.`idVenda`
            ORDER BY `pf`.`idVenda` ASC
            SEPARATOR ', ') AS `Venda`
    FROM
        `mydb`.`pedido_fornecedor_has_produto` `pf`
    WHERE
        (`pf`.`ordemCompra` IS NOT NULL)
    GROUP BY `pf`.`ordemCompra`;

-- -----------------------------------------------------
-- View `mydb`.`view_ordemcompra_nfe`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_ordemcompra_nfe` ;
DROP TABLE IF EXISTS `mydb`.`view_ordemcompra_nfe`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_ordemcompra_nfe` AS
    SELECT DISTINCT
        `pf`.`ordemCompra` AS `ordemCompra`,
        `n`.`numeroNFe` AS `numeroNFe`,
        `n`.`idNFe` AS `idNFe`
    FROM
        (((`mydb`.`nfe` `n`
        LEFT JOIN `mydb`.`estoque_has_nfe` `ehn` ON ((`n`.`idNFe` = `ehn`.`idNFe`)))
        LEFT JOIN `mydb`.`estoque_has_compra` `ehc` ON ((`ehc`.`idEstoque` = `ehn`.`idEstoque`)))
        LEFT JOIN `mydb`.`pedido_fornecedor_has_produto` `pf` ON ((`pf`.`idCompra` = `ehc`.`idCompra`)))
    WHERE
        (`pf`.`ordemCompra` IS NOT NULL);

-- -----------------------------------------------------
-- View `mydb`.`view_pagamento_loja`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_pagamento_loja` ;
DROP TABLE IF EXISTS `mydb`.`view_pagamento_loja`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_pagamento_loja` AS
    SELECT 
        `fpl`.`idLoja` AS `idLoja`,
        `fpl`.`idPagamento` AS `idPagamento`,
        `fp`.`pagamento` AS `pagamento`
    FROM
        (`mydb`.`forma_pagamento` `fp`
        LEFT JOIN `mydb`.`forma_pagamento_has_loja` `fpl` ON ((`fp`.`idPagamento` = `fpl`.`idPagamento`)));

-- -----------------------------------------------------
-- View `mydb`.`view_pedido_fornecedor_livre`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_pedido_fornecedor_livre` ;
DROP TABLE IF EXISTS `mydb`.`view_pedido_fornecedor_livre`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_pedido_fornecedor_livre` AS
    SELECT 
        `pf`.`idPedido` AS `idPedido`,
        `pf`.`idVenda` AS `idVenda`,
        `pf`.`idVendaProduto` AS `idVendaProduto`,
        `pf`.`ordemCompra` AS `ordemCompra`,
        `pf`.`idCompra` AS `idCompra`,
        `pf`.`descricao` AS `descricao`,
        `pf`.`quant` AS `quant`,
        `pf`.`un` AS `un`,
        `pf`.`caixas` AS `caixas`,
        `pf`.`prcUnitario` AS `prcUnitario`,
        `pf`.`codComercial` AS `codComercial`,
        `pf`.`dataPrevCompra` AS `dataPrevCompra`,
        `pf`.`dataRealCompra` AS `dataRealCompra`,
        `pf`.`dataPrevConf` AS `dataPrevConf`,
        `pf`.`status` AS `status`
    FROM
        `mydb`.`pedido_fornecedor_has_produto` `pf`
    WHERE
        ISNULL(`pf`.`idVendaProduto`);

-- -----------------------------------------------------
-- View `mydb`.`view_preparar_entrega`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_preparar_entrega` ;
DROP TABLE IF EXISTS `mydb`.`view_preparar_entrega`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_preparar_entrega` AS
    SELECT 
        `vhp`.`idEvento` AS `idEvento`,
        `vp`.`idVenda` AS `idVenda`,
        COUNT(`vp`.`idVenda`) AS `produtos`,
        GROUP_CONCAT(DISTINCT `vp`.`idNFeSaida`
            SEPARATOR ',') AS `idNFeSaida`
    FROM
        (`mydb`.`veiculo_has_produto` `vhp`
        LEFT JOIN `mydb`.`venda_has_produto` `vp` ON ((`vhp`.`idVendaProduto` = `vp`.`idVendaProduto`)))
    GROUP BY `vp`.`idVenda` , `vhp`.`idEvento`;

-- -----------------------------------------------------
-- View `mydb`.`view_produto_estoque`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_produto_estoque` ;
DROP TABLE IF EXISTS `mydb`.`view_produto_estoque`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_produto_estoque` AS
    SELECT 
        `ehc`.`idVendaProduto` AS `idVendaProduto`,
        GROUP_CONCAT(DISTINCT `ehc`.`idProduto`
            SEPARATOR ',') AS `idProduto`,
        `vp`.`fornecedor` AS `fornecedor`,
        `vp`.`produto` AS `produto`,
        (`vp`.`total` / `vp`.`quant`) AS `descUnitario`,
        SUM(`ehc`.`caixas`) AS `caixas`,
        SUM((`ehc`.`quant` * -(1))) AS `quant`,
        GROUP_CONCAT(DISTINCT `ehc`.`un`
            SEPARATOR ',') AS `un`,
        `vp`.`unCaixa` AS `unCaixa`,
        GROUP_CONCAT(DISTINCT `ehc`.`codComercial`
            SEPARATOR ',') AS `codComercial`,
        `vp`.`formComercial` AS `formComercial`,
        SUM((((`vp`.`total` / `vp`.`quant`) * `ehc`.`quant`) * -(1))) AS `total`,
        GROUP_CONCAT(DISTINCT `ehc`.`codBarras`
            SEPARATOR ',') AS `codBarras`,
        GROUP_CONCAT(DISTINCT `ehc`.`ncm`
            SEPARATOR ',') AS `ncm`,
        GROUP_CONCAT(DISTINCT `ehc`.`cfop`
            SEPARATOR ',') AS `cfop`,
        GROUP_CONCAT(DISTINCT `ehc`.`unTrib`
            SEPARATOR ',') AS `unTrib`,
        GROUP_CONCAT(DISTINCT `ehc`.`numeroPedido`
            SEPARATOR ',') AS `numeroPedido`,
        GROUP_CONCAT(DISTINCT `ehc`.`itemPedido`
            SEPARATOR ',') AS `itemPedido`,
        GROUP_CONCAT(DISTINCT `ehc`.`tipoICMS`
            SEPARATOR ',') AS `tipoICMS`,
        GROUP_CONCAT(DISTINCT `ehc`.`orig`
            SEPARATOR ',') AS `orig`,
        GROUP_CONCAT(DISTINCT `ehc`.`cstICMS`
            SEPARATOR ',') AS `cstICMS`,
        GROUP_CONCAT(DISTINCT `ehc`.`modBC`
            SEPARATOR ',') AS `modBC`,
        SUM(`ehc`.`vBC`) AS `vBC`,
        GROUP_CONCAT(DISTINCT `ehc`.`pICMS`
            SEPARATOR ',') AS `pICMS`,
        SUM(`ehc`.`vICMS`) AS `vICMS`,
        GROUP_CONCAT(DISTINCT `ehc`.`modBCST`
            SEPARATOR ',') AS `modBCST`,
        GROUP_CONCAT(DISTINCT `ehc`.`pMVAST`
            SEPARATOR ',') AS `pMVAST`,
        SUM(`ehc`.`vBCST`) AS `vBCST`,
        GROUP_CONCAT(DISTINCT `ehc`.`pICMSST`
            SEPARATOR ',') AS `pICMSST`,
        SUM(`ehc`.`vICMSST`) AS `vICMSST`,
        GROUP_CONCAT(DISTINCT `ehc`.`cEnq`
            SEPARATOR ',') AS `cEnq`,
        GROUP_CONCAT(DISTINCT `ehc`.`cstIPI`
            SEPARATOR ',') AS `cstIPI`,
        GROUP_CONCAT(DISTINCT `ehc`.`cstPIS`
            SEPARATOR ',') AS `cstPIS`,
        SUM(`ehc`.`vBCPIS`) AS `vBCPIS`,
        GROUP_CONCAT(DISTINCT `ehc`.`pPIS`
            SEPARATOR ',') AS `pPIS`,
        SUM(`ehc`.`vPIS`) AS `vPIS`,
        GROUP_CONCAT(DISTINCT `ehc`.`cstCOFINS`
            SEPARATOR ',') AS `cstCOFINS`,
        SUM(`ehc`.`vBCCOFINS`) AS `vBCCOFINS`,
        GROUP_CONCAT(DISTINCT `ehc`.`pCOFINS`
            SEPARATOR ',') AS `pCOFINS`,
        SUM(`ehc`.`vCOFINS`) AS `vCOFINS`
    FROM
        (`mydb`.`venda_has_produto` `vp`
        LEFT JOIN `mydb`.`estoque_has_consumo` `ehc` ON ((`vp`.`idVendaProduto` = `ehc`.`idVendaProduto`)))
    WHERE
        ((`ehc`.`idEstoque` IS NOT NULL)
            AND (`ehc`.`status` = 'CONSUMO'))
    GROUP BY `vp`.`idVendaProduto`;

-- -----------------------------------------------------
-- View `mydb`.`view_produto_pendente`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_produto_pendente` ;
DROP TABLE IF EXISTS `mydb`.`view_produto_pendente`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_produto_pendente` AS
    SELECT 
        `v`.`status` AS `status`,
        `v`.`idVendaProduto` AS `idVendaProduto`,
        `v`.`fornecedor` AS `fornecedor`,
        `v`.`idVenda` AS `idVenda`,
        `v`.`idProduto` AS `idProduto`,
        `v`.`produto` AS `produto`,
        `v`.`obs` AS `obs`,
        `p`.`colecao` AS `colecao`,
        `v`.`formComercial` AS `formComercial`,
        `v`.`quant` AS `quant`,
        `v`.`un` AS `un`,
        `p`.`un2` AS `Un2`,
        `v`.`caixas` AS `Caixas`,
        `p`.`kgcx` AS `kgcx`,
        `v`.`codComercial` AS `codComercial`,
        `p`.`codBarras` AS `codBarras`,
        `p`.`custo` AS `custo`,
        `v`.`idCompra` AS `idCompra`
    FROM
        (`mydb`.`venda_has_produto` `v`
        LEFT JOIN `mydb`.`produto` `p` ON ((`v`.`idProduto` = `p`.`idProduto`)));

-- -----------------------------------------------------
-- View `mydb`.`view_produtos_pendentes`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_produtos_pendentes` ;
DROP TABLE IF EXISTS `mydb`.`view_produtos_pendentes`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_produtos_pendentes` AS
    SELECT 
        GROUP_CONCAT(DISTINCT `vp`.`fornecedor`
            SEPARATOR ',') AS `Fornecedor`,
        GROUP_CONCAT(DISTINCT `vp`.`produto`
            SEPARATOR ',') AS `Descrição`,
        GROUP_CONCAT(DISTINCT `vp`.`formComercial`
            SEPARATOR ',') AS `Form`,
        SUM(`vp`.`quant`) AS `Quant`,
        GROUP_CONCAT(DISTINCT `vp`.`un`
            SEPARATOR ',') AS `Un`,
        GROUP_CONCAT(DISTINCT `p`.`un2`
            SEPARATOR ',') AS `Un2`,
        GROUP_CONCAT(DISTINCT `vp`.`caixas`
            SEPARATOR ',') AS `Caixas`,
        `vp`.`codComercial` AS `Cód Com`,
        GROUP_CONCAT(DISTINCT `vp`.`idCompra`
            SEPARATOR ',') AS `idCompra`,
        `vp`.`status` AS `Status`,
        GROUP_CONCAT(DISTINCT `v`.`statusFinanceiro`
            SEPARATOR ',') AS `Financeiro`,
        MONTHNAME(`v`.`data`) AS `Mês`
    FROM
        ((`mydb`.`venda_has_produto` `vp`
        LEFT JOIN `mydb`.`venda` `v` ON ((`v`.`idVenda` = `vp`.`idVenda`)))
        LEFT JOIN `mydb`.`produto` `p` ON ((`p`.`idProduto` = `vp`.`idProduto`)))
    GROUP BY `vp`.`status` , `vp`.`codComercial` , `Mês`;

-- -----------------------------------------------------
-- View `mydb`.`view_recebimento`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_recebimento` ;
DROP TABLE IF EXISTS `mydb`.`view_recebimento`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_recebimento` AS
    SELECT 
        CAST(MIN((`v`.`data` + INTERVAL `v`.`prazoEntrega` DAY))
            AS DATE) AS `prazoEntrega`,
        GROUP_CONCAT(DISTINCT `pf`.`dataPrevReceb`
            SEPARATOR ',') AS `dataPrevReceb`,
        `e`.`idEstoque` AS `idEstoque`,
        `e`.`lote` AS `lote`,
        `e`.`local` AS `local`,
        `e`.`bloco` AS `bloco`,
        GROUP_CONCAT(DISTINCT `pf`.`fornecedor`
            SEPARATOR ',') AS `fornecedor`,
        GROUP_CONCAT(DISTINCT `n`.`numeroNFe`
            SEPARATOR ',') AS `numeroNFe`,
        GROUP_CONCAT(DISTINCT `pf`.`idVenda`
            SEPARATOR ', ') AS `idVenda`,
        GROUP_CONCAT(DISTINCT `pf`.`ordemCompra`
            SEPARATOR ', ') AS `ordemCompra`,
        `e`.`descricao` AS `produto`,
        `e`.`codComercial` AS `codComercial`,
        ABS(`e`.`quant`) AS `quant`,
        `e`.`un` AS `un`,
        `e`.`caixas` AS `caixas`
    FROM
        (((((`mydb`.`estoque` `e`
        LEFT JOIN `mydb`.`estoque_has_compra` `ehc` ON ((`e`.`idEstoque` = `ehc`.`idEstoque`)))
        LEFT JOIN `mydb`.`pedido_fornecedor_has_produto` `pf` ON (((`ehc`.`idCompra` = `pf`.`idCompra`)
            AND (`e`.`codComercial` = `pf`.`codComercial`))))
        LEFT JOIN `mydb`.`estoque_has_nfe` `ehn` ON ((`e`.`idEstoque` = `ehn`.`idEstoque`)))
        LEFT JOIN `mydb`.`nfe` `n` ON ((`ehn`.`idNFe` = `n`.`idNFe`)))
        LEFT JOIN `mydb`.`venda` `v` ON ((`v`.`idVenda` = `pf`.`idVenda`)))
    WHERE
        ((`e`.`status` = 'EM RECEBIMENTO')
            AND (`pf`.`dataPrevReceb` IS NOT NULL)
            AND (`pf`.`idPedido` IS NOT NULL))
    GROUP BY `e`.`idEstoque` DESC
    ORDER BY `prazoEntrega`;

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_relatorio` ;
DROP TABLE IF EXISTS `mydb`.`view_relatorio`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_relatorio` AS
    SELECT 
        GROUP_CONCAT(DISTINCT `l`.`descricao`
            SEPARATOR ',') AS `Loja`,
        GROUP_CONCAT(DISTINCT `u`.`nome`
            SEPARATOR ',') AS `Vendedor`,
        GROUP_CONCAT(DISTINCT `u`.`idUsuario`
            SEPARATOR ',') AS `idUsuario`,
        GROUP_CONCAT(DISTINCT `v`.`idVenda`
            SEPARATOR ',') AS `idVenda`,
        GROUP_CONCAT(DISTINCT DATE_FORMAT(`v`.`data`, '%Y-%m')
            SEPARATOR ',') AS `Mês`,
        SUM(`vp`.`total`) AS `Faturamento`,
        IF((RIGHT(GROUP_CONCAT(DISTINCT `p`.`ui`
                    SEPARATOR ','),
                1) = 'L'),
            ((SUM(`vp`.`total`) * GROUP_CONCAT(DISTINCT `f`.`comissao2`
                SEPARATOR ',')) / 100),
            ((SUM(`vp`.`total`) * GROUP_CONCAT(DISTINCT `f`.`comissao1`
                SEPARATOR ',')) / 100)) AS `Valor Comissão`,
        IF((RIGHT(`p`.`ui`, 1) = 'L'),
            `f`.`comissao2`,
            `f`.`comissao1`) AS `% Comissão`
    FROM
        (((((`mydb`.`venda` `v`
        LEFT JOIN `mydb`.`venda_has_produto` `vp` ON ((`v`.`idVenda` = `vp`.`idVenda`)))
        LEFT JOIN `mydb`.`loja` `l` ON ((`l`.`idLoja` = `v`.`idLoja`)))
        LEFT JOIN `mydb`.`usuario` `u` ON ((`u`.`idUsuario` = `v`.`idUsuario`)))
        LEFT JOIN `mydb`.`produto` `p` ON ((`p`.`idProduto` = `vp`.`idProduto`)))
        LEFT JOIN `mydb`.`fornecedor` `f` ON ((`f`.`idFornecedor` = `p`.`idFornecedor`)))
    WHERE
        (`v`.`status` <> 'CANCELADO')
    GROUP BY `l`.`descricao` , `u`.`nome` , `v`.`idVenda` , IF((RIGHT(`p`.`ui`, 1) = 'L'),
        `f`.`comissao2`,
        `f`.`comissao1`)
    ORDER BY `l`.`descricao` , `u`.`nome` , `v`.`idVenda`;

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_loja`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_relatorio_loja` ;
DROP TABLE IF EXISTS `mydb`.`view_relatorio_loja`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_relatorio_loja` AS
    SELECT 
        `v`.`Loja` AS `Loja`,
        SUM(`v`.`Faturamento`) AS `Faturamento`,
        SUM(`v`.`Valor Comissão`) AS `Valor Comissão`,
        ((SUM(`v`.`Valor Comissão`) / SUM(`v`.`Faturamento`)) * 100) AS `% Comissão`,
        `v`.`Mês` AS `Mês`,
        (GROUP_CONCAT(DISTINCT `x`.`custo`
            SEPARATOR ',') + 0.0) AS `Reposição`
    FROM
        ((((`mydb`.`view_relatorio` `v`
        LEFT JOIN `mydb`.`usuario` `u` ON ((`v`.`Vendedor` = `u`.`nome`)))
        LEFT JOIN `mydb`.`venda` `v2` ON ((`v`.`idVenda` = `v2`.`idVenda`)))
        LEFT JOIN `mydb`.`loja` `l` ON ((`v2`.`idLoja` = `l`.`idLoja`)))
        LEFT JOIN (SELECT 
            `l`.`descricao` AS `loja`,
                DATE_FORMAT(`v`.`data`, '%Y-%m') AS `data`,
                SUM((`vp`.`quant` * `p`.`custo`)) AS `custo`
        FROM
            (((`mydb`.`venda_has_produto` `vp`
        LEFT JOIN `mydb`.`produto` `p` ON ((`vp`.`idProduto` = `p`.`idProduto`)))
        LEFT JOIN `mydb`.`venda` `v` ON ((`vp`.`idVenda` = `v`.`idVenda`)))
        LEFT JOIN `mydb`.`loja` `l` ON ((`v`.`idLoja` = `l`.`idLoja`)))
        WHERE
            (`vp`.`reposicao` = TRUE)
        GROUP BY `l`.`descricao` , DATE_FORMAT(`v`.`data`, '%Y-%m')
        ORDER BY `l`.`descricao` , DATE_FORMAT(`v`.`data`, '%Y-%m')) `x` ON (((`x`.`loja` = `v`.`Loja`)
            AND (`x`.`data` = `v`.`Mês`))))
    GROUP BY `v`.`Loja` , `v`.`Mês`;

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_nfe`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_relatorio_nfe` ;
DROP TABLE IF EXISTS `mydb`.`view_relatorio_nfe`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_relatorio_nfe` AS
    SELECT 
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/ide/cNF') AS `NFe`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/ide/serie') AS `Serie`,
        DATE_FORMAT(EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                        '/nfeProc/NFe/infNFe/ide/dhEmi'),
                '%d/%m/%Y') AS `DataEmi`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vProd') AS `produtos`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vST') AS `icmsst`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vFrete') AS `frete`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vSeg') AS `seguro`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vIPI') AS `ipi`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vOutro') AS `outrasdesp`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vDesc') AS `desconto`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vNF') AS `totalnfe`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vBC') AS `bcicms`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vICMS') AS `icms`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vCOFINS') AS `cofins`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vII') AS `impimp`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/total/ICMSTot/vPIS') AS `pis`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/NFe/infNFe/ide/cNF') AS `tipo`,
        `mydb`.`nfe`.`tipo` AS `e/s`,
        EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                '/nfeProc/protNFe/infProt/nProt') AS `nprotocolo`,
        DATE_FORMAT(EXTRACTVALUE(`mydb`.`nfe`.`xml`,
                        '/nfeProc/protNFe/infProt/dhRecbto'),
                '%d/%m/%Y') AS `dataautor`,
        `mydb`.`nfe`.`created` AS `Criado em`,
        `mydb`.`nfe`.`status` AS `status`
    FROM
        `mydb`.`nfe`
    WHERE
        ((`mydb`.`nfe`.`tipo` = 'SAIDA')
            AND (`mydb`.`nfe`.`status` = 'AUTORIZADO'));

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_pagar`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_relatorio_pagar` ;
DROP TABLE IF EXISTS `mydb`.`view_relatorio_pagar`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_relatorio_pagar` AS
    SELECT 
        `cp`.`dataEmissao` AS `dataEmissao`,
        `cp`.`dataRealizado` AS `dataRealizado`,
        `cp`.`valorReal` AS `valorReal`,
        CONCAT(`lhc`.`banco`,
                ' - ',
                `lhc`.`agencia`,
                ' - ',
                `lhc`.`conta`) AS `Conta`,
        `cp`.`observacao` AS `observacao`,
        `cp`.`contraParte` AS `contraParte`,
        `cp`.`grupo` AS `grupo`,
        `cp`.`subGrupo` AS `subGrupo`
    FROM
        ((`mydb`.`conta_a_pagar_has_pagamento` `cp`
        LEFT JOIN `mydb`.`nfe` `n` ON ((`cp`.`nfe` = `n`.`idNFe`)))
        LEFT JOIN `mydb`.`loja_has_conta` `lhc` ON ((`cp`.`contaDestino` = `lhc`.`idConta`)))
    WHERE
        ((`cp`.`dataRealizado` IS NOT NULL)
            AND (`cp`.`valorReal` IS NOT NULL)
            AND (`cp`.`status` = 'PAGO')
            AND (`cp`.`desativado` = FALSE))
    ORDER BY `cp`.`dataRealizado`;

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_receber`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_relatorio_receber` ;
DROP TABLE IF EXISTS `mydb`.`view_relatorio_receber`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_relatorio_receber` AS
    SELECT 
        `cr`.`dataEmissao` AS `dataEmissao`,
        `cr`.`dataRealizado` AS `dataRealizado`,
        `cr`.`valorReal` AS `valorReal`,
        CONCAT(`lhc`.`banco`,
                ' - ',
                `lhc`.`agencia`,
                ' - ',
                `lhc`.`conta`) AS `Conta`,
        `cr`.`observacao` AS `observacao`,
        `cr`.`contraParte` AS `contraParte`,
        `cr`.`grupo` AS `grupo`,
        `cr`.`subGrupo` AS `subGrupo`
    FROM
        (`mydb`.`conta_a_receber_has_pagamento` `cr`
        LEFT JOIN `mydb`.`loja_has_conta` `lhc` ON ((`cr`.`contaDestino` = `lhc`.`idConta`)))
    WHERE
        ((`cr`.`valorReal` IS NOT NULL)
            AND (`cr`.`status` = 'RECEBIDO')
            AND (`cr`.`desativado` = FALSE))
    ORDER BY `cr`.`dataRealizado`;

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_temp`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_relatorio_temp` ;
DROP TABLE IF EXISTS `mydb`.`view_relatorio_temp`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_relatorio_temp` AS
    SELECT 
        SUM(IF((MONTH(`v`.`data`) = 1),
            `v`.`total`,
            0)) AS `jan`,
        SUM(IF((MONTH(`v`.`data`) = 2),
            `v`.`total`,
            0)) AS `fev`,
        SUM(IF((MONTH(`v`.`data`) = 3),
            `v`.`total`,
            0)) AS `mar`,
        SUM(IF((MONTH(`v`.`data`) = 4),
            `v`.`total`,
            0)) AS `abr`,
        SUM(IF((MONTH(`v`.`data`) = 5),
            `v`.`total`,
            0)) AS `mai`,
        SUM(IF((MONTH(`v`.`data`) = 6),
            `v`.`total`,
            0)) AS `jun`,
        SUM(IF((MONTH(`v`.`data`) = 7),
            `v`.`total`,
            0)) AS `jul`,
        SUM(IF((MONTH(`v`.`data`) = 8),
            `v`.`total`,
            0)) AS `ago`,
        SUM(IF((MONTH(`v`.`data`) = 9),
            `v`.`total`,
            0)) AS `set`,
        SUM(IF((MONTH(`v`.`data`) = 10),
            `v`.`total`,
            0)) AS `out`,
        SUM(IF((MONTH(`v`.`data`) = 11),
            `v`.`total`,
            0)) AS `nov`,
        SUM(IF((MONTH(`v`.`data`) = 12),
            `v`.`total`,
            0)) AS `dez`
    FROM
        `mydb`.`venda` `v`
    GROUP BY DAYOFMONTH(`v`.`data`);

-- -----------------------------------------------------
-- View `mydb`.`view_relatorio_vendedor`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_relatorio_vendedor` ;
DROP TABLE IF EXISTS `mydb`.`view_relatorio_vendedor`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_relatorio_vendedor` AS
    SELECT 
        `v`.`Loja` AS `Loja`,
        GROUP_CONCAT(DISTINCT `v`.`Vendedor`
            SEPARATOR ',') AS `Vendedor`,
        GROUP_CONCAT(DISTINCT `v`.`idUsuario`
            SEPARATOR ',') AS `idUsuario`,
        SUM(`v`.`Faturamento`) AS `Faturamento`,
        SUM(`v`.`Valor Comissão`) AS `Valor Comissão`,
        ((SUM(`v`.`Valor Comissão`) / SUM(`v`.`Faturamento`)) * 100) AS `% Comissão`,
        `v`.`Mês` AS `Mês`
    FROM
        (`mydb`.`view_relatorio` `v`
        LEFT JOIN `mydb`.`usuario` `u` ON ((`v`.`Vendedor` = `u`.`nome`)))
    GROUP BY `u`.`nome` , `v`.`Loja` , `v`.`Mês`
    ORDER BY `v`.`Loja`;

-- -----------------------------------------------------
-- View `mydb`.`view_resumo_relatorio`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_resumo_relatorio` ;
DROP TABLE IF EXISTS `mydb`.`view_resumo_relatorio`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`%` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_resumo_relatorio` AS
    SELECT 
        `l`.`descricao` AS `Loja`,
        `u`.`user` AS `Vendedor`,
        SUM(IF(((DATE_FORMAT(`o`.`data`, '%Y-%m') < MYDATE())
                AND ((`o`.`status` = 'ATIVO')
                OR (`o`.`status` = 'EXPIRADO')
                OR ((`o`.`status` = 'FECHADO')
                AND (DATE_FORMAT(`v`.`data`, '%Y-%m') >= MYDATE()))
                OR ((`o`.`status` = 'PERDIDO')
                AND (DATE_FORMAT(`o`.`lastUpdated`, '%Y-%m') >= MYDATE())))),
            `o`.`total`,
            0)) AS `Validos Anteriores`,
        SUM(IF(((DATE_FORMAT(`o`.`data`, '%Y-%m') = MYDATE())
                AND ISNULL(`o_1`.`data`)),
            `o`.`total`,
            0)) AS `Gerados Mes`,
        SUM(IF(((DATE_FORMAT(`o`.`data`, '%Y-%m') = MYDATE())
                AND (`o_1`.`data` IS NOT NULL)),
            `o`.`total`,
            0)) AS `Revalidados Mes`,
        SUM(IF(((DATE_FORMAT(`v`.`data`, '%Y-%m') = MYDATE())
                AND (`o`.`status` = 'FECHADO')),
            `o`.`total`,
            0)) AS `Fechados Mes`,
        SUM(IF(((DATE_FORMAT(`o`.`lastUpdated`, '%Y-%m') = MYDATE())
                AND (`o`.`status` = 'PERDIDO')),
            `o`.`total`,
            0)) AS `Perdidos Mes`,
        SUM(IF(((DATE_FORMAT(`o`.`data`, '%Y-%m') <= MYDATE())
                AND ((`o`.`status` = 'ATIVO')
                OR (`o`.`status` = 'EXPIRADO')
                OR ((`o`.`status` = 'FECHADO')
                AND (DATE_FORMAT(`v`.`data`, '%Y-%m') > MYDATE()))
                OR ((`o`.`status` = 'PERDIDO')
                AND (DATE_FORMAT(`o`.`lastUpdated`, '%Y-%m') > MYDATE())))),
            `o`.`total`,
            0)) AS `Validos Mes`,
        ((SUM(IF(((DATE_FORMAT(`v`.`data`, '%Y-%m') = MYDATE())
                AND (`o`.`status` = 'FECHADO')),
            `o`.`total`,
            0)) / (SUM(IF(((DATE_FORMAT(`o`.`data`, '%Y-%m') = MYDATE())
                AND ISNULL(`o_1`.`data`)),
            `o`.`total`,
            0)) + SUM(IF(((DATE_FORMAT(`o`.`data`, '%Y-%m') = MYDATE())
                AND (`o_1`.`data` IS NOT NULL)),
            `o`.`total`,
            0)))) * 100) AS `% Fechados / Gerados`,
        ((SUM(IF(((DATE_FORMAT(`v`.`data`, '%Y-%m') = MYDATE())
                AND (`o`.`status` = 'FECHADO')),
            `o`.`total`,
            0)) / ((SUM(IF(((DATE_FORMAT(`o`.`data`, '%Y-%m') < MYDATE())
                AND ((`o`.`status` = 'ATIVO')
                OR (`o`.`status` = 'EXPIRADO')
                OR ((`o`.`status` = 'FECHADO')
                AND (DATE_FORMAT(`v`.`data`, '%Y-%m') >= MYDATE()))
                OR ((`o`.`status` = 'PERDIDO')
                AND (DATE_FORMAT(`o`.`lastUpdated`, '%Y-%m') >= MYDATE())))),
            `o`.`total`,
            0)) + SUM(IF(((DATE_FORMAT(`o`.`data`, '%Y-%m') = MYDATE())
                AND ISNULL(`o_1`.`data`)),
            `o`.`total`,
            0))) + SUM(IF(((DATE_FORMAT(`o`.`data`, '%Y-%m') = MYDATE())
                AND (`o_1`.`data` IS NOT NULL)),
            `o`.`total`,
            0)))) * 100) AS `% Fechados / Carteira`
    FROM
        (((((((`mydb`.`orcamento` `o`
        LEFT JOIN `mydb`.`loja` `l` ON ((`o`.`idLoja` = `l`.`idLoja`)))
        LEFT JOIN `mydb`.`usuario` `u` ON ((`o`.`idUsuario` = `u`.`idUsuario`)))
        LEFT JOIN `mydb`.`cliente` `c` ON ((`o`.`idCliente` = `c`.`idCliente`)))
        LEFT JOIN `mydb`.`profissional` `p` ON ((`o`.`idProfissional` = `p`.`idProfissional`)))
        LEFT JOIN `mydb`.`orcamento` `o_1` ON ((`o`.`replicadoDe` = `o_1`.`idOrcamento`)))
        LEFT JOIN `mydb`.`orcamento_has_followup` `ohf` ON ((`o`.`idOrcamento` = `ohf`.`idOrcamento`)))
        LEFT JOIN `mydb`.`venda` `v` ON ((`o`.`idOrcamento` = `v`.`idOrcamento`)))
    WHERE
        ((`o`.`status` <> 'REPLICADO')
            AND (`o`.`status` <> 'CANCELADO'))
    GROUP BY `l`.`descricao` , `u`.`user`
    ORDER BY `l`.`descricao` , `u`.`user`;

-- -----------------------------------------------------
-- View `mydb`.`view_validacao`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_validacao` ;
DROP TABLE IF EXISTS `mydb`.`view_validacao`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_validacao` AS
    SELECT 
        `v`.`idVenda` AS `idVenda`,
        ((`v`.`subTotalLiq` + `v`.`frete`) - `v`.`descontoReais`) AS `soma`,
        `v`.`total` AS `total`,
        SUM(`c`.`valor`) AS `Pag.`,
        (SUM(`c`.`valor`) - `v`.`total`) AS `Dif`
    FROM
        (`mydb`.`venda` `v`
        LEFT JOIN `mydb`.`conta_a_receber_has_pagamento` `c` ON ((`v`.`idVenda` = `c`.`idVenda`)))
    WHERE
        ((`c`.`tipo` <> 'Crédito')
            AND (NOT ((`v`.`idVenda` LIKE '%D')))
            AND (`c`.`desativado` = FALSE))
    GROUP BY `c`.`idVenda`;

-- -----------------------------------------------------
-- View `mydb`.`view_venda`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_venda` ;
DROP TABLE IF EXISTS `mydb`.`view_venda`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_venda` AS
    SELECT 
        `u`.`idLoja` AS `idLoja`,
        `u`.`idUsuario` AS `idUsuario`,
        `v`.`statusFinanceiro` AS `statusFinanceiro`,
        `v`.`dataFinanceiro` AS `dataFinanceiro`,
        `v`.`status` AS `Status`,
        ((TO_DAYS(`v`.`data`) + `v`.`prazoEntrega`) - TO_DAYS(NOW())) AS `Dias restantes`,
        `v`.`idVenda` AS `Código`,
        `u`.`nome` AS `Vendedor`,
        `u2`.`nome` AS `Indicou`,
        `c`.`nome_razao` AS `Cliente`,
        `p`.`nome_razao` AS `Profissional`,
        `v`.`data` AS `Data`,
        `v`.`total` AS `Total R$`,
        `vhf`.`dataFollowup` AS `Data Followup`,
        `vhf`.`observacao` AS `Observação`
    FROM
        (((((((`mydb`.`venda` `v`
        LEFT JOIN `mydb`.`usuario` `u` ON ((`v`.`idUsuario` = `u`.`idUsuario`)))
        LEFT JOIN `mydb`.`cliente_has_endereco` `e` ON ((`v`.`idEnderecoEntrega` = `e`.`idEndereco`)))
        LEFT JOIN `mydb`.`profissional` `p` ON ((`v`.`idProfissional` = `p`.`idProfissional`)))
        LEFT JOIN `mydb`.`cliente` `c` ON ((`v`.`idCliente` = `c`.`idCliente`)))
        LEFT JOIN `mydb`.`usuario` `u2` ON ((`v`.`idUsuarioIndicou` = `u2`.`idUsuario`)))
        LEFT JOIN (SELECT 
            MAX(`mydb`.`venda_has_followup`.`idFollowup`) AS `idFollowup`,
                LEFT(`mydb`.`venda_has_followup`.`idVenda`, 12) AS `idVenda`
        FROM
            `mydb`.`venda_has_followup`
        GROUP BY LEFT(`mydb`.`venda_has_followup`.`idVenda`, 12)) `vhf2` ON ((LEFT(`vhf2`.`idVenda`, 11) = LEFT(`v`.`idVenda`, 11))))
        LEFT JOIN `mydb`.`venda_has_followup` `vhf` ON ((`vhf2`.`idFollowup` = `vhf`.`idFollowup`)));

-- -----------------------------------------------------
-- View `mydb`.`view_venda_produto`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`view_venda_produto` ;
DROP TABLE IF EXISTS `mydb`.`view_venda_produto`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`view_venda_produto` AS
    SELECT 
        `vp`.`status` AS `status`,
        `v`.`statusFinanceiro` AS `statusFinanceiro`,
        `v`.`dataFinanceiro` AS `dataFinanceiro`,
        `v`.`data` AS `data`,
        `vp`.`fornecedor` AS `fornecedor`,
        `vp`.`idVenda` AS `idVenda`,
        SUBSTRING_INDEX(`u`.`nome`, ' ', 1) AS `Vendedor`,
        `vp`.`produto` AS `produto`,
        `vp`.`obs` AS `obs`,
        `vp`.`caixas` AS `caixas`,
        `vp`.`quant` AS `quant`,
        `vp`.`un` AS `un`,
        `vp`.`codComercial` AS `codComercial`,
        `vp`.`formComercial` AS `formComercial`
    FROM
        ((`mydb`.`venda` `v`
        LEFT JOIN `mydb`.`venda_has_produto` `vp` ON ((`v`.`idVenda` = `vp`.`idVenda`)))
        LEFT JOIN `mydb`.`usuario` `u` ON ((`v`.`idUsuario` = `u`.`idUsuario`)));

-- -----------------------------------------------------
-- View `mydb`.`viewlucroreal`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`viewlucroreal` ;
DROP TABLE IF EXISTS `mydb`.`viewlucroreal`;
USE `mydb`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `mydb`.`viewlucroreal` AS
    SELECT 
        GROUP_CONCAT(DISTINCT DATE_FORMAT(`v`.`data`, '%Y/%m')
            SEPARATOR ',') AS `mes`,
        `l`.`nomeFantasia` AS `nomeFantasia`,
        (SUM(`vp`.`total`) + 0E0) AS `SomaDetotal`,
        (SUM(((`v`.`frete` / (`v`.`total` - `v`.`frete`)) * `vp`.`total`)) + 0E0) AS `somadefrete`,
        SUM(IF(ISNULL(`ehc`.`valor`),
            (`pf`.`prcUnitario` * `vp`.`quant`),
            (`ehc`.`valor` + 0E0))) AS `custo`,
        IF((ISNULL(GROUP_CONCAT(DISTINCT `ehc`.`valor`
                        SEPARATOR ','))
                AND ISNULL(GROUP_CONCAT(DISTINCT `pf`.`prcUnitario`
                        SEPARATOR ','))
                AND (GROUP_CONCAT(DISTINCT `v`.`representacao`
                SEPARATOR ',') = FALSE)),
            'sem custo',
            '') AS `sem custo`,
        (SUM(IF((`v`.`representacao` = TRUE),
            0,
            ((0.58 * 0.18) * IF(ISNULL(`ehc`.`valor`),
                (`pf`.`prcUnitario` * `vp`.`quant`),
                `ehc`.`valor`)))) + 0E0) AS `ICMS`,
        SUM(IF((`v`.`representacao` = TRUE),
            ((((`f`.`comissaoLoja` / 100) * `vp`.`total`) * (1 - 0.0925)) * ((0.25 * 1) + (0.09 * 1))),
            ((((`vp`.`total` - IF(ISNULL(`ehc`.`valor`),
                (`pf`.`prcUnitario` * `vp`.`quant`),
                (`ehc`.`valor` + 0E0))) - ((0.58 * 0.18) * IF(ISNULL(`ehc`.`valor`),
                (`pf`.`prcUnitario` * `vp`.`quant`),
                `ehc`.`valor`))) - ((`vp`.`total` - IF(ISNULL(`ehc`.`valor`),
                (`pf`.`prcUnitario` * `vp`.`quant`),
                `ehc`.`valor`)) * 0.0925)) * ((0.25 * 1) + (0.09 * 1))))) AS `IR+CSLL`,
        SUM(IF((`v`.`representacao` = TRUE),
            (((`f`.`comissaoLoja` / 100) * `vp`.`total`) * 0.0925),
            ((`vp`.`total` - IF(ISNULL(`ehc`.`valor`),
                (`pf`.`prcUnitario` * `vp`.`quant`),
                `ehc`.`valor`)) * 0.0925))) AS `PIS+Cofins+ISS`,
        IF((`v`.`representacao` = TRUE),
            'Representacao',
            'Venda') AS `representacao`,
        SUM(IF((`v`.`representacao` = TRUE),
            ((`vp`.`total` * `f`.`comissaoLoja`) / 100),
            0E0)) AS `Comissao Representacao`,
        (SUM(((`vp`.`total` * `prof`.`comissao`) / 100)) + 0E0) AS `RT`,
        SUM((IF((RIGHT(`p`.`ui`, 1) = 'L'),
            (`f`.`comissao2` / 100),
            (`f`.`comissao1` / 100)) * `vp`.`total`)) AS `ValorComissao`,
        SUM(IF((`cr`.`Cartao` IS NOT NULL),
            ((-(1) * (`cr`.`Cartao` * `vp`.`total`)) / (`v`.`total` - `v`.`frete`)),
            0E0)) AS `Cartao`
    FROM
        (((((((((`mydb`.`venda_has_produto` `vp`
        LEFT JOIN `mydb`.`venda` `v` ON ((`vp`.`idVenda` = `v`.`idVenda`)))
        LEFT JOIN `mydb`.`usuario` `u` ON ((`v`.`idUsuario` = `u`.`idUsuario`)))
        LEFT JOIN `mydb`.`loja` `l` ON ((`vp`.`idLoja` = `l`.`idLoja`)))
        LEFT JOIN (SELECT 
            GROUP_CONCAT(DISTINCT `ehc`.`valorUnid`
                    SEPARATOR ',') AS `valorunid`,
                GROUP_CONCAT(DISTINCT `ehc`.`desconto`
                    SEPARATOR ',') AS `desconto`,
                GROUP_CONCAT(DISTINCT `ehc`.`valor`
                    SEPARATOR ',') AS `valor`,
                `ehc`.`idVendaProduto` AS `idvendaproduto`
        FROM
            `mydb`.`estoque_has_consumo` `ehc`
        GROUP BY `ehc`.`idVendaProduto`) `ehc` ON ((`vp`.`idVendaProduto` = `ehc`.`idvendaproduto`)))
        LEFT JOIN (SELECT 
            `pf`.`idCompra` AS `idCompra`,
                `pf`.`idProduto` AS `idProduto`,
                GROUP_CONCAT(DISTINCT `pf`.`prcUnitario`
                    SEPARATOR ',') AS `prcUnitario`
        FROM
            `mydb`.`pedido_fornecedor_has_produto` `pf`
        GROUP BY `pf`.`idCompra` , `pf`.`idProduto`) `pf` ON (((`vp`.`idProduto` = `pf`.`idProduto`)
            AND (`vp`.`idCompra` = `pf`.`idCompra`))))
        LEFT JOIN `mydb`.`fornecedor` `f` ON ((`vp`.`fornecedor` = `f`.`razaoSocial`)))
        LEFT JOIN `mydb`.`profissional` `prof` ON ((`v`.`idProfissional` = `prof`.`idProfissional`)))
        LEFT JOIN `mydb`.`produto` `p` ON ((`vp`.`idProduto` = `p`.`idProduto`)))
        LEFT JOIN (SELECT 
            SUM(`cr`.`valor`) AS `Cartao`, `cr`.`idVenda` AS `idVenda`
        FROM
            `mydb`.`conta_a_receber_has_pagamento` `cr`
        WHERE
            ((`cr`.`status` <> 'CANCELADO')
                AND (`cr`.`tipo` LIKE '%Taxa Cartão')
                AND (`cr`.`desativado` = FALSE))
        GROUP BY `cr`.`idVenda`) `cr` ON ((`cr`.`idVenda` = `vp`.`idVenda`)))
    WHERE
        ((`vp`.`status` <> 'CANCELADO')
            AND (`v`.`data` >= '2016-12-01'))
    GROUP BY DATE_FORMAT(`v`.`data`, '%Y-%m') , `l`.`nomeFantasia` , IF((ISNULL(`ehc`.`valorunid`)
            AND ISNULL(`pf`.`prcUnitario`)
            AND (`v`.`representacao` = FALSE)),
        'sem custo',
        '') , IF((`v`.`representacao` = TRUE),
        'Representacao',
        'Venda');

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
